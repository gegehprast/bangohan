#!/usr/bin/bash
file="${XDG_RUNTIME_DIR:-/tmp}/Ly8gLi-ags.js"

cat <<EOF | base64 --decode > $file
// ../../../../../usr/share/ags/js/lib/gtk4/app.ts
import GLib2 from "gi://GLib?version=2.0";
import Gtk from "gi://Gtk?version=4.0";
import Astal from "gi://Astal?version=4.0";

// ../../../../../usr/share/ags/js/lib/overrides.ts
function snakeify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1_$2").replaceAll("-", "_").toLowerCase();
}
async function suppress(mod2, patch2) {
  return mod2.then((m) => patch2(m.default)).catch(() => void 0);
}
function patch(proto, prop) {
  Object.defineProperty(proto, prop, {
    get() {
      return this[`get_${snakeify(prop)}`]();
    }
  });
}
await suppress(import("gi://AstalApps"), ({ Apps, Application }) => {
  patch(Apps.prototype, "list");
  patch(Application.prototype, "keywords");
  patch(Application.prototype, "categories");
});
await suppress(import("gi://AstalBattery"), ({ UPower }) => {
  patch(UPower.prototype, "devices");
});
await suppress(import("gi://AstalBluetooth"), ({ Adapter, Bluetooth, Device }) => {
  patch(Adapter.prototype, "uuids");
  patch(Bluetooth.prototype, "adapters");
  patch(Bluetooth.prototype, "devices");
  patch(Device.prototype, "uuids");
});
await suppress(import("gi://AstalHyprland"), ({ Hyprland, Monitor, Workspace }) => {
  patch(Hyprland.prototype, "binds");
  patch(Hyprland.prototype, "monitors");
  patch(Hyprland.prototype, "workspaces");
  patch(Hyprland.prototype, "clients");
  patch(Monitor.prototype, "availableModes");
  patch(Monitor.prototype, "available_modes");
  patch(Workspace.prototype, "clients");
});
await suppress(import("gi://AstalMpris"), ({ Mpris, Player }) => {
  patch(Mpris.prototype, "players");
  patch(Player.prototype, "supported_uri_schemes");
  patch(Player.prototype, "supportedUriSchemes");
  patch(Player.prototype, "supported_mime_types");
  patch(Player.prototype, "supportedMimeTypes");
  patch(Player.prototype, "comments");
});
await suppress(import("gi://AstalNetwork"), ({ Wifi }) => {
  patch(Wifi.prototype, "access_points");
  patch(Wifi.prototype, "accessPoints");
});
await suppress(import("gi://AstalNotifd"), ({ Notifd, Notification: Notification2 }) => {
  patch(Notifd.prototype, "notifications");
  patch(Notification2.prototype, "actions");
});
await suppress(import("gi://AstalPowerProfiles"), ({ PowerProfiles }) => {
  patch(PowerProfiles.prototype, "actions");
});
await suppress(import("gi://AstalWp"), ({ Wp, Audio, Video }) => {
  patch(Wp.prototype, "devices");
  patch(Audio.prototype, "streams");
  patch(Audio.prototype, "recorders");
  patch(Audio.prototype, "microphones");
  patch(Audio.prototype, "speakers");
  patch(Audio.prototype, "devices");
  patch(Video.prototype, "streams");
  patch(Video.prototype, "recorders");
  patch(Video.prototype, "sinks");
  patch(Video.prototype, "sources");
  patch(Video.prototype, "devices");
});
await suppress(import("gi://AstalTray"), ({ Tray: Tray2 }) => {
  patch(Tray2.prototype, "items");
});

// ../../../../../usr/share/ags/js/lib/_app.ts
import { setConsoleLogDomain } from "console";
import { exit, programArgs } from "system";

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/jsx.ts
import GObject2 from "gi://GObject";

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/state.ts
import GObject from "gi://GObject";
import Gio from "gi://Gio";
import GLib from "gi://GLib";

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/util.ts
function kebabify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("_", "-").toLowerCase();
}
function snakeify2(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("-", "_").toLowerCase();
}
function set(obj, prop, value) {
  const key = snakeify2(prop);
  const getter = `get_${key}`;
  const setter = `set_${key}`;
  let current;
  if (getter in obj && typeof obj[getter] === "function") {
    current = obj[getter]();
  } else {
    current = obj[prop];
  }
  if (current !== value) {
    if (setter in obj && typeof obj[setter] === "function") {
      ;
      obj[setter](value);
    } else {
      Object.assign(obj, { [prop]: value });
    }
  }
}

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/state.ts
var Accessor = class _Accessor extends Function {
  static {
    this.$gtype = GObject.TYPE_JSOBJECT;
  }
  #get;
  #subscribe;
  constructor(get, subscribe) {
    super("return arguments.callee._call.apply(arguments.callee, arguments)");
    this.#subscribe = subscribe ?? (() => () => void 0);
    this.#get = get;
  }
  /**
   * Subscribe for value changes.
   * @param callback The function to run when the current value changes.
   * @returns Unsubscribe function.
   */
  subscribe(callback) {
    return this.#subscribe(callback);
  }
  /**
   * @returns The current value.
   */
  get() {
    return this.#get();
  }
  /**
   * Create a new `Accessor` that applies a transformation on its value.
   * @param transform The transformation to apply. Should be a pure function.
   */
  as(transform) {
    return new _Accessor(() => transform(this.#get()), this.#subscribe);
  }
  _call(transform) {
    return this.as(transform);
  }
  toString() {
    return `Accessor<${this.get()}>`;
  }
  [Symbol.toPrimitive]() {
    console.warn("Accessor implicitly converted to a primitive value.");
    return this.toString();
  }
};
function createState(init) {
  let currentValue = init;
  const subscribers = /* @__PURE__ */ new Set();
  const subscribe = (callback) => {
    subscribers.add(callback);
    return () => subscribers.delete(callback);
  };
  const set2 = (newValue) => {
    const value = typeof newValue === "function" ? newValue(currentValue) : newValue;
    if (currentValue !== value) {
      currentValue = value;
      Array.from(subscribers).forEach((cb) => cb());
    }
  };
  return [new Accessor(() => currentValue, subscribe), set2];
}
var empty = Symbol("empty computed value");
function createComputedProducer(fn) {
  const subscribers = /* @__PURE__ */ new Set();
  let value;
  let prevDeps = /* @__PURE__ */ new Map();
  const effect = () => {
    const deps = /* @__PURE__ */ new Set();
    value = fn((v) => (deps.add(v), v.get()));
    const newDeps = /* @__PURE__ */ new Map();
    for (const [dep, unsub] of prevDeps) {
      if (!deps.has(dep)) {
        unsub();
      } else {
        newDeps.set(dep, unsub);
      }
    }
    for (const dep of deps) {
      if (!newDeps.has(dep)) {
        newDeps.set(dep, dep.subscribe(effect));
      }
    }
    prevDeps = newDeps;
    Array.from(subscribers).forEach((cb) => cb());
  };
  const subscribe = (callback) => {
    if (subscribers.size === 0) {
      effect();
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        value = empty;
        for (const [, unsub] of prevDeps) {
          unsub();
        }
      }
    };
  };
  const get = () => {
    return value === empty ? fn((v) => v.get()) : value;
  };
  return new Accessor(get, subscribe);
}
function createComputedArgs(deps, transform) {
  let dispose;
  const subscribers = /* @__PURE__ */ new Set();
  const cache = new Array(deps.length);
  const subscribe = (callback) => {
    if (subscribers.size === 0) {
      dispose = deps.map(
        (dep, i) => dep.subscribe(() => {
          const value = dep.get();
          if (cache[i] !== value) {
            cache[i] = dep.get();
            Array.from(subscribers).forEach((cb) => cb());
          }
        })
      );
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        dispose.map((cb) => cb());
        dispose.length = 0;
        cache.length = 0;
      }
    };
  };
  const get = () => {
    const args = deps.map((dep, i) => {
      if (!cache[i]) {
        cache[i] = dep.get();
      }
      return cache[i];
    });
    return transform ? transform(...args) : args;
  };
  return new Accessor(get, subscribe);
}
function createComputed(...args) {
  const [depsOrProducer, transform] = args;
  if (typeof depsOrProducer === "function") {
    return createComputedProducer(depsOrProducer);
  } else {
    return createComputedArgs(depsOrProducer, transform);
  }
}
function createBinding(object, key) {
  const prop = kebabify(key);
  const subscribe = (callback) => {
    const sig = object instanceof Gio.Settings ? "changed" : "notify";
    const id = object.connect(`${sig}::${prop}`, () => callback());
    return () => object.disconnect(id);
  };
  const get = () => {
    if (object instanceof Gio.Settings) {
      return object.get_value(key).recursiveUnpack();
    } else {
      const getter = `get_${prop.replaceAll("-", "_")}`;
      if (getter in object && typeof object[getter] === "function") {
        return object[getter]();
      }
      if (prop in object) return object[prop];
      if (key in object) return object[key];
      throw Error(`cannot get property ${key}`);
    }
  };
  return new Accessor(get, subscribe);
}

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/env.ts
function configue(conf) {
  return Object.assign(env, conf);
}
function missingImpl() {
  throw Error("missing impl");
}
var env = {
  intrinsicElements: {},
  addChild: missingImpl,
  setCss: missingImpl,
  setClass: missingImpl,
  initProps: () => void 0,
  defaultCleanup: () => void 0
};

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/scope.ts
var Scope = class _Scope {
  constructor(parent) {
    this.contexts = /* @__PURE__ */ new Map();
    this.cleanups = /* @__PURE__ */ new Set();
    this.mounts = /* @__PURE__ */ new Set();
    this.mounted = false;
    this.parent = parent;
  }
  onCleanup(callback) {
    this.cleanups?.add(callback);
  }
  onMount(callback) {
    if (this.parent && !this.parent.mounted) {
      this.parent.onMount(callback);
    } else {
      this.mounts.add(callback);
    }
  }
  run(fn) {
    const prev = _Scope.current;
    _Scope.current = this;
    try {
      return fn();
    } finally {
      this.mounts.forEach((cb) => cb());
      this.mounts.clear();
      this.mounted = true;
      _Scope.current = prev;
    }
  }
  dispose() {
    this.cleanups.forEach((cb) => cb());
    this.cleanups.clear();
    this.contexts.clear();
    delete this.parent;
  }
};
function getScope() {
  const scope = Scope.current;
  if (!scope) {
    throw Error("cannot get scope: out of tracking context");
  }
  return scope;
}
function onCleanup(cleanup) {
  if (!Scope.current) {
    console.error(Error("out of tracking context: will not be able to cleanup"));
  }
  Scope.current?.onCleanup(cleanup);
}
function onMount(cleanup) {
  if (!Scope.current) {
    console.error(Error("cannot attach onMount: out of tracking context"));
  }
  Scope.current?.onMount(cleanup);
}
function createRoot(fn) {
  const scope = new Scope(null);
  return scope.run(() => fn(() => scope.dispose()));
}

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/jsx.ts
var gtkType = Symbol("gtk builder type");
var addChild = Symbol("JSX add child method");
var removeChild = Symbol("JSX add remove method");
function getType(object) {
  return gtkType in object ? object[gtkType] : null;
}
function isGObjectCtor(ctor) {
  return ctor.prototype instanceof GObject2.Object;
}
function isFunctionCtor(ctor) {
  return typeof ctor === "function" && !isGObjectCtor(ctor);
}
function setType(object, type) {
  if (gtkType in object && object[gtkType] !== "") {
    console.warn(`type overriden from ${object[gtkType]} to ${type} on ${object}`);
  }
  Object.assign(object, { [gtkType]: type });
}
function jsx(ctor, inprops, key) {
  const { $, $type, $constructor, children, ...rest } = inprops;
  const props = rest;
  if (key) Object.assign(props, { key });
  env.initProps(props);
  for (const [key2, value] of Object.entries(props)) {
    if (value === void 0) delete props[key2];
  }
  if (typeof ctor === "string") {
    if (ctor in env.intrinsicElements) {
      ctor = env.intrinsicElements[ctor];
    } else {
      throw Error(`unknown intrinsic element "${ctor}"`);
    }
  }
  if (isFunctionCtor(ctor)) {
    const object2 = ctor({ children, ...props });
    if ($type) setType(object2, $type);
    $?.(object2);
    return object2;
  }
  const { css, class: className } = props;
  delete props.css;
  delete props.class;
  const signals = [];
  const bindings = [];
  for (const [key2, value] of Object.entries(props)) {
    if (key2.startsWith("on")) {
      signals.push([key2.slice(2), value]);
      delete props[key2];
    }
    if (value instanceof Accessor) {
      bindings.push([key2, value]);
      props[key2] = value.get();
    }
  }
  const object = $constructor ? $constructor(props) : new ctor(props);
  if ($constructor) Object.assign(object, props);
  if ($type) setType(object, $type);
  if (css) env.setCss(object, css);
  if (className) env.setClass(object, className);
  for (const child of Array.isArray(children) ? children : [children]) {
    if (child === true) {
      console.warn("Trying to add boolean value of `true` as a child.");
      continue;
    }
    if (Array.isArray(child)) {
      for (const ch of child) {
        env.addChild(object, ch, -1);
      }
    } else if (child) {
      env.addChild(object, child, -1);
    }
  }
  const disposeHandlers = signals.map(([sig, handler]) => {
    const name = kebabify(sig);
    const id = name.startsWith("notify-") ? object.connect(`notify::${name.slice(7)}`, handler) : object.connect(kebabify(sig), handler);
    return () => object.disconnect(id);
  });
  const disposeBindings = bindings.map(([prop, binding]) => {
    const dispose = binding.subscribe(() => {
      set(object, prop, binding.get());
    });
    set(object, prop, binding.get());
    return dispose;
  });
  if (disposeBindings.length > 0 || disposeHandlers.length > 0) {
    onCleanup(() => {
      disposeHandlers.forEach((cb) => cb());
      disposeBindings.forEach((cb) => cb());
    });
  }
  $?.(object);
  return object;
}
var jsxs = jsx;

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/Fragment.ts
import GObject3 from "gi://GObject";

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/gnome/signalTracker.ts
var mod = import("resource:///org/gnome/shell/misc/signalTracker.js");
var registerDestroyableType = await mod.then((mod2) => mod2.registerDestroyableType).catch(() => () => void 0);

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/Fragment.ts
var _a, _b, _c;
var Fragment = class _Fragment extends (_c = GObject3.Object, _b = GObject3.signals, _a = GObject3.properties, _c) {
  constructor({ children = [] } = {}) {
    super();
    this.connectionIds = /* @__PURE__ */ new Set();
    this._children = Array.isArray(children) ? children : [children];
  }
  static {
    this[_b] = {
      "destroy": {},
      "child-added": {
        param_types: [GObject3.TYPE_OBJECT, GObject3.TYPE_UINT]
      },
      "child-removed": {
        param_types: [GObject3.TYPE_OBJECT, GObject3.TYPE_UINT]
      }
    };
  }
  static {
    this[_a] = {
      children: GObject3.ParamSpec.jsobject("children", "", "", GObject3.ParamFlags.READABLE)
    };
  }
  static {
    GObject3.registerClass(this);
    registerDestroyableType(this);
  }
  static new(children = []) {
    return new _Fragment({ children });
  }
  get children() {
    return [...this._children];
  }
  addChild(child, index = -1) {
    if (child instanceof _Fragment) {
      throw Error(`nesting Fragments are not yet supported`);
    }
    if (index > 0) {
      this._children = [
        ...this._children.slice(0, index),
        child,
        ...this._children.slice(index)
      ];
    } else {
      this._children.push(child);
      index = this._children.length - 1;
    }
    this.emit("child-added", child, index);
    this.notify("children");
  }
  hasChild(child) {
    return this._children.findIndex((ch) => ch === child) > -1;
  }
  removeChild(child) {
    const index = this._children.findIndex((i) => i === child);
    this._children.splice(index, 1);
    this.emit("child-removed", child, index);
    this.notify("children");
  }
  connect(signal, callback) {
    const id = super.connect(signal, callback);
    this.connectionIds.add(id);
    return id;
  }
  disconnect(id) {
    super.disconnect(id);
    this.connectionIds.delete(id);
  }
  destroy() {
    this.emit("destroy");
    for (const id of this.connectionIds.values()) {
      super.disconnect(id);
    }
  }
};

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/For.ts
function For({
  each,
  children: mkChild,
  cleanup,
  id = (item) => item
}) {
  const currentScope = getScope();
  const map = /* @__PURE__ */ new Map();
  const fragment = new Fragment();
  function remove2({ item, child, index: [index], scope }) {
    scope.dispose();
    if (typeof cleanup === "function") {
      cleanup(child, item, index.get());
    } else if (cleanup !== null) {
      env.defaultCleanup(child);
    }
  }
  function callback(itareable) {
    const items = [...itareable];
    const ids = items.map(id);
    const idSet = new Set(ids);
    for (const [key, value] of map.entries()) {
      fragment.removeChild(value.child);
      if (!idSet.has(key)) {
        remove2(value);
        map.delete(key);
      }
    }
    items.map((item, i) => {
      const key = ids[i];
      if (map.has(key)) {
        const {
          index: [, setIndex],
          child
        } = map.get(key);
        setIndex(i);
        if (fragment.hasChild(child)) {
          console.warn(`duplicate keys found: ${key}`);
        } else {
          fragment.addChild(child);
        }
      } else {
        const [index, setIndex] = createState(i);
        const scope = new Scope(currentScope);
        const child = scope.run(() => mkChild(item, index));
        map.set(key, { item, child, index: [index, setIndex], scope });
        fragment.addChild(child);
      }
    });
  }
  const dispose = each.subscribe(() => {
    callback(each.get());
  });
  callback(each.get());
  onCleanup(() => {
    dispose();
    for (const value of map.values()) {
      remove2(value);
    }
    map.clear();
  });
  return fragment;
}

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/With.ts
function With({
  value,
  children: mkChild,
  cleanup
}) {
  const currentScope = getScope();
  const fragment = new Fragment();
  let scope;
  function remove2(child) {
    fragment.removeChild(child);
    if (scope) scope.dispose();
    if (typeof cleanup === "function") {
      cleanup(child);
    } else if (cleanup !== null) {
      env.defaultCleanup(child);
    }
  }
  function callback(v) {
    for (const child of fragment.children) {
      remove2(child);
    }
    scope = new Scope(currentScope);
    const ch = scope.run(() => mkChild(v));
    if (ch !== "" && ch !== false && ch !== null && ch !== void 0) {
      fragment.addChild(ch);
    }
  }
  const dispose = value.subscribe(() => {
    callback(value.get());
  });
  callback(value.get());
  onCleanup(() => {
    dispose();
    for (const child of fragment.children) {
      remove2(child);
    }
  });
  return fragment;
}

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/This.ts
function This({
  this: self,
  children,
  $type,
  ...props
}) {
  const cleanup = new Array();
  if ($type) setType(self, $type);
  for (const [key, value] of Object.entries(props)) {
    if (key === "css") {
      if (value instanceof Accessor) {
        env.setCss(self, value.get());
        cleanup.push(value.subscribe(() => env.setCss(self, value.get())));
      } else if (typeof value === "string") {
        env.setCss(self, value);
      }
    } else if (key === "class") {
      if (value instanceof Accessor) {
        env.setClass(self, value.get());
        cleanup.push(value.subscribe(() => env.setClass(self, value.get())));
      } else if (typeof value === "string") {
        env.setClass(self, value);
      }
    } else if (key.startsWith("on")) {
      const id = key.startsWith("onNotify") ? self.connect(`notify::${kebabify(key.slice(8))}`, value) : self.connect(kebabify(key.slice(2)), value);
      cleanup.push(() => self.disconnect(id));
    } else if (value instanceof Accessor) {
      set(self, key, value.get());
      cleanup.push(value.subscribe(() => set(self, key, value.get())));
    } else {
      set(self, key, value);
    }
  }
  if (Array.isArray(children)) {
    for (const ch of children) {
      if (ch !== "" && ch !== false && ch !== null && ch !== void 0) {
        env.addChild(self, ch, -1);
      }
    }
  } else {
    const ch = children;
    if (ch !== "" && ch !== false && ch !== null && ch !== void 0) {
      env.addChild(self, ch, -1);
    }
  }
  if (cleanup.length > 0) {
    onCleanup(() => cleanup.forEach((cb) => cb()));
  }
  return self;
}

// ../../../../../usr/share/ags/js/lib/_app.ts
import IO from "gi://AstalIO";
import GObject4 from "gi://GObject";
function mkApp(App) {
  return new class AstalJS extends App {
    static {
      GObject4.registerClass({ GTypeName: "AstalJS" }, this);
    }
    eval(body) {
      return new Promise((res, rej) => {
        try {
          const fn = Function(`return (async function() {
                        ${body.includes(";") ? body : `return ${body};`}
                    })`);
          fn()().then(res).catch(rej);
        } catch (error) {
          rej(error);
        }
      });
    }
    vfunc_shutdown() {
      super.vfunc_shutdown();
      this.disposeRoot?.();
    }
    vfunc_request(msg, conn) {
      if (typeof this.requestHandler === "function") {
        this.requestHandler(msg, (response) => {
          IO.write_sock(conn, String(response), (_, res) => IO.write_sock_finish(res));
        });
      } else {
        super.vfunc_request(msg, conn);
      }
    }
    apply_css(style, reset = false) {
      super.apply_css(style, reset);
    }
    quit(code) {
      super.quit();
      exit(code ?? 0);
    }
    start({ requestHandler, css, hold, main, client, icons, ...cfg } = {}) {
      const app = this;
      client ??= () => {
        print(`Astal instance "${app.instanceName}" already running`);
        exit(1);
      };
      Object.assign(this, cfg);
      setConsoleLogDomain(app.instanceName);
      this.requestHandler = requestHandler;
      app.connect("activate", () => {
        createRoot((dispose) => {
          this.disposeRoot = dispose;
          main?.(...programArgs);
        });
      });
      try {
        app.acquire_socket();
      } catch {
        return client((msg) => IO.send_request(app.instanceName, msg), ...programArgs);
      }
      if (css) this.apply_css(css, false);
      if (icons) app.add_icons(icons);
      hold ??= true;
      if (hold) app.hold();
      app.runAsync([]);
    }
  }();
}

// ../../../../../usr/share/ags/js/lib/gtk4/app.ts
Gtk.init();
GLib2.unsetenv("LD_PRELOAD");
await import("gi://Adw?version=1").then(({ default: Adw }) => Adw.init()).catch(() => void 0);
var app_default = mkApp(Astal.Application);

// ../../../../../usr/share/ags/js/lib/gtk4/index.ts
import Astal2 from "gi://Astal?version=4.0";
import Gtk2 from "gi://Gtk?version=4.0";
import Gdk from "gi://Gdk?version=4.0";

// src/services/Cursor.ts
var Cursor = class {
  constructor() {
    this.DEFAULT = Gdk.Cursor.new_from_name("default", null);
    this.POINTER = Gdk.Cursor.new_from_name("pointer", null);
    this.NOT_ALLOWED = Gdk.Cursor.new_from_name("not-allowed", null);
  }
};
var Cursor_default = Cursor;

// src/services/Theme.ts
import Gio2 from "gi://Gio?version=2.0";
import GLib3 from "gi://GLib?version=2.0";

// ../../../../../usr/share/ags/js/lib/process.ts
import AstalIO from "gi://AstalIO";
var Process = AstalIO.Process;
function execAsync(cmd) {
  return new Promise((resolve, reject) => {
    if (Array.isArray(cmd)) {
      AstalIO.Process.exec_asyncv(cmd, (_, res) => {
        try {
          resolve(AstalIO.Process.exec_asyncv_finish(res));
        } catch (error) {
          reject(error);
        }
      });
    } else {
      AstalIO.Process.exec_async(cmd, (_, res) => {
        try {
          resolve(AstalIO.Process.exec_finish(res));
        } catch (error) {
          reject(error);
        }
      });
    }
  });
}

// ../../../../../usr/share/ags/js/lib/file.ts
import Astal3 from "gi://AstalIO";
function monitorFile(path, callback) {
  return Astal3.monitor_file(path, (file, event) => {
    callback(file, event);
  });
}

// src/services/Theme.ts
var Theme = class {
  constructor() {
    this.dir = `${GLib3.get_home_dir()}/.local/share/bangohan/styles`;
    this.colors = `${this.dir}/colors.scss`;
    this.scss = `${this.dir}/styles.scss`;
    this.css = `${this.dir}/styles.css`;
  }
  async start() {
    await this.compileSass().catch(console.error);
    this.applyTheme();
    this.monitorColorChanges();
  }
  async stop() {
    if (this.fileMonitor) {
      this.fileMonitor.cancel();
      this.fileMonitor = void 0;
    }
  }
  async compileSass() {
    const scss = `${GLib3.get_home_dir()}/.local/share/bangohan/styles/styles.scss`;
    const css = `${GLib3.get_home_dir()}/.local/share/bangohan/styles/styles.css`;
    await execAsync(`sass ${scss} ${css}`).catch(console.error);
  }
  applyTheme() {
    const css = `${GLib3.get_home_dir()}/.local/share/bangohan/styles/styles.css`;
    app_default.apply_css(css, true);
  }
  monitorColorChanges() {
    this.fileMonitor = monitorFile(this.colors, async (file, event) => {
      if (event == Gio2.FileMonitorEvent.CHANGED) {
        await this.compileSass().catch(console.error);
        this.applyTheme();
      }
    });
  }
};
var Theme_default = Theme;

// src/services/Gohan.ts
var Gohan = class {
  constructor() {
    this.Cursor = new Cursor_default();
    this.Theme = new Theme_default();
  }
  async start() {
    await this.Theme.start();
  }
  async stop() {
    await this.Theme.stop();
  }
};
var Gohan_default = new Gohan();

// ../../../../../usr/share/ags/js/lib/gtk4/jsx-runtime.ts
import Gtk4 from "gi://Gtk?version=4.0";
import Astal4 from "gi://Astal?version=4.0";

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/gtk4/jsx-runtime.ts
import Gtk3 from "gi://Gtk?version=4.0";
import Gio3 from "gi://Gio?version=2.0";
import GObject5 from "gi://GObject";
var dummyBuilder = new Gtk3.Builder();
function add(parent, child, _) {
  if (!specialAdd(parent, child, _)) {
    parent.vfunc_add_child(dummyBuilder, child, getType(child));
  }
}
function specialAdd(parent, child, index) {
  if (addChild in parent && typeof parent[addChild] === "function") {
    parent[addChild](child, getType(child), index);
    return true;
  }
  if (child instanceof Gtk3.Adjustment && "set_adjustment" in parent && typeof parent.set_adjustment === "function") {
    parent.set_adjustment(child);
    return true;
  }
  if (child instanceof Gtk3.Widget && parent instanceof Gtk3.Stack && child.name !== "" && child.name !== null && getType(child) === "named") {
    parent.add_named(child, child.name);
    return true;
  }
  if (child instanceof Gtk3.Popover && parent instanceof Gtk3.MenuButton) {
    parent.set_popover(child);
    return true;
  }
  if (child instanceof Gio3.MenuModel && (parent instanceof Gtk3.MenuButton || parent instanceof Gtk3.PopoverMenu)) {
    parent.set_menu_model(child);
    return true;
  }
  if (child instanceof Gio3.MenuItem && parent instanceof Gio3.Menu) {
  }
  if (child instanceof Gtk3.Window && parent instanceof Gtk3.Application) {
    parent.add_window(child);
    return true;
  }
  if (child instanceof Gtk3.TextBuffer && parent instanceof Gtk3.TextView) {
    parent.set_buffer(child);
    return true;
  }
  return false;
}
function remove(parent, child) {
  if (removeChild in parent && typeof parent[removeChild] === "function") {
    parent[removeChild](child);
    return;
  }
  if (parent instanceof Gtk3.Widget && child instanceof Gtk3.EventController) {
    return parent.remove_controller(child);
  }
  if ("set_child" in parent && typeof parent.set_child == "function") {
    return parent.set_child(null);
  }
  if ("remove" in parent && typeof parent.remove == "function") {
    return parent.remove(child);
  }
  throw Error(`cannot remove ${child} from ${parent}`);
}
var { addChild: addChild2, intrinsicElements } = configue({
  setCss(object, css) {
    if (!(object instanceof Gtk3.Widget)) {
      return console.warn(Error(`cannot set css on ${object}`));
    }
    const ctx = object.get_style_context();
    let provider;
    const setter = (css2) => {
      if (!css2.includes("{") || !css2.includes("}")) {
        css2 = `* { ${css2} }`;
      }
      if (provider) ctx.remove_provider(provider);
      provider = new Gtk3.CssProvider();
      provider.load_from_string(css2);
      ctx.add_provider(provider, Gtk3.STYLE_PROVIDER_PRIORITY_USER);
    };
    if (css instanceof Accessor) {
      setter(css.get());
      const dispose = css.subscribe(() => setter(css.get()));
      onCleanup(dispose);
    } else {
      setter(css);
    }
  },
  setClass(object, className) {
    if (!(object instanceof Gtk3.Widget)) {
      return console.warn(Error(`cannot set className on ${object}`));
    }
    if (className instanceof Accessor) {
      object.cssClasses = className.get().split(/\s+/);
      const dispose = className.subscribe(
        () => object.cssClasses = className.get().split(/\s+/)
      );
      onCleanup(dispose);
    } else {
      object.set_css_classes(className.split(/\s+/));
    }
  },
  addChild(parent, child, index = -1) {
    if (!(child instanceof GObject5.Object)) {
      child = Gtk3.Label.new(String(child));
    }
    if (specialAdd(parent, child, index)) return;
    if (parent instanceof Fragment) {
      parent.addChild(child);
      return;
    }
    if (parent instanceof Gtk3.Buildable) {
      if (child instanceof Fragment) {
        for (const ch of child.children) {
          add(parent, ch, index);
        }
        child.connect("child-added", (_, ch, index2) => {
          if (!(ch instanceof GObject5.Object)) {
            console.error(TypeError(`cannot add ${ch} to ${parent}`));
            return;
          }
          addChild2(parent, ch, index2);
        });
        child.connect("child-removed", (_, ch) => {
          if (!(ch instanceof GObject5.Object)) {
            console.error(TypeError(`cannot remove ${ch} from ${parent}`));
            return;
          }
          remove(parent, ch);
        });
        onCleanup(() => child.destroy());
        return;
      }
      add(parent, child, index);
      return;
    }
    throw Error(`cannot add ${child} to ${parent}`);
  }
});

// ../../../../../usr/share/ags/js/lib/gtk4/jsx-runtime.ts
Object.assign(intrinsicElements, {
  box: Gtk4.Box,
  button: Gtk4.Button,
  centerbox: Gtk4.CenterBox,
  // circularprogress: Astal.CircularProgress,
  drawingarea: Gtk4.DrawingArea,
  entry: Gtk4.Entry,
  image: Gtk4.Image,
  label: Gtk4.Label,
  levelbar: Gtk4.LevelBar,
  menubutton: Gtk4.MenuButton,
  overlay: Gtk4.Overlay,
  popover: Gtk4.Popover,
  revealer: Gtk4.Revealer,
  scrolledwindow: Gtk4.ScrolledWindow,
  slider: Astal4.Slider,
  stack: Gtk4.Stack,
  switch: Gtk4.Switch,
  togglebutton: Gtk4.ToggleButton,
  window: Astal4.Window
});

// src/widgets/Bar/Modules/Launcher.tsx
var Launcher = () => {
  return /* @__PURE__ */ jsx("box", { cssClasses: ["Launcher"], children: /* @__PURE__ */ jsx(
    "button",
    {
      onClicked: () => {
        execAsync(
          `rofi -show drun -run-command "uwsm app -- {cmd}"`
        );
      },
      tooltipText: "Launcher",
      cursor: Gohan_default.Cursor.POINTER,
      children: /* @__PURE__ */ jsx(
        "label",
        {
          cssClasses: ["icon"],
          label: "\u{F08C7}"
        }
      )
    }
  ) });
};
var Launcher_default = Launcher;

// src/widgets/commons/Separator.tsx
var Separator = (props) => {
  const classess = props.cssClasses || [];
  const orientation = props.orientation === void 0 ? Gtk2.Orientation.VERTICAL : props.orientation;
  if (orientation === Gtk2.Orientation.HORIZONTAL) {
    classess.push("Horizontal");
  } else {
    classess.push("Vertical");
  }
  return /* @__PURE__ */ jsx(
    Gtk2.Separator,
    {
      ...props,
      cssClasses: classess,
      orientation,
      visible: props.visible || true
    }
  );
};
var Separator_default = Separator;

// src/widgets/Bar/Modules/Workspaces.tsx
import AstalHyprland from "gi://AstalHyprland?version=0.1";
var maxWorkspaces = 5;
var workspacesNum = Array.from({ length: maxWorkspaces - 1 }, (_, i) => i);
var hyprland = AstalHyprland.get_default();
function createWorkspaces(focusedId) {
  return workspacesNum.map((i) => {
    let workspace = hyprland.get_workspace(i + 1);
    if (!workspace) {
      workspace = AstalHyprland.Workspace.dummy(i + 1, null);
    }
    return {
      real: workspace,
      focused: workspace.id === focusedId,
      occupied: workspace.get_clients().length > 0
    };
  });
}
var Workspaces = () => {
  const focused = createBinding(hyprland, "focused_workspace");
  const gohanWorkspaces = createComputed([focused], (focused2) => {
    const gohanWs = createWorkspaces(focused2?.id);
    const index = gohanWs.findIndex((ws) => ws.real.id === focused2.id);
    if (index === -1) {
      if (gohanWs.length >= maxWorkspaces) {
        gohanWs.pop();
      }
      gohanWs.push({
        real: focused2,
        focused: true,
        occupied: focused2.get_clients().length > 0
      });
    } else {
      let lastWorkspace = hyprland.get_workspace(maxWorkspaces);
      if (!lastWorkspace) {
        lastWorkspace = AstalHyprland.Workspace.dummy(
          maxWorkspaces,
          null
        );
      }
      gohanWs.push({
        real: lastWorkspace,
        focused: false,
        occupied: lastWorkspace.get_clients().length > 0
      });
    }
    return gohanWs;
  });
  return /* @__PURE__ */ jsx(
    "box",
    {
      cssClasses: ["Workspaces"],
      halign: Gtk2.Align.CENTER,
      valign: Gtk2.Align.BASELINE,
      spacing: 1,
      children: /* @__PURE__ */ jsx(For, { each: gohanWorkspaces, children: (workspace) => /* @__PURE__ */ jsx(WorkspaceButton, { workspace }) })
    }
  );
};
var WorkspaceButton = ({ workspace }) => {
  const classes = [
    "WorkspaceButton",
    workspace.focused ? "Focused" : "",
    workspace.occupied ? "Occupied" : ""
  ];
  const workspaceName = workspace.real.name === "10" ? "0" : workspace.real.name;
  const tooltipText = `Switch to workspace ${workspaceName}`;
  const cursor = workspace.focused ? Gohan_default.Cursor.DEFAULT : Gohan_default.Cursor.POINTER;
  return /* @__PURE__ */ jsx(
    "button",
    {
      cssClasses: classes,
      onClicked: () => {
        if (workspace.real.id === hyprland.get_focused_workspace()?.id) {
          return;
        }
        workspace.real.focus();
      },
      tooltipText,
      cursor,
      children: /* @__PURE__ */ jsx(
        "label",
        {
          label: workspaceName,
          cssClasses: ["WorkspaceButtonLabel"],
          halign: Gtk2.Align.START,
          useUnderline: true
        }
      )
    }
  );
};
var Workspaces_default = Workspaces;

// src/widgets/Bar/Modules/FocusedClient.tsx
import Pango from "gi://Pango?version=1.0";
import AstalHyprland2 from "gi://AstalHyprland?version=0.1";
var hyprland2 = AstalHyprland2.get_default();
var FocusedClient = () => {
  const focusedClient = createBinding(hyprland2, "focusedClient");
  return /* @__PURE__ */ jsx(
    "box",
    {
      name: "FocusedClient",
      cssClasses: ["FocusedClient"],
      halign: Gtk2.Align.CENTER,
      valign: Gtk2.Align.BASELINE,
      children: /* @__PURE__ */ jsx(With, { value: focusedClient, children: (focusedClient2) => /* @__PURE__ */ jsx(
        "label",
        {
          label: focusedClient2?.title,
          cssClasses: ["FocusedClientLabel"],
          maxWidthChars: 48,
          ellipsize: Pango.EllipsizeMode.MIDDLE
        }
      ) })
    }
  );
};
var FocusedClient_default = FocusedClient;

// src/widgets/Bar/Left.tsx
var Left = () => {
  return /* @__PURE__ */ jsxs(
    "box",
    {
      name: `Left`,
      cssClasses: ["Section", "Left"],
      hexpand: true,
      halign: Gtk2.Align.START,
      valign: Gtk2.Align.CENTER,
      spacing: 10,
      children: [
        /* @__PURE__ */ jsx(Launcher_default, {}),
        /* @__PURE__ */ jsx(Separator_default, { orientation: Gtk2.Orientation.VERTICAL }),
        /* @__PURE__ */ jsx(Workspaces_default, {}),
        /* @__PURE__ */ jsx(Separator_default, { orientation: Gtk2.Orientation.VERTICAL }),
        /* @__PURE__ */ jsx(FocusedClient_default, {})
      ]
    }
  );
};
var Left_default = Left;

// src/widgets/Bar/Modules/Tray.tsx
import AstalTray from "gi://AstalTray?version=0.1";
function getSearchWith(item) {
  const title = item.title;
  const tooltipMarkup = item.tooltipMarkup;
  return title && title.length ? title : tooltipMarkup;
}
function toTitleCase(str) {
  return str.toLowerCase().split(" ").map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(" ");
}
function getTooltipMarkup(item) {
  return toTitleCase(getSearchWith(item));
}
var CUSTOM_ICONS = {
  discord: "\uF1FF",
  steam: "\uF1B6",
  spotify: "\uF1BC"
};
var USE_CUSTOM_ICONS = [/steam/i, /discord/i, /spotify/i];
function shouldUseCustomIcon(searchWith) {
  return USE_CUSTOM_ICONS.some((regex) => searchWith.match(regex));
}
function getCustomIcon(item) {
  const searchWith = getSearchWith(item);
  const shouldUse = shouldUseCustomIcon(searchWith);
  if (!shouldUse) {
    return null;
  }
  for (const [key, value] of Object.entries(CUSTOM_ICONS)) {
    if (searchWith.match(new RegExp(key, "i"))) {
      return value;
    }
  }
  return "\u{F082B}";
}
var tray = AstalTray.get_default();
var Tray = () => {
  const items = createBinding(tray, "items");
  const init = (btn, item) => {
    btn.menuModel = item.menuModel;
    btn.insert_action_group("dbusmenu", item.actionGroup);
    item.connect("notify::action-group", () => {
      btn.insert_action_group("dbusmenu", item.actionGroup);
    });
  };
  return /* @__PURE__ */ jsx(
    "box",
    {
      cssClasses: ["Tray"],
      spacing: 10,
      halign: Gtk2.Align.CENTER,
      valign: Gtk2.Align.CENTER,
      children: /* @__PURE__ */ jsx(For, { each: items, children: (item) => /* @__PURE__ */ jsxs(
        "menubutton",
        {
          $: (self) => init(self, item),
          cursor: Gohan_default.Cursor.POINTER,
          tooltipMarkup: getTooltipMarkup(item),
          cssClasses: ["TrayMenuButton"],
          halign: Gtk2.Align.CENTER,
          valign: Gtk2.Align.CENTER,
          children: [
            /* @__PURE__ */ jsx(ImageIcon, { item }),
            Gtk2.PopoverMenu.new_from_model(item.menuModel)
          ]
        }
      ) })
    }
  );
};
var ImageIcon = ({ item }) => {
  const customIcon = getCustomIcon(item);
  if (customIcon) {
    return /* @__PURE__ */ jsx("label", { cssClasses: ["icon", "TrayLabelIcon"], label: customIcon });
  }
  return /* @__PURE__ */ jsx(
    "image",
    {
      gicon: item.gicon,
      cssClasses: ["icon", "TrayImageIcon"],
      pixelSize: 16
    }
  );
};
var Tray_default = Tray;

// src/widgets/Bar/Center.tsx
var Center = () => {
  return /* @__PURE__ */ jsx(
    "box",
    {
      name: `Center`,
      cssClasses: ["Section", "Center"],
      hexpand: true,
      halign: Gtk2.Align.CENTER,
      valign: Gtk2.Align.CENTER,
      spacing: 10,
      children: /* @__PURE__ */ jsx(Tray_default, {})
    }
  );
};
var Center_default = Center;

// src/widgets/Bar/Modules/Battery.tsx
import AstalBattery from "gi://AstalBattery?version=0.1";
async function setPowerProfile(profile) {
  await execAsync(`powerprofilesctl set ${profile}`);
}
async function getPowerProfile() {
  const p = await execAsync(`powerprofilesctl get`);
  return p;
}
var profiles = [
  {
    name: "Power Saver",
    value: "power-saver"
  },
  {
    name: "Balanced",
    value: "balanced"
  },
  {
    name: "Performance",
    value: "performance"
  }
];
var bat = AstalBattery.get_default();
var Battery = () => {
  const [activePorfile, setActiveProfile] = createState("balanced");
  onMount(() => {
    async function init() {
      const profile = await getPowerProfile();
      setActiveProfile(profile);
    }
    init();
  });
  return /* @__PURE__ */ jsx(
    "box",
    {
      cssClasses: ["Battery"],
      hexpand: true,
      cursor: Gohan_default.Cursor.POINTER,
      children: /* @__PURE__ */ jsxs("menubutton", { cssClasses: ["BatteryMenu"], children: [
        /* @__PURE__ */ jsxs("box", { spacing: 5, children: [
          /* @__PURE__ */ jsx(
            "image",
            {
              iconName: createBinding(bat, "batteryIconName"),
              cssClasses: ["icon", "Icon"]
            }
          ),
          /* @__PURE__ */ jsx(
            "label",
            {
              label: createBinding(bat, "batteryLevel").as(
                (v) => `${(v * 100).toFixed(0)}%`
              ),
              cssClasses: ["Percentage"]
            }
          )
        ] }),
        /* @__PURE__ */ jsx("popover", { children: /* @__PURE__ */ jsx("box", { orientation: Gtk2.Orientation.VERTICAL, spacing: 10, children: profiles.map((profile) => /* @__PURE__ */ jsx(
          "button",
          {
            onClicked: async () => {
              await setPowerProfile(
                profile.value
              );
              setActiveProfile(
                profile.value
              );
            },
            halign: Gtk2.Align.START,
            cssClasses: activePorfile.as((p) => {
              return p === profile.value ? ["ProfileButton", "Active"] : ["ProfileButton"];
            }),
            children: /* @__PURE__ */ jsx("label", { label: profile.name })
          }
        )) }) })
      ] })
    }
  );
};
var Battery_default = Battery;

// ../../../../../usr/share/ags/js/lib/time.ts
import AstalIO2 from "gi://AstalIO";
var Time = AstalIO2.Time;
function interval(interval2, callback) {
  return AstalIO2.Time.interval(interval2, () => void callback?.());
}
function createPoll(init, ival, execOrFn, transform) {
  let currentValue = init;
  let timer = null;
  const subscribers = /* @__PURE__ */ new Set();
  function subscribe(callback) {
    function set2(value) {
      if (value !== currentValue) {
        currentValue = value;
        subscribers.forEach((cb) => cb());
      }
    }
    if (subscribers.size === 0) {
      timer = interval(ival, () => {
        if (typeof execOrFn === "function") {
          const value = execOrFn(currentValue);
          if (value instanceof Promise) {
            value.then(set2);
          } else {
            set2(value);
          }
        } else {
          execAsync(execOrFn).then((stdout) => {
            set2(transform ? transform(stdout, currentValue) : stdout);
          });
        }
      });
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        timer?.cancel();
        timer = null;
      }
    };
  }
  return new Accessor(() => currentValue, subscribe);
}

// src/widgets/Bar/Modules/Time.tsx
var Time2 = () => {
  const datetime = createPoll(
    "Hello",
    1e3,
    "date +'%b %d, %H:%M'",
    (output) => {
      return output.trim();
    }
  );
  return /* @__PURE__ */ jsx("box", { cssClasses: ["Time"], hexpand: true, spacing: 10, children: /* @__PURE__ */ jsx("label", { label: datetime }) });
};
var Time_default = Time2;

// src/widgets/Bar/Modules/Volume.tsx
import AstalWp from "gi://AstalWp?version=0.1";
var wp = AstalWp.get_default();
var Volume = () => {
  const speakers = createBinding(wp.audio, "speakers");
  return /* @__PURE__ */ jsx(
    "box",
    {
      cssClasses: ["Volume"],
      hexpand: true,
      cursor: Gohan_default.Cursor.POINTER,
      children: /* @__PURE__ */ jsxs("menubutton", { cssClasses: ["VolumeMenu"], children: [
        /* @__PURE__ */ jsxs("box", { spacing: 5, children: [
          /* @__PURE__ */ jsx(
            "image",
            {
              iconName: createBinding(
                wp.defaultSpeaker,
                "volumeIcon"
              ),
              cssClasses: ["icon", "Icon"]
            }
          ),
          /* @__PURE__ */ jsx(
            "label",
            {
              label: createBinding(wp.defaultSpeaker, "volume").as(
                (v) => `${(v * 100).toFixed(0)}%`
              ),
              cssClasses: ["Percentage"]
            }
          )
        ] }),
        /* @__PURE__ */ jsx("popover", { children: /* @__PURE__ */ jsx("box", { orientation: Gtk2.Orientation.VERTICAL, spacing: 10, children: /* @__PURE__ */ jsx(For, { each: speakers, children: (speaker) => /* @__PURE__ */ jsx(
          "button",
          {
            onClicked: () => speaker.set_is_default(true),
            halign: Gtk2.Align.START,
            cssClasses: createBinding(
              speaker,
              "isDefault"
            ).as((isDefault) => {
              return isDefault ? ["SpeakerButton", "Active"] : ["SpeakerButton"];
            }),
            children: /* @__PURE__ */ jsx("label", { label: speaker.description })
          }
        ) }) }) })
      ] })
    }
  );
};
var Volume_default = Volume;

// src/widgets/Bar/Right.tsx
var Right = () => {
  return /* @__PURE__ */ jsxs(
    "box",
    {
      name: `Right`,
      cssClasses: ["Section", "Right"],
      hexpand: true,
      halign: Gtk2.Align.END,
      valign: Gtk2.Align.CENTER,
      spacing: 10,
      children: [
        /* @__PURE__ */ jsx(Volume_default, {}),
        /* @__PURE__ */ jsx(Battery_default, {}),
        /* @__PURE__ */ jsx(Time_default, {})
      ]
    }
  );
};
var Right_default = Right;

// src/widgets/Bar/Bar.tsx
var Bar = ({ gdkmonitor }) => {
  const { TOP, LEFT, RIGHT } = Astal2.WindowAnchor;
  return /* @__PURE__ */ jsx(
    "window",
    {
      cssClasses: ["Bar"],
      gdkmonitor,
      exclusivity: Astal2.Exclusivity.EXCLUSIVE,
      anchor: TOP | LEFT | RIGHT,
      application: app_default,
      visible: true,
      children: /* @__PURE__ */ jsxs(
        "centerbox",
        {
          cssClasses: ["Container", "shadow", "rounded", "bordered"],
          children: [
            /* @__PURE__ */ jsx(Left_default, { $type: "start" }),
            /* @__PURE__ */ jsx(Center_default, { $type: "center" }),
            /* @__PURE__ */ jsx(Right_default, { $type: "end" })
          ]
        }
      )
    }
  );
};
var Bar_default = Bar;

// src/widgets/Notification/NotificationWindow.tsx
import AstalNotifd3 from "gi://AstalNotifd?version=0.1";

// src/widgets/Notification/NotificationItem.tsx
import AstalNotifd from "gi://AstalNotifd?version=0.1";

// src/widgets/Notification/Header.tsx
var Header = ({ notification }) => {
  return /* @__PURE__ */ jsxs(
    "box",
    {
      cssClasses: ["Header"],
      valign: Gtk2.Align.CENTER,
      vexpand: false,
      hexpand: false,
      children: [
        /* @__PURE__ */ jsxs(
          "box",
          {
            cssClasses: ["HeaderLeft"],
            halign: Gtk2.Align.START,
            vexpand: false,
            spacing: 5,
            children: [
              /* @__PURE__ */ jsx(
                "image",
                {
                  cssClasses: ["AppIcon"],
                  iconName: notification.data.appIcon || notification.data.desktopEntry,
                  pixelSize: 18
                }
              ),
              /* @__PURE__ */ jsx(
                "label",
                {
                  cssClasses: ["HeaderLabel"],
                  label: `${notification.data.appName || "Unknown App"}`
                }
              ),
              /* @__PURE__ */ jsx(
                "label",
                {
                  cssClasses: ["HeaderLabel"],
                  label: notification.tick[0].as((t) => t.toString())
                }
              )
            ]
          }
        ),
        /* @__PURE__ */ jsxs(
          "box",
          {
            cssClasses: ["HeaderRight"],
            halign: Gtk2.Align.END,
            hexpand: true,
            spacing: 5,
            children: [
              /* @__PURE__ */ jsx(
                "label",
                {
                  cssClasses: ["HeaderTime"],
                  label: new Date(
                    notification.data.time * 1e3
                  ).toLocaleDateString("en-US", {
                    day: "2-digit",
                    month: "short",
                    hour: "2-digit",
                    minute: "2-digit",
                    second: void 0,
                    hour12: false
                  })
                }
              ),
              /* @__PURE__ */ jsx(
                "button",
                {
                  cssClasses: ["CloseButton"],
                  tooltipText: "Close Notification",
                  onClicked: () => {
                    notification.data.dismiss();
                  },
                  children: /* @__PURE__ */ jsx("label", { cssClasses: ["Icon"], label: "\u2715" })
                }
              )
            ]
          }
        )
      ]
    }
  );
};
var Header_default = Header;

// src/widgets/Notification/Body.tsx
import GLib4 from "gi://GLib?version=2.0";
import Pango2 from "gi://Pango?version=1.0";
var isIcon = (icon) => {
  const iconTheme = new Gtk2.IconTheme();
  return iconTheme.has_icon(icon);
};
var fileExists = (path) => GLib4.file_test(path, GLib4.FileTest.EXISTS);
var MARKUP_SAFE_APPS = ["Hyprshot"];
var Body = ({ notification }) => {
  return /* @__PURE__ */ jsxs(
    "box",
    {
      cssClasses: ["Body"],
      valign: Gtk2.Align.CENTER,
      spacing: 10,
      vexpand: true,
      children: [
        notification.data.image && fileExists(notification.data.image) && /* @__PURE__ */ jsx("box", { valign: Gtk2.Align.CENTER, cssClasses: ["Image"], children: /* @__PURE__ */ jsx(
          "image",
          {
            file: notification.data.image,
            overflow: Gtk2.Overflow.HIDDEN,
            pixelSize: 48
          }
        ) }),
        notification.data.image && isIcon(notification.data.image) && /* @__PURE__ */ jsx("box", { cssClasses: ["Icon"], valign: Gtk2.Align.CENTER, children: /* @__PURE__ */ jsx(
          "image",
          {
            iconName: notification.data.image,
            pixelSize: 48,
            halign: Gtk2.Align.CENTER,
            valign: Gtk2.Align.CENTER
          }
        ) }),
        notification.data.appIcon && fileExists(notification.data.appIcon) && /* @__PURE__ */ jsx("box", { cssClasses: ["Icon"], valign: Gtk2.Align.CENTER, children: /* @__PURE__ */ jsx(
          "image",
          {
            file: notification.data.appIcon,
            pixelSize: 48,
            halign: Gtk2.Align.CENTER,
            valign: Gtk2.Align.CENTER
          }
        ) }),
        /* @__PURE__ */ jsxs(
          "box",
          {
            hexpand: true,
            orientation: Gtk2.Orientation.VERTICAL,
            valign: Gtk2.Align.CENTER,
            spacing: 5,
            children: [
              /* @__PURE__ */ jsx(
                "label",
                {
                  ellipsize: Pango2.EllipsizeMode.END,
                  maxWidthChars: 30,
                  cssClasses: ["Summary"],
                  halign: Gtk2.Align.START,
                  xalign: 0,
                  label: notification.data.summary
                }
              ),
              notification.data.body && /* @__PURE__ */ jsx(
                "label",
                {
                  cssClasses: ["Body"],
                  maxWidthChars: 30,
                  wrap: true,
                  halign: Gtk2.Align.START,
                  xalign: 0,
                  label: notification.data.body,
                  useMarkup: MARKUP_SAFE_APPS.includes(
                    notification.data.appName
                  )
                }
              )
            ]
          }
        )
      ]
    }
  );
};
var Body_default = Body;

// src/widgets/Notification/Footer.tsx
import AstalHyprland3 from "gi://AstalHyprland?version=0.1";
var hyprland3 = AstalHyprland3.get_default();
var customActions = {
  Hyprshot: [
    {
      label: "Open",
      action: (notification) => {
        const file = notification.appIcon;
        const dir = file.substring(0, file.lastIndexOf("/"));
        execAsync(`xdg-open ${dir}`);
      }
    },
    {
      label: "View",
      action: (notification) => {
        const file = notification.appIcon;
        execAsync(`xdg-open ${file}`);
      }
    },
    {
      label: "Edit",
      action: (notification) => {
        const file = notification.appIcon;
        execAsync(`swappy -f ${file}`);
      }
    }
  ]
};
var Footer = ({ notification }) => {
  const actions = notification.data.get_actions();
  return /* @__PURE__ */ jsx("box", { cssClasses: ["Footer"], children: /* @__PURE__ */ jsxs("box", { cssClasses: ["Actions"], spacing: 6, children: [
    actions.map((action) => /* @__PURE__ */ jsx(
      "button",
      {
        hexpand: true,
        onClicked: () => {
          notification.data.invoke(action.id);
          notification.data.dismiss();
          const clients = hyprland3.get_clients();
          const client = clients.find(
            (c) => c.class.toLowerCase().includes(
              notification.data.appName.toLowerCase()
            )
          );
          if (client) {
            hyprland3.dispatch(
              "focuswindow",
              `class:${client.class}`
            );
          }
        },
        children: /* @__PURE__ */ jsx(
          "label",
          {
            label: action.label,
            halign: Gtk2.Align.CENTER,
            hexpand: true
          }
        )
      }
    )),
    customActions[notification.data.appName]?.map(
      (customAction) => /* @__PURE__ */ jsx(
        "button",
        {
          hexpand: true,
          onClicked: () => {
            customAction.action(notification.data);
            notification.data.dismiss();
          },
          children: /* @__PURE__ */ jsx(
            "label",
            {
              label: customAction.label,
              halign: Gtk2.Align.CENTER,
              hexpand: true
            }
          )
        }
      )
    )
  ] }) });
};
var Footer_default = Footer;

// src/widgets/Notification/NotificationItem.tsx
function startTransition(self) {
  self.set_opacity(0);
  self.show();
  const durationMs = 300;
  const intervalMs = 16;
  const increment = intervalMs / durationMs;
  const int = interval(intervalMs, () => {
    const opacity = self.get_opacity();
    if (opacity >= 1) {
      int.cancel();
    }
    self.set_opacity(opacity + increment);
  });
}
var NotificationItem = ({ notification }) => {
  return /* @__PURE__ */ jsxs(
    "box",
    {
      cssClasses: ["NotificationItem", "shadow", "rounded", "bordered"],
      orientation: Gtk2.Orientation.VERTICAL,
      $: (self) => {
        self.set_css_classes([
          "NotificationItem",
          "shadow",
          "rounded",
          "bordered",
          notification.data.urgency === AstalNotifd.Urgency.CRITICAL ? "Critical" : ""
        ]);
        startTransition(self);
        const mouseEnter = new Gtk2.EventControllerMotion();
        mouseEnter.connect("enter", () => {
          notification.stopTicking();
        });
        mouseEnter.connect("leave", () => {
          notification.startTicking();
        });
        self.add_controller(mouseEnter);
      },
      spacing: 5,
      vexpand: false,
      children: [
        /* @__PURE__ */ jsx(Header_default, { notification }),
        /* @__PURE__ */ jsx(Body_default, { notification }),
        /* @__PURE__ */ jsx(Footer_default, { notification })
      ]
    }
  );
};
var NotificationItem_default = NotificationItem;

// src/services/Notification.ts
import AstalNotifd2 from "gi://AstalNotifd?version=0.1";
var TICK = 10;
var CRITICAL_TICK = 30;
var Notification = class {
  constructor(id, data, dismisser) {
    this.id = id;
    this.data = data;
    this.tick = createState(
      data.urgency === AstalNotifd2.Urgency.CRITICAL ? CRITICAL_TICK : TICK
    );
    this.dismisser = dismisser;
    this.startTicking();
  }
  startTicking() {
    if (this.interval) {
      return;
    }
    this.interval = interval(1e3, () => {
      const currentTick = this.tick[0].get();
      if (currentTick <= 0) {
        this.interval?.cancel();
        this.interval = void 0;
        this.dismisser(this.id);
      } else {
        this.tick[1](currentTick - 1);
      }
    });
  }
  stopTicking() {
    this.interval?.cancel();
    this.interval = void 0;
    this.tick[1](TICK);
  }
};
var Notification_default = Notification;

// src/widgets/Notification/NotificationWindow.tsx
var notifd = AstalNotifd3.get_default();
var NotificationWindow = ({ gdkmonitor }) => {
  const { BOTTOM, RIGHT } = Astal2.WindowAnchor;
  const [notifications, setNotifications] = createState([]);
  const reversed = createComputed([notifications], (ns) => {
    const newN = [...ns];
    newN.reverse();
    return newN;
  });
  const notifiedHandler = notifd.connect("notified", (_, id, replaced) => {
    const notification = notifd.get_notification(id);
    if (replaced && notifications.get().some((n) => n.id === id)) {
      const olds = [...notifications.get()];
      const news = [
        ...olds.filter((n) => n.id !== id),
        new Notification_default(notification.id, notification, (id2) => {
          setNotifications((ns) => ns.filter((n) => n.id !== id2));
        })
      ];
      setNotifications(news);
    } else {
      setNotifications((ns) => [
        ...ns,
        new Notification_default(notification.id, notification, (id2) => {
          setNotifications((ns2) => ns2.filter((n) => n.id !== id2));
        })
      ]);
    }
  });
  const resolvedHandler = notifd.connect("resolved", (_, id) => {
    setNotifications((ns) => ns.filter((n) => n.id !== id));
  });
  onCleanup(() => {
    notifd.disconnect(notifiedHandler);
    notifd.disconnect(resolvedHandler);
  });
  return /* @__PURE__ */ jsx(
    "window",
    {
      $: (self) => {
        onCleanup(() => self.destroy());
      },
      name: "NotificationWindow",
      cssClasses: ["NotificationWindow", "debug"],
      gdkmonitor,
      anchor: BOTTOM | RIGHT,
      visible: notifications((ns) => ns.length > 0),
      children: /* @__PURE__ */ jsxs(
        "box",
        {
          orientation: Gtk2.Orientation.VERTICAL,
          spacing: 10,
          valign: Gtk2.Align.END,
          children: [
            /* @__PURE__ */ jsx(
              "box",
              {
                orientation: Gtk2.Orientation.VERTICAL,
                spacing: 10,
                valign: Gtk2.Align.END,
                children: /* @__PURE__ */ jsx(For, { each: reversed, children: (notification) => /* @__PURE__ */ jsx(NotificationItem_default, { notification }) })
              }
            ),
            /* @__PURE__ */ jsxs("box", { spacing: 10, children: [
              /* @__PURE__ */ jsx(
                "button",
                {
                  cssClasses: [
                    "bg-main",
                    "rounded",
                    "shadow",
                    "bordered"
                  ],
                  onClicked: () => {
                    setNotifications([]);
                  },
                  cursor: Gohan_default.Cursor.POINTER,
                  hexpand: true,
                  children: "Close All"
                }
              ),
              /* @__PURE__ */ jsx(
                "button",
                {
                  cssClasses: [
                    "bg-main",
                    "rounded",
                    "shadow",
                    "bordered"
                  ],
                  onClicked: () => {
                    const notifications2 = notifd.get_notifications();
                    notifications2.forEach((n) => n.dismiss());
                  },
                  cursor: Gohan_default.Cursor.POINTER,
                  hexpand: true,
                  children: "Dismiss All"
                }
              )
            ] })
          ]
        }
      )
    }
  );
};
var NotificationWindow_default = NotificationWindow;

// src/app.tsx
Gohan_default.start();
app_default.start({
  instanceName: "BanGohan",
  gtkTheme: "Adwaita",
  main() {
    const theme = new Theme_default();
    theme.start();
    const monitors = createBinding(app_default, "monitors");
    return /* @__PURE__ */ jsx(For, { each: monitors, children: (monitor) => /* @__PURE__ */ jsxs(This, { this: app_default, children: [
      /* @__PURE__ */ jsx(Bar_default, { gdkmonitor: monitor }),
      /* @__PURE__ */ jsx(NotificationWindow_default, { gdkmonitor: monitor })
    ] }) });
  }
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvZ3RrNC9hcHAudHMiLCAiLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvb3ZlcnJpZGVzLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL19hcHAudHMiLCAiLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9qc3gudHMiLCAiLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9zdGF0ZS50cyIsICIuLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvdXRpbC50cyIsICIuLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L2Vudi50cyIsICIuLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L3Njb3BlLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvRnJhZ21lbnQudHMiLCAiLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2dub21lL3NpZ25hbFRyYWNrZXIudHMiLCAiLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9Gb3IudHMiLCAiLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9XaXRoLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvVGhpcy50cyIsICIuLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9ndGs0L2luZGV4LnRzIiwgInNyYy9zZXJ2aWNlcy9DdXJzb3IudHMiLCAic3JjL3NlcnZpY2VzL1RoZW1lLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL3Byb2Nlc3MudHMiLCAiLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvZmlsZS50cyIsICJzcmMvc2VydmljZXMvR29oYW4udHMiLCAiLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvZ3RrNC9qc3gtcnVudGltZS50cyIsICIuLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvZ3RrNC9qc3gtcnVudGltZS50cyIsICJzcmMvd2lkZ2V0cy9CYXIvTW9kdWxlcy9MYXVuY2hlci50c3giLCAic3JjL3dpZGdldHMvY29tbW9ucy9TZXBhcmF0b3IudHN4IiwgInNyYy93aWRnZXRzL0Jhci9Nb2R1bGVzL1dvcmtzcGFjZXMudHN4IiwgInNyYy93aWRnZXRzL0Jhci9Nb2R1bGVzL0ZvY3VzZWRDbGllbnQudHN4IiwgInNyYy93aWRnZXRzL0Jhci9MZWZ0LnRzeCIsICJzcmMvd2lkZ2V0cy9CYXIvTW9kdWxlcy9UcmF5LnRzeCIsICJzcmMvd2lkZ2V0cy9CYXIvQ2VudGVyLnRzeCIsICJzcmMvd2lkZ2V0cy9CYXIvTW9kdWxlcy9CYXR0ZXJ5LnRzeCIsICIuLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi90aW1lLnRzIiwgInNyYy93aWRnZXRzL0Jhci9Nb2R1bGVzL1RpbWUudHN4IiwgInNyYy93aWRnZXRzL0Jhci9Nb2R1bGVzL1ZvbHVtZS50c3giLCAic3JjL3dpZGdldHMvQmFyL1JpZ2h0LnRzeCIsICJzcmMvd2lkZ2V0cy9CYXIvQmFyLnRzeCIsICJzcmMvd2lkZ2V0cy9Ob3RpZmljYXRpb24vTm90aWZpY2F0aW9uV2luZG93LnRzeCIsICJzcmMvd2lkZ2V0cy9Ob3RpZmljYXRpb24vTm90aWZpY2F0aW9uSXRlbS50c3giLCAic3JjL3dpZGdldHMvTm90aWZpY2F0aW9uL0hlYWRlci50c3giLCAic3JjL3dpZGdldHMvTm90aWZpY2F0aW9uL0JvZHkudHN4IiwgInNyYy93aWRnZXRzL05vdGlmaWNhdGlvbi9Gb290ZXIudHN4IiwgInNyYy9zZXJ2aWNlcy9Ob3RpZmljYXRpb24udHMiLCAic3JjL2FwcC50c3giXSwKICAic291cmNlc0NvbnRlbnQiOiBbImltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWI/dmVyc2lvbj0yLjBcIlxuaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEFzdGFsIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcbmltcG9ydCB7IG1rQXBwIH0gZnJvbSBcIi4uL19hcHAuanNcIlxuXG5HdGsuaW5pdCgpXG5cbi8vIHN0b3AgdGhpcyBmcm9tIGxlYWtpbmcgaW50byBzdWJwcm9jZXNzZXNcbi8vIGFuZCBnaW8gbGF1bmNoIGludm9jYXRpb25zXG5HTGliLnVuc2V0ZW52KFwiTERfUFJFTE9BRFwiKVxuXG4vLyB1c2VycyBtaWdodCB3YW50IHRvIHVzZSBBZHdhaXRhIGluIHdoaWNoIGNhc2UgaXQgaGFzIHRvIGJlIGluaXRpYWxpemVkXG4vLyBpdCBtaWdodCBiZSBjb21tb24gcGl0ZmFsbCB0byBmb3JnZXQgaXQgYmVjYXVzZSBgQXBwYCBpcyBub3QgYEFkdy5BcHBsaWNhdGlvbmBcbmF3YWl0IGltcG9ydChcImdpOi8vQWR3P3ZlcnNpb249MVwiKS50aGVuKCh7IGRlZmF1bHQ6IEFkdyB9KSA9PiBBZHcuaW5pdCgpKS5jYXRjaCgoKSA9PiB2b2lkIDApXG5cbmV4cG9ydCBkZWZhdWx0IG1rQXBwKEFzdGFsLkFwcGxpY2F0aW9uKVxuIiwgIi8qKlxuICogV29ya2Fyb3VuZCBmb3IgXCJDYW4ndCBjb252ZXJ0IG5vbi1udWxsIHBvaW50ZXIgdG8gSlMgdmFsdWUgXCJcbiAqL1xuXG5leHBvcnQge31cblxuZnVuY3Rpb24gc25ha2VpZnkoc3RyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyXG4gICAgICAgIC5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCBcIiQxXyQyXCIpXG4gICAgICAgIC5yZXBsYWNlQWxsKFwiLVwiLCBcIl9cIilcbiAgICAgICAgLnRvTG93ZXJDYXNlKClcbn1cblxuYXN5bmMgZnVuY3Rpb24gc3VwcHJlc3M8VD4obW9kOiBQcm9taXNlPHsgZGVmYXVsdDogVCB9PiwgcGF0Y2g6IChtOiBUKSA9PiB2b2lkKSB7XG4gICAgcmV0dXJuIG1vZC50aGVuKChtKSA9PiBwYXRjaChtLmRlZmF1bHQpKS5jYXRjaCgoKSA9PiB2b2lkIDApXG59XG5cbmZ1bmN0aW9uIHBhdGNoPFAgZXh0ZW5kcyBvYmplY3Q+KHByb3RvOiBQLCBwcm9wOiBFeHRyYWN0PGtleW9mIFAsIHN0cmluZz4pIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkocHJvdG8sIHByb3AsIHtcbiAgICAgICAgZ2V0KCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXNbYGdldF8ke3NuYWtlaWZ5KHByb3ApfWBdKClcbiAgICAgICAgfSxcbiAgICB9KVxufVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsQXBwc1wiKSwgKHsgQXBwcywgQXBwbGljYXRpb24gfSkgPT4ge1xuICAgIHBhdGNoKEFwcHMucHJvdG90eXBlLCBcImxpc3RcIilcbiAgICBwYXRjaChBcHBsaWNhdGlvbi5wcm90b3R5cGUsIFwia2V5d29yZHNcIilcbiAgICBwYXRjaChBcHBsaWNhdGlvbi5wcm90b3R5cGUsIFwiY2F0ZWdvcmllc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEJhdHRlcnlcIiksICh7IFVQb3dlciB9KSA9PiB7XG4gICAgcGF0Y2goVVBvd2VyLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsQmx1ZXRvb3RoXCIpLCAoeyBBZGFwdGVyLCBCbHVldG9vdGgsIERldmljZSB9KSA9PiB7XG4gICAgcGF0Y2goQWRhcHRlci5wcm90b3R5cGUsIFwidXVpZHNcIilcbiAgICBwYXRjaChCbHVldG9vdGgucHJvdG90eXBlLCBcImFkYXB0ZXJzXCIpXG4gICAgcGF0Y2goQmx1ZXRvb3RoLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG4gICAgcGF0Y2goRGV2aWNlLnByb3RvdHlwZSwgXCJ1dWlkc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEh5cHJsYW5kXCIpLCAoeyBIeXBybGFuZCwgTW9uaXRvciwgV29ya3NwYWNlIH0pID0+IHtcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwiYmluZHNcIilcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwibW9uaXRvcnNcIilcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwid29ya3NwYWNlc1wiKVxuICAgIHBhdGNoKEh5cHJsYW5kLnByb3RvdHlwZSwgXCJjbGllbnRzXCIpXG4gICAgcGF0Y2goTW9uaXRvci5wcm90b3R5cGUsIFwiYXZhaWxhYmxlTW9kZXNcIilcbiAgICBwYXRjaChNb25pdG9yLnByb3RvdHlwZSwgXCJhdmFpbGFibGVfbW9kZXNcIilcbiAgICBwYXRjaChXb3Jrc3BhY2UucHJvdG90eXBlLCBcImNsaWVudHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxNcHJpc1wiKSwgKHsgTXByaXMsIFBsYXllciB9KSA9PiB7XG4gICAgcGF0Y2goTXByaXMucHJvdG90eXBlLCBcInBsYXllcnNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZF91cmlfc2NoZW1lc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwic3VwcG9ydGVkVXJpU2NoZW1lc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwic3VwcG9ydGVkX21pbWVfdHlwZXNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZE1pbWVUeXBlc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwiY29tbWVudHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxOZXR3b3JrXCIpLCAoeyBXaWZpIH0pID0+IHtcbiAgICBwYXRjaChXaWZpLnByb3RvdHlwZSwgXCJhY2Nlc3NfcG9pbnRzXCIpXG4gICAgcGF0Y2goV2lmaS5wcm90b3R5cGUsIFwiYWNjZXNzUG9pbnRzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsTm90aWZkXCIpLCAoeyBOb3RpZmQsIE5vdGlmaWNhdGlvbiB9KSA9PiB7XG4gICAgcGF0Y2goTm90aWZkLnByb3RvdHlwZSwgXCJub3RpZmljYXRpb25zXCIpXG4gICAgcGF0Y2goTm90aWZpY2F0aW9uLnByb3RvdHlwZSwgXCJhY3Rpb25zXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsUG93ZXJQcm9maWxlc1wiKSwgKHsgUG93ZXJQcm9maWxlcyB9KSA9PiB7XG4gICAgcGF0Y2goUG93ZXJQcm9maWxlcy5wcm90b3R5cGUsIFwiYWN0aW9uc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbFdwXCIpLCAoeyBXcCwgQXVkaW8sIFZpZGVvIH0pID0+IHtcbiAgICBwYXRjaChXcC5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJzdHJlYW1zXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcInJlY29yZGVyc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJtaWNyb3Bob25lc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJzcGVha2Vyc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcInN0cmVhbXNcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwicmVjb3JkZXJzXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcInNpbmtzXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcInNvdXJjZXNcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbFRyYXlcIiksICh7IFRyYXkgfSkgPT4ge1xuICAgIHBhdGNoKFRyYXkucHJvdG90eXBlLCBcIml0ZW1zXCIpXG59KVxuIiwgImltcG9ydCBcIi4vb3ZlcnJpZGVzLmpzXCJcbmltcG9ydCB7IHNldENvbnNvbGVMb2dEb21haW4gfSBmcm9tIFwiY29uc29sZVwiXG5pbXBvcnQgeyBleGl0LCBwcm9ncmFtQXJncyB9IGZyb20gXCJzeXN0ZW1cIlxuaW1wb3J0IHsgY3JlYXRlUm9vdCB9IGZyb20gXCJnbmltXCJcbmltcG9ydCBJTyBmcm9tIFwiZ2k6Ly9Bc3RhbElPXCJcbmltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IEdpbyBmcm9tIFwiZ2k6Ly9HaW8/dmVyc2lvbj0yLjBcIlxuaW1wb3J0IHR5cGUgQXN0YWwzIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249My4wXCJcbmltcG9ydCB0eXBlIEFzdGFsNCBmcm9tIFwiZ2k6Ly9Bc3RhbD92ZXJzaW9uPTQuMFwiXG5cbnR5cGUgQ29uZmlnID0gUGFydGlhbDx7XG4gICAgaW5zdGFuY2VOYW1lOiBzdHJpbmdcbiAgICBjc3M6IHN0cmluZ1xuICAgIGljb25zOiBzdHJpbmdcbiAgICBndGtUaGVtZTogc3RyaW5nXG4gICAgaWNvblRoZW1lOiBzdHJpbmdcbiAgICBjdXJzb3JUaGVtZTogc3RyaW5nXG4gICAgaG9sZDogYm9vbGVhblxuICAgIHJlcXVlc3RIYW5kbGVyKHJlcXVlc3Q6IHN0cmluZywgcmVzOiAocmVzcG9uc2U6IGFueSkgPT4gdm9pZCk6IHZvaWRcbiAgICBtYWluKC4uLmFyZ3M6IHN0cmluZ1tdKTogdm9pZFxuICAgIGNsaWVudChtZXNzYWdlOiAobXNnOiBzdHJpbmcpID0+IHN0cmluZywgLi4uYXJnczogc3RyaW5nW10pOiB2b2lkXG59PlxuXG5pbnRlcmZhY2UgQXN0YWwzSlMgZXh0ZW5kcyBBc3RhbDMuQXBwbGljYXRpb24ge1xuICAgIGV2YWwoYm9keTogc3RyaW5nKTogUHJvbWlzZTxhbnk+XG4gICAgcmVxdWVzdEhhbmRsZXI6IENvbmZpZ1tcInJlcXVlc3RIYW5kbGVyXCJdXG4gICAgYXBwbHlfY3NzKHN0eWxlOiBzdHJpbmcsIHJlc2V0PzogYm9vbGVhbik6IHZvaWRcbiAgICBxdWl0KGNvZGU/OiBudW1iZXIpOiB2b2lkXG4gICAgc3RhcnQoY29uZmlnPzogQ29uZmlnKTogdm9pZFxufVxuXG5pbnRlcmZhY2UgQXN0YWw0SlMgZXh0ZW5kcyBBc3RhbDQuQXBwbGljYXRpb24ge1xuICAgIGV2YWwoYm9keTogc3RyaW5nKTogUHJvbWlzZTxhbnk+XG4gICAgcmVxdWVzdEhhbmRsZXI/OiBDb25maWdbXCJyZXF1ZXN0SGFuZGxlclwiXVxuICAgIGFwcGx5X2NzcyhzdHlsZTogc3RyaW5nLCByZXNldD86IGJvb2xlYW4pOiB2b2lkXG4gICAgcXVpdChjb2RlPzogbnVtYmVyKTogdm9pZFxuICAgIHN0YXJ0KGNvbmZpZz86IENvbmZpZyk6IHZvaWRcbn1cblxudHlwZSBBcHAzID0gdHlwZW9mIEFzdGFsMy5BcHBsaWNhdGlvblxudHlwZSBBcHA0ID0gdHlwZW9mIEFzdGFsNC5BcHBsaWNhdGlvblxuXG5leHBvcnQgZnVuY3Rpb24gbWtBcHA8QXBwIGV4dGVuZHMgQXBwMz4oQXBwOiBBcHApOiBBc3RhbDNKU1xuZXhwb3J0IGZ1bmN0aW9uIG1rQXBwPEFwcCBleHRlbmRzIEFwcDQ+KEFwcDogQXBwKTogQXN0YWw0SlNcblxuZXhwb3J0IGZ1bmN0aW9uIG1rQXBwKEFwcDogQXBwMyB8IEFwcDQpIHtcbiAgICByZXR1cm4gbmV3IChjbGFzcyBBc3RhbEpTIGV4dGVuZHMgQXBwIHtcbiAgICAgICAgcHJpdmF0ZSBkaXNwb3NlUm9vdD86ICgpID0+IHZvaWRcblxuICAgICAgICBzdGF0aWMge1xuICAgICAgICAgICAgR09iamVjdC5yZWdpc3RlckNsYXNzKHsgR1R5cGVOYW1lOiBcIkFzdGFsSlNcIiB9LCB0aGlzIGFzIGFueSlcbiAgICAgICAgfVxuXG4gICAgICAgIGV2YWwoYm9keTogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzLCByZWopID0+IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmbiA9IEZ1bmN0aW9uKGByZXR1cm4gKGFzeW5jIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJHtib2R5LmluY2x1ZGVzKFwiO1wiKSA/IGJvZHkgOiBgcmV0dXJuICR7Ym9keX07YH1cbiAgICAgICAgICAgICAgICAgICAgfSlgKVxuICAgICAgICAgICAgICAgICAgICBmbigpKCkudGhlbihyZXMpLmNhdGNoKHJlailcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZWooZXJyb3IpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHJlcXVlc3RIYW5kbGVyPzogQ29uZmlnW1wicmVxdWVzdEhhbmRsZXJcIl1cblxuICAgICAgICB2ZnVuY19zaHV0ZG93bigpOiB2b2lkIHtcbiAgICAgICAgICAgIHN1cGVyLnZmdW5jX3NodXRkb3duKClcbiAgICAgICAgICAgIHRoaXMuZGlzcG9zZVJvb3Q/LigpXG4gICAgICAgIH1cblxuICAgICAgICB2ZnVuY19yZXF1ZXN0KG1zZzogc3RyaW5nLCBjb25uOiBHaW8uU29ja2V0Q29ubmVjdGlvbik6IHZvaWQge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnJlcXVlc3RIYW5kbGVyID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlcXVlc3RIYW5kbGVyKG1zZywgKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIElPLndyaXRlX3NvY2soY29ubiwgU3RyaW5nKHJlc3BvbnNlKSwgKF8sIHJlcykgPT4gSU8ud3JpdGVfc29ja19maW5pc2gocmVzKSlcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzdXBlci52ZnVuY19yZXF1ZXN0KG1zZywgY29ubilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGFwcGx5X2NzcyhzdHlsZTogc3RyaW5nLCByZXNldCA9IGZhbHNlKSB7XG4gICAgICAgICAgICBzdXBlci5hcHBseV9jc3Moc3R5bGUsIHJlc2V0KVxuICAgICAgICB9XG5cbiAgICAgICAgcXVpdChjb2RlPzogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgICAgICBzdXBlci5xdWl0KClcbiAgICAgICAgICAgIGV4aXQoY29kZSA/PyAwKVxuICAgICAgICB9XG5cbiAgICAgICAgc3RhcnQoeyByZXF1ZXN0SGFuZGxlciwgY3NzLCBob2xkLCBtYWluLCBjbGllbnQsIGljb25zLCAuLi5jZmcgfTogQ29uZmlnID0ge30pIHtcbiAgICAgICAgICAgIGNvbnN0IGFwcCA9IHRoaXMgYXMgdW5rbm93biBhcyBJbnN0YW5jZVR5cGU8QXBwMyB8IEFwcDQ+XG5cbiAgICAgICAgICAgIGNsaWVudCA/Pz0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIHByaW50KGBBc3RhbCBpbnN0YW5jZSBcIiR7YXBwLmluc3RhbmNlTmFtZX1cIiBhbHJlYWR5IHJ1bm5pbmdgKVxuICAgICAgICAgICAgICAgIGV4aXQoMSlcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLCBjZmcpXG4gICAgICAgICAgICBzZXRDb25zb2xlTG9nRG9tYWluKGFwcC5pbnN0YW5jZU5hbWUpXG5cbiAgICAgICAgICAgIHRoaXMucmVxdWVzdEhhbmRsZXIgPSByZXF1ZXN0SGFuZGxlclxuICAgICAgICAgICAgYXBwLmNvbm5lY3QoXCJhY3RpdmF0ZVwiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgY3JlYXRlUm9vdCgoZGlzcG9zZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmRpc3Bvc2VSb290ID0gZGlzcG9zZVxuICAgICAgICAgICAgICAgICAgICBtYWluPy4oLi4ucHJvZ3JhbUFyZ3MpXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgYXBwLmFjcXVpcmVfc29ja2V0KClcbiAgICAgICAgICAgIH0gY2F0Y2gge1xuICAgICAgICAgICAgICAgIHJldHVybiBjbGllbnQoKG1zZykgPT4gSU8uc2VuZF9yZXF1ZXN0KGFwcC5pbnN0YW5jZU5hbWUsIG1zZykhLCAuLi5wcm9ncmFtQXJncylcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGNzcykgdGhpcy5hcHBseV9jc3MoY3NzLCBmYWxzZSlcblxuICAgICAgICAgICAgaWYgKGljb25zKSBhcHAuYWRkX2ljb25zKGljb25zKVxuXG4gICAgICAgICAgICBob2xkID8/PSB0cnVlXG4gICAgICAgICAgICBpZiAoaG9sZCkgYXBwLmhvbGQoKVxuXG4gICAgICAgICAgICBhcHAucnVuQXN5bmMoW10pXG4gICAgICAgIH1cbiAgICB9KSgpXG59XG4iLCAiaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgeyBGcmFnbWVudCB9IGZyb20gXCIuL0ZyYWdtZW50LmpzXCJcbmltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcIi4vc3RhdGUuanNcIlxuaW1wb3J0IHsgdHlwZSBDQywgdHlwZSBGQywgZW52IH0gZnJvbSBcIi4vZW52LmpzXCJcbmltcG9ydCB7IGtlYmFiaWZ5LCB0eXBlIFBhc2NhbGlmeSwgc2V0IH0gZnJvbSBcIi4uL3V0aWwuanNcIlxuaW1wb3J0IHsgb25DbGVhbnVwIH0gZnJvbSBcIi4vc2NvcGUuanNcIlxuXG4vKipcbiAqIFJlcHJlc2VudHMgYWxsIG9mIHRoZSB0aGluZ3MgdGhhdCBjYW4gYmUgcGFzc2VkIGFzIGEgY2hpbGQgdG8gY2xhc3MgY29tcG9uZW50cy5cbiAqL1xuZXhwb3J0IHR5cGUgTm9kZSA9XG4gICAgfCBBcnJheTxHT2JqZWN0Lk9iamVjdD5cbiAgICB8IEdPYmplY3QuT2JqZWN0XG4gICAgfCBudW1iZXJcbiAgICB8IHN0cmluZ1xuICAgIHwgYm9vbGVhblxuICAgIHwgbnVsbFxuICAgIHwgdW5kZWZpbmVkXG5cbmV4cG9ydCBjb25zdCBndGtUeXBlID0gU3ltYm9sKFwiZ3RrIGJ1aWxkZXIgdHlwZVwiKVxuXG4vKipcbiAqIFNwZWNpYWwgc3ltYm9sIHdoaWNoIGxldHMgeW91IGltcGxlbWVudCBob3cgd2lkZ2V0cyBhcmUgYXBwZW5kZWQgaW4gSlNYLlxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogYGBgdHNcbiAqIGNsYXNzIE15Q29tcG9uZW50IGV4dGVuZHMgR09iamVjdC5PYmplY3Qge1xuICogICBbYWRkQ2hpbGRdKGNoaWxkOiBHT2JqZWN0Lk9iamVjdCwgdHlwZTogc3RyaW5nIHwgbnVsbCwgaW5kZXg6IG51bWJlcikge1xuICogICAgIC8vIGltcGxlbWVudFxuICogICB9XG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNvbnN0IGFkZENoaWxkID0gU3ltYm9sKFwiSlNYIGFkZCBjaGlsZCBtZXRob2RcIilcblxuLyoqXG4gKiBTcGVjaWFsIHN5bWJvbCB3aGljaCBsZXRzIHlvdSBpbXBsZW1lbnQgaG93IHdpZGdldHMgYXJlIHJlbW92ZWQgaW4gSlNYLlxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogYGBgdHNcbiAqIGNsYXNzIE15Q29tcG9uZW50IGV4dGVuZHMgR09iamVjdC5PYmplY3Qge1xuICogICBbcmVtb3ZlQ2hpbGRdKGNoaWxkOiBHT2JqZWN0Lk9iamVjdCkge1xuICogICAgIC8vIGltcGxlbWVudFxuICogICB9XG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNvbnN0IHJlbW92ZUNoaWxkID0gU3ltYm9sKFwiSlNYIGFkZCByZW1vdmUgbWV0aG9kXCIpXG5cbi8qKlxuICogR2V0IHRoZSB0eXBlIG9mIHRoZSBvYmplY3Qgc3BlY2lmaWVkIHRocm91Z2ggdGhlIGAkdHlwZWAgcHJvcGVydHlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFR5cGUob2JqZWN0OiBHT2JqZWN0Lk9iamVjdCkge1xuICAgIHJldHVybiBndGtUeXBlIGluIG9iamVjdCA/IChvYmplY3RbZ3RrVHlwZV0gYXMgc3RyaW5nKSA6IG51bGxcbn1cblxuLyoqXG4gKiBGdW5jdGlvbiBDb21wb25lbnQgUHJvcGVydGllc1xuICovXG5leHBvcnQgdHlwZSBGQ1Byb3BzPFNlbGYsIFByb3BzPiA9IFByb3BzICYge1xuICAgIC8qKlxuICAgICAqIEd0ay5CdWlsZGVyIHR5cGVcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCBhcyBhIHBhcmFtZXRlcnNcbiAgICAgKi9cbiAgICAkdHlwZT86IHN0cmluZ1xuICAgIC8qKlxuICAgICAqIHNldHVwIGZ1bmN0aW9uXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgYXMgYSBwYXJhbWV0ZXJzXG4gICAgICovXG4gICAgJD8oc2VsZjogU2VsZik6IHZvaWRcbn1cblxuLyoqXG4gKiBDbGFzcyBDb21wb25lbnQgUHJvcGVydGllc1xuICovXG5leHBvcnQgdHlwZSBDQ1Byb3BzPFNlbGYgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCwgUHJvcHM+ID0ge1xuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbCBjaGlsZHJlbiBlbGVtZW50c1xuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICBjaGlsZHJlbj86IEFycmF5PE5vZGU+IHwgTm9kZVxuICAgIC8qKlxuICAgICAqIEd0ay5CdWlsZGVyIHR5cGVcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCB0byBjbGFzcyBjb21wb25lbnQgY29uc3RydWN0b3JzXG4gICAgICovXG4gICAgJHR5cGU/OiBzdHJpbmdcbiAgICAvKipcbiAgICAgKiBmdW5jdGlvbiB0byB1c2UgYXMgYSBjb25zdHJ1Y3RvcixcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCB0byBjbGFzcyBjb21wb25lbnQgY29uc3RydWN0b3JzXG4gICAgICovXG4gICAgJGNvbnN0cnVjdG9yPyhwcm9wczogUGFydGlhbDxQcm9wcz4pOiBTZWxmXG4gICAgLyoqXG4gICAgICogc2V0dXAgZnVuY3Rpb24sXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgdG8gY2xhc3MgY29tcG9uZW50IGNvbnN0cnVjdG9yc1xuICAgICAqL1xuICAgICQ/KHNlbGY6IFNlbGYpOiB2b2lkXG4gICAgLyoqXG4gICAgICogQ1NTIGNsYXNzIG5hbWVzXG4gICAgICovXG4gICAgY2xhc3M/OiBzdHJpbmcgfCBBY2Nlc3NvcjxzdHJpbmc+XG4gICAgLyoqXG4gICAgICogaW5saW5lIENTU1xuICAgICAqL1xuICAgIGNzcz86IHN0cmluZyB8IEFjY2Vzc29yPHN0cmluZz5cbn0gJiB7XG4gICAgW0sgaW4ga2V5b2YgUHJvcHNdOiBBY2Nlc3NvcjxOb25OdWxsYWJsZTxQcm9wc1tLXT4+IHwgUHJvcHNbS11cbn0gJiB7XG4gICAgW1MgaW4ga2V5b2YgU2VsZltcIiRzaWduYWxzXCJdIGFzIFMgZXh0ZW5kcyBgbm90aWZ5Ojoke2luZmVyIFB9YFxuICAgICAgICA/IGBvbk5vdGlmeSR7UGFzY2FsaWZ5PFA+fWBcbiAgICAgICAgOiBTIGV4dGVuZHMgc3RyaW5nXG4gICAgICAgICAgPyBgb24ke1Bhc2NhbGlmeTxTPn1gXG4gICAgICAgICAgOiBuZXZlcl0/OiBHT2JqZWN0LlNpZ25hbENhbGxiYWNrPFNlbGYsIFNlbGZbXCIkc2lnbmFsc1wiXVtTXT5cbn1cblxuLy8gcHJldHRpZXItaWdub3JlXG50eXBlIEpzeFByb3BzPEMsIFByb3BzPiA9XG4gICAgQyBleHRlbmRzIHR5cGVvZiBGcmFnbWVudCA/IChQcm9wcyAmIHt9KVxuICAgIC8vIGludHJpbnNpY0VsZW1lbnRzIGFsd2F5cyByZXNvbHZlIGFzIEZDXG4gICAgLy8gc28gd2UgY2FuJ3QgbmFycm93IGl0IGRvd24sIGFuZCBpbiBzb21lIGNhc2VzXG4gICAgLy8gdGhlIHNldHVwIGZ1bmN0aW9uIGlzIHR5cGVkIGFzIGEgdW5pb24gb2YgT2JqZWN0IGFuZCBhY3R1YWwgdHlwZVxuICAgIC8vIGFzIGEgZml4IHVzZXJzIGNhbiBhbmQgc2hvdWxkIHVzZSBGQ1Byb3BzXG4gICAgOiBDIGV4dGVuZHMgRkMgPyBQcm9wcyAmIE9taXQ8RkNQcm9wczxSZXR1cm5UeXBlPEM+LCBQcm9wcz4sIFwiJFwiPlxuICAgIDogQyBleHRlbmRzIENDID8gQ0NQcm9wczxJbnN0YW5jZVR5cGU8Qz4sIFByb3BzPlxuICAgIDogbmV2ZXJcblxuZnVuY3Rpb24gaXNHT2JqZWN0Q3RvcihjdG9yOiBhbnkpOiBjdG9yIGlzIENDIHtcbiAgICByZXR1cm4gY3Rvci5wcm90b3R5cGUgaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdFxufVxuXG5mdW5jdGlvbiBpc0Z1bmN0aW9uQ3RvcihjdG9yOiBhbnkpOiBjdG9yIGlzIEZDIHtcbiAgICByZXR1cm4gdHlwZW9mIGN0b3IgPT09IFwiZnVuY3Rpb25cIiAmJiAhaXNHT2JqZWN0Q3RvcihjdG9yKVxufVxuXG4vKiogQGludGVybmFsICovXG5leHBvcnQgZnVuY3Rpb24gc2V0VHlwZShvYmplY3Q6IG9iamVjdCwgdHlwZTogc3RyaW5nKSB7XG4gICAgaWYgKGd0a1R5cGUgaW4gb2JqZWN0ICYmIG9iamVjdFtndGtUeXBlXSAhPT0gXCJcIikge1xuICAgICAgICBjb25zb2xlLndhcm4oYHR5cGUgb3ZlcnJpZGVuIGZyb20gJHtvYmplY3RbZ3RrVHlwZV19IHRvICR7dHlwZX0gb24gJHtvYmplY3R9YClcbiAgICB9XG5cbiAgICBPYmplY3QuYXNzaWduKG9iamVjdCwgeyBbZ3RrVHlwZV06IHR5cGUgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGpzeDxUIGV4dGVuZHMgKHByb3BzOiBhbnkpID0+IEdPYmplY3QuT2JqZWN0PihcbiAgICBjdG9yOiBULFxuICAgIHByb3BzOiBKc3hQcm9wczxULCBQYXJhbWV0ZXJzPFQ+WzBdPixcbik6IFJldHVyblR5cGU8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGpzeDxUIGV4dGVuZHMgbmV3IChwcm9wczogYW55KSA9PiBHT2JqZWN0Lk9iamVjdD4oXG4gICAgY3RvcjogVCxcbiAgICBwcm9wczogSnN4UHJvcHM8VCwgQ29uc3RydWN0b3JQYXJhbWV0ZXJzPFQ+WzBdPixcbik6IEluc3RhbmNlVHlwZTxUPlxuXG5leHBvcnQgZnVuY3Rpb24ganN4PFQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdD4oXG4gICAgY3Rvcjoga2V5b2YgKHR5cGVvZiBlbnYpW1wiaW50cmluc2ljRWxlbWVudHNcIl0gfCAobmV3IChwcm9wczogYW55KSA9PiBUKSB8ICgocHJvcHM6IGFueSkgPT4gVCksXG4gICAgaW5wcm9wczogYW55LFxuICAgIC8vIGtleSBpcyBhIHNwZWNpYWwgcHJvcCBpbiBqc3ggd2hpY2ggaXMgcGFzc2VkIGFzIGEgdGhpcmQgYXJndW1lbnQgYW5kIG5vdCBpbiBwcm9wc1xuICAgIGtleT86IHN0cmluZyxcbik6IFQge1xuICAgIGNvbnN0IHsgJCwgJHR5cGUsICRjb25zdHJ1Y3RvciwgY2hpbGRyZW4sIC4uLnJlc3QgfSA9IGlucHJvcHMgYXMgQ0NQcm9wczxULCBhbnk+XG4gICAgY29uc3QgcHJvcHMgPSByZXN0IGFzIFJlY29yZDxzdHJpbmcsIGFueT5cblxuICAgIGlmIChrZXkpIE9iamVjdC5hc3NpZ24ocHJvcHMsIHsga2V5IH0pXG4gICAgZW52LmluaXRQcm9wcyhwcm9wcylcblxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkge1xuICAgICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkgZGVsZXRlIHByb3BzW2tleV1cbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGN0b3IgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgaWYgKGN0b3IgaW4gZW52LmludHJpbnNpY0VsZW1lbnRzKSB7XG4gICAgICAgICAgICBjdG9yID0gZW52LmludHJpbnNpY0VsZW1lbnRzW2N0b3JdIGFzIEZDPFQ+IHwgQ0M8VD5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGB1bmtub3duIGludHJpbnNpYyBlbGVtZW50IFwiJHtjdG9yfVwiYClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmIChpc0Z1bmN0aW9uQ3RvcihjdG9yKSkge1xuICAgICAgICBjb25zdCBvYmplY3QgPSBjdG9yKHsgY2hpbGRyZW4sIC4uLnByb3BzIH0pXG4gICAgICAgIGlmICgkdHlwZSkgc2V0VHlwZShvYmplY3QsICR0eXBlKVxuICAgICAgICAkPy4ob2JqZWN0KVxuICAgICAgICByZXR1cm4gb2JqZWN0XG4gICAgfVxuXG4gICAgLy8gY29sbGVjdCBjc3MgYW5kIGNsYXNzTmFtZVxuICAgIGNvbnN0IHsgY3NzLCBjbGFzczogY2xhc3NOYW1lIH0gPSBwcm9wc1xuICAgIGRlbGV0ZSBwcm9wcy5jc3NcbiAgICBkZWxldGUgcHJvcHMuY2xhc3NcblxuICAgIGNvbnN0IHNpZ25hbHM6IEFycmF5PFtzdHJpbmcsICguLi5wcm9wczogdW5rbm93bltdKSA9PiB1bmtub3duXT4gPSBbXVxuICAgIGNvbnN0IGJpbmRpbmdzOiBBcnJheTxbc3RyaW5nLCBBY2Nlc3Nvcjx1bmtub3duPl0+ID0gW11cblxuICAgIC8vIGNvbGxlY3Qgc2lnbmFscyBhbmQgYmluZGluZ3NcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhwcm9wcykpIHtcbiAgICAgICAgaWYgKGtleS5zdGFydHNXaXRoKFwib25cIikpIHtcbiAgICAgICAgICAgIHNpZ25hbHMucHVzaChba2V5LnNsaWNlKDIpLCB2YWx1ZSBhcyAoKSA9PiB1bmtub3duXSlcbiAgICAgICAgICAgIGRlbGV0ZSBwcm9wc1trZXldXG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgIGJpbmRpbmdzLnB1c2goW2tleSwgdmFsdWVdKVxuICAgICAgICAgICAgcHJvcHNba2V5XSA9IHZhbHVlLmdldCgpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBjb25zdHJ1Y3RcbiAgICBjb25zdCBvYmplY3QgPSAkY29uc3RydWN0b3IgPyAkY29uc3RydWN0b3IocHJvcHMpIDogbmV3IChjdG9yIGFzIENDPFQ+KShwcm9wcylcbiAgICBpZiAoJGNvbnN0cnVjdG9yKSBPYmplY3QuYXNzaWduKG9iamVjdCwgcHJvcHMpXG4gICAgaWYgKCR0eXBlKSBzZXRUeXBlKG9iamVjdCwgJHR5cGUpXG5cbiAgICBpZiAoY3NzKSBlbnYuc2V0Q3NzKG9iamVjdCwgY3NzKVxuICAgIGlmIChjbGFzc05hbWUpIGVudi5zZXRDbGFzcyhvYmplY3QsIGNsYXNzTmFtZSlcblxuICAgIC8vIGFkZCBjaGlsZHJlblxuICAgIGZvciAoY29uc3QgY2hpbGQgb2YgQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl0pIHtcbiAgICAgICAgaWYgKGNoaWxkID09PSB0cnVlKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCJUcnlpbmcgdG8gYWRkIGJvb2xlYW4gdmFsdWUgb2YgYHRydWVgIGFzIGEgY2hpbGQuXCIpXG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGQpKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGNoIG9mIGNoaWxkKSB7XG4gICAgICAgICAgICAgICAgZW52LmFkZENoaWxkKG9iamVjdCwgY2gsIC0xKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGNoaWxkKSB7XG4gICAgICAgICAgICBlbnYuYWRkQ2hpbGQob2JqZWN0LCBjaGlsZCwgLTEpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBoYW5kbGUgc2lnbmFsc1xuICAgIGNvbnN0IGRpc3Bvc2VIYW5kbGVycyA9IHNpZ25hbHMubWFwKChbc2lnLCBoYW5kbGVyXSkgPT4ge1xuICAgICAgICBjb25zdCBuYW1lID0ga2ViYWJpZnkoc2lnKVxuICAgICAgICBjb25zdCBpZCA9IG5hbWUuc3RhcnRzV2l0aChcIm5vdGlmeS1cIilcbiAgICAgICAgICAgID8gb2JqZWN0LmNvbm5lY3QoYG5vdGlmeTo6JHtuYW1lLnNsaWNlKDcpfWAsIGhhbmRsZXIpXG4gICAgICAgICAgICA6IG9iamVjdC5jb25uZWN0KGtlYmFiaWZ5KHNpZyksIGhhbmRsZXIpXG5cbiAgICAgICAgcmV0dXJuICgpID0+IG9iamVjdC5kaXNjb25uZWN0KGlkKVxuICAgIH0pXG5cbiAgICAvLyBoYW5kbGUgYmluZGluZ3NcbiAgICBjb25zdCBkaXNwb3NlQmluZGluZ3MgPSBiaW5kaW5ncy5tYXAoKFtwcm9wLCBiaW5kaW5nXSkgPT4ge1xuICAgICAgICBjb25zdCBkaXNwb3NlID0gYmluZGluZy5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICAgICAgc2V0KG9iamVjdCwgcHJvcCwgYmluZGluZy5nZXQoKSlcbiAgICAgICAgfSlcbiAgICAgICAgc2V0KG9iamVjdCwgcHJvcCwgYmluZGluZy5nZXQoKSlcbiAgICAgICAgcmV0dXJuIGRpc3Bvc2VcbiAgICB9KVxuXG4gICAgLy8gY2xlYW51cFxuICAgIGlmIChkaXNwb3NlQmluZGluZ3MubGVuZ3RoID4gMCB8fCBkaXNwb3NlSGFuZGxlcnMubGVuZ3RoID4gMCkge1xuICAgICAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgICAgICAgZGlzcG9zZUhhbmRsZXJzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgZGlzcG9zZUJpbmRpbmdzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICB9KVxuICAgIH1cblxuICAgICQ/LihvYmplY3QpXG4gICAgcmV0dXJuIG9iamVjdFxufVxuXG5leHBvcnQgY29uc3QganN4cyA9IGpzeFxuXG5kZWNsYXJlIGdsb2JhbCB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1uYW1lc3BhY2VcbiAgICBuYW1lc3BhY2UgSlNYIHtcbiAgICAgICAgdHlwZSBFbGVtZW50VHlwZSA9IGtleW9mIEludHJpbnNpY0VsZW1lbnRzIHwgRkMgfCBDQ1xuICAgICAgICB0eXBlIEVsZW1lbnQgPSBHT2JqZWN0Lk9iamVjdFxuICAgICAgICB0eXBlIEVsZW1lbnRDbGFzcyA9IEdPYmplY3QuT2JqZWN0XG5cbiAgICAgICAgdHlwZSBMaWJyYXJ5TWFuYWdlZEF0dHJpYnV0ZXM8QywgUHJvcHM+ID0gSnN4UHJvcHM8QywgUHJvcHM+ICYge1xuICAgICAgICAgICAgLy8gRklYTUU6IHdoeSBkb2VzIGFuIGludHJpbnNpYyBlbGVtZW50IGFsd2F5cyByZXNvbHZlIGFzIEZDP1xuICAgICAgICAgICAgLy8gX190eXBlPzogQyBleHRlbmRzIENDID8gXCJDQ1wiIDogQyBleHRlbmRzIEZDID8gXCJGQ1wiIDogbmV2ZXJcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktb2JqZWN0LXR5cGVcbiAgICAgICAgaW50ZXJmYWNlIEludHJpbnNpY0VsZW1lbnRzIHtcbiAgICAgICAgICAgIC8vIGNjOiBDQ1Byb3BzPEd0ay5Cb3gsIEd0ay5Cb3guQ29uc3RydWN0b3JQcm9wcywgR3RrLkJveC5TaWduYWxTaWduYXR1cmVzPlxuICAgICAgICAgICAgLy8gZmM6IEZDUHJvcHM8R3RrLldpZGdldCwgRm5Qcm9wcz5cbiAgICAgICAgfVxuXG4gICAgICAgIGludGVyZmFjZSBFbGVtZW50Q2hpbGRyZW5BdHRyaWJ1dGUge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1vYmplY3QtdHlwZVxuICAgICAgICAgICAgY2hpbGRyZW46IHt9XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCAiaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpb1wiXG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliXCJcbmltcG9ydCB7IHR5cGUgUGFzY2FsaWZ5LCBjYW1lbGlmeSwga2ViYWJpZnkgfSBmcm9tIFwiLi4vdXRpbC5qc1wiXG5cbnR5cGUgU3Vic2NyaWJlQ2FsbGJhY2sgPSAoKSA9PiB2b2lkXG50eXBlIERpc3Bvc2VGdW5jdGlvbiA9ICgpID0+IHZvaWRcbnR5cGUgU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2s6IFN1YnNjcmliZUNhbGxiYWNrKSA9PiBEaXNwb3NlRnVuY3Rpb25cblxudHlwZSBEZWVwSW5mZXI8UyBleHRlbmRzIHN0cmluZz4gPSBSZXR1cm5UeXBlPEdMaWIuVmFyaWFudDxTPltcImRlZXBVbnBhY2tcIl0+XG50eXBlIFJlY3Vyc2l2ZUluZmVyPFMgZXh0ZW5kcyBzdHJpbmc+ID0gUmV0dXJuVHlwZTxHTGliLlZhcmlhbnQ8Uz5bXCJyZWN1cnNpdmVVbnBhY2tcIl0+XG5cbmV4cG9ydCB0eXBlIEFjY2Vzc2VkPFQ+ID0gVCBleHRlbmRzIEFjY2Vzc29yPGluZmVyIFY+ID8gViA6IG5ldmVyXG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLWRlY2xhcmF0aW9uLW1lcmdpbmdcbmV4cG9ydCBjbGFzcyBBY2Nlc3NvcjxUID0gdW5rbm93bj4gZXh0ZW5kcyBGdW5jdGlvbiB7XG4gICAgc3RhdGljICRndHlwZSA9IEdPYmplY3QuVFlQRV9KU09CSkVDVCBhcyB1bmtub3duIGFzIEdPYmplY3QuR1R5cGU8QWNjZXNzb3I+XG5cbiAgICAjZ2V0OiAoKSA9PiBUXG4gICAgI3N1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb25cblxuICAgIGNvbnN0cnVjdG9yKGdldDogKCkgPT4gVCwgc3Vic2NyaWJlPzogU3Vic2NyaWJlRnVuY3Rpb24pIHtcbiAgICAgICAgc3VwZXIoXCJyZXR1cm4gYXJndW1lbnRzLmNhbGxlZS5fY2FsbC5hcHBseShhcmd1bWVudHMuY2FsbGVlLCBhcmd1bWVudHMpXCIpXG4gICAgICAgIHRoaXMuI3N1YnNjcmliZSA9IHN1YnNjcmliZSA/PyAoKCkgPT4gKCkgPT4gdm9pZCAwKVxuICAgICAgICB0aGlzLiNnZXQgPSBnZXRcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTdWJzY3JpYmUgZm9yIHZhbHVlIGNoYW5nZXMuXG4gICAgICogQHBhcmFtIGNhbGxiYWNrIFRoZSBmdW5jdGlvbiB0byBydW4gd2hlbiB0aGUgY3VycmVudCB2YWx1ZSBjaGFuZ2VzLlxuICAgICAqIEByZXR1cm5zIFVuc3Vic2NyaWJlIGZ1bmN0aW9uLlxuICAgICAqL1xuICAgIHN1YnNjcmliZShjYWxsYmFjazogU3Vic2NyaWJlQ2FsbGJhY2spOiBEaXNwb3NlRnVuY3Rpb24ge1xuICAgICAgICAvLyBUT0RPOiBhdXRvIHVuc3ViIHdoZW4gYSBzY29wZSBpcyBhdmFpbGFibGU/XG4gICAgICAgIHJldHVybiB0aGlzLiNzdWJzY3JpYmUoY2FsbGJhY2spXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHJldHVybnMgVGhlIGN1cnJlbnQgdmFsdWUuXG4gICAgICovXG4gICAgZ2V0KCk6IFQge1xuICAgICAgICByZXR1cm4gdGhpcy4jZ2V0KClcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBuZXcgYEFjY2Vzc29yYCB0aGF0IGFwcGxpZXMgYSB0cmFuc2Zvcm1hdGlvbiBvbiBpdHMgdmFsdWUuXG4gICAgICogQHBhcmFtIHRyYW5zZm9ybSBUaGUgdHJhbnNmb3JtYXRpb24gdG8gYXBwbHkuIFNob3VsZCBiZSBhIHB1cmUgZnVuY3Rpb24uXG4gICAgICovXG4gICAgYXM8UiA9IFQ+KHRyYW5zZm9ybTogKHZhbHVlOiBUKSA9PiBSKTogQWNjZXNzb3I8Uj4ge1xuICAgICAgICByZXR1cm4gbmV3IEFjY2Vzc29yKCgpID0+IHRyYW5zZm9ybSh0aGlzLiNnZXQoKSksIHRoaXMuI3N1YnNjcmliZSlcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2NhbGw8UiA9IFQ+KHRyYW5zZm9ybTogKHZhbHVlOiBUKSA9PiBSKTogQWNjZXNzb3I8Uj4ge1xuICAgICAgICByZXR1cm4gdGhpcy5hcyh0cmFuc2Zvcm0pXG4gICAgfVxuXG4gICAgdG9TdHJpbmcoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIGBBY2Nlc3Nvcjwke3RoaXMuZ2V0KCl9PmBcbiAgICB9XG5cbiAgICBbU3ltYm9sLnRvUHJpbWl0aXZlXSgpIHtcbiAgICAgICAgY29uc29sZS53YXJuKFwiQWNjZXNzb3IgaW1wbGljaXRseSBjb252ZXJ0ZWQgdG8gYSBwcmltaXRpdmUgdmFsdWUuXCIpXG4gICAgICAgIHJldHVybiB0aGlzLnRvU3RyaW5nKClcbiAgICB9XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQWNjZXNzb3I8VD4ge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIG5ldyBgQWNjZXNzb3JgIHRoYXQgYXBwbGllcyBhIHRyYW5zZm9ybWF0aW9uIG9uIGl0cyB2YWx1ZS5cbiAgICAgKiBAcGFyYW0gdHJhbnNmb3JtIFRoZSB0cmFuc2Zvcm1hdGlvbiB0byBhcHBseS4gU2hvdWxkIGJlIGEgcHVyZSBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICA8UiA9IFQ+KHRyYW5zZm9ybTogKHZhbHVlOiBUKSA9PiBSKTogQWNjZXNzb3I8Uj5cbn1cblxuZXhwb3J0IHR5cGUgU2V0dGVyPFQ+ID0ge1xuICAgICh2YWx1ZTogVCk6IHZvaWRcbiAgICAodmFsdWU6IChwcmV2OiBUKSA9PiBUKTogdm9pZFxufVxuXG5leHBvcnQgdHlwZSBTdGF0ZTxUPiA9IFtBY2Nlc3NvcjxUPiwgU2V0dGVyPFQ+XVxuXG4vKipcbiAqIENyZWF0ZSBhIHdyaXRhYmxlIHNpZ25hbC5cbiAqXG4gKiBAcGFyYW0gaW5pdCBUaGUgaW50aWFsIHZhbHVlIG9mIHRoZSBzaWduYWxcbiAqIEByZXR1cm5zIEFuIGBBY2Nlc3NvcmAgYW5kIGEgc2V0dGVyIGZ1bmN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdGF0ZTxUPihpbml0OiBUKTogU3RhdGU8VD4ge1xuICAgIGxldCBjdXJyZW50VmFsdWUgPSBpbml0XG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcbiAgICAgICAgcmV0dXJuICgpID0+IHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICB9XG5cbiAgICBjb25zdCBzZXQgPSAobmV3VmFsdWU6IHVua25vd24pID0+IHtcbiAgICAgICAgY29uc3QgdmFsdWU6IFQgPSB0eXBlb2YgbmV3VmFsdWUgPT09IFwiZnVuY3Rpb25cIiA/IG5ld1ZhbHVlKGN1cnJlbnRWYWx1ZSkgOiBuZXdWYWx1ZVxuICAgICAgICBpZiAoY3VycmVudFZhbHVlICE9PSB2YWx1ZSkge1xuICAgICAgICAgICAgY3VycmVudFZhbHVlID0gdmFsdWVcbiAgICAgICAgICAgIC8vIHJ1bm5pbmcgY2FsbGJhY2tzIG1pZ2h0IG11dGF0ZSBzdWJzY3JpYmVyc1xuICAgICAgICAgICAgQXJyYXkuZnJvbShzdWJzY3JpYmVycykuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gW25ldyBBY2Nlc3NvcigoKSA9PiBjdXJyZW50VmFsdWUsIHN1YnNjcmliZSksIHNldCBhcyBTZXR0ZXI8VD5dXG59XG5cbmNvbnN0IGVtcHR5ID0gU3ltYm9sKFwiZW1wdHkgY29tcHV0ZWQgdmFsdWVcIilcblxuZnVuY3Rpb24gY3JlYXRlQ29tcHV0ZWRQcm9kdWNlcjxUPihmbjogKHRyYWNrOiA8Vj4oc2lnbmFsOiBBY2Nlc3NvcjxWPikgPT4gVikgPT4gVCk6IEFjY2Vzc29yPFQ+IHtcbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8U3Vic2NyaWJlQ2FsbGJhY2s+KClcbiAgICBsZXQgdmFsdWU6IHR5cGVvZiBlbXB0eSB8IFRcbiAgICBsZXQgcHJldkRlcHMgPSBuZXcgTWFwPEFjY2Vzc29yLCBEaXNwb3NlRnVuY3Rpb24+KClcblxuICAgIGNvbnN0IGVmZmVjdCA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgZGVwcyA9IG5ldyBTZXQ8QWNjZXNzb3I+KClcbiAgICAgICAgdmFsdWUgPSBmbigodikgPT4gKGRlcHMuYWRkKHYpLCB2LmdldCgpKSlcblxuICAgICAgICBjb25zdCBuZXdEZXBzID0gbmV3IE1hcDxBY2Nlc3NvciwgRGlzcG9zZUZ1bmN0aW9uPigpXG5cbiAgICAgICAgZm9yIChjb25zdCBbZGVwLCB1bnN1Yl0gb2YgcHJldkRlcHMpIHtcbiAgICAgICAgICAgIGlmICghZGVwcy5oYXMoZGVwKSkge1xuICAgICAgICAgICAgICAgIHVuc3ViKClcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbmV3RGVwcy5zZXQoZGVwLCB1bnN1YilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAoY29uc3QgZGVwIG9mIGRlcHMpIHtcbiAgICAgICAgICAgIGlmICghbmV3RGVwcy5oYXMoZGVwKSkge1xuICAgICAgICAgICAgICAgIG5ld0RlcHMuc2V0KGRlcCwgZGVwLnN1YnNjcmliZShlZmZlY3QpKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcHJldkRlcHMgPSBuZXdEZXBzXG4gICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgIH1cblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIGVmZmVjdCgpXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSBlbXB0eVxuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgWywgdW5zdWJdIG9mIHByZXZEZXBzKSB7XG4gICAgICAgICAgICAgICAgICAgIHVuc3ViKClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBnZXQgPSAoKTogVCA9PiB7XG4gICAgICAgIHJldHVybiB2YWx1ZSA9PT0gZW1wdHkgPyBmbigodikgPT4gdi5nZXQoKSkgOiB2YWx1ZVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoZ2V0LCBzdWJzY3JpYmUpXG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbXB1dGVkQXJnczxcbiAgICBjb25zdCBEZXBzIGV4dGVuZHMgQXJyYXk8QWNjZXNzb3I8YW55Pj4sXG4gICAgQXJncyBleHRlbmRzIHsgW0sgaW4ga2V5b2YgRGVwc106IEFjY2Vzc2VkPERlcHNbS10+IH0sXG4gICAgViA9IEFyZ3MsXG4+KGRlcHM6IERlcHMsIHRyYW5zZm9ybT86ICguLi5hcmdzOiBBcmdzKSA9PiBWKTogQWNjZXNzb3I8Vj4ge1xuICAgIGxldCBkaXNwb3NlOiBBcnJheTxEaXNwb3NlRnVuY3Rpb24+XG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG4gICAgY29uc3QgY2FjaGUgPSBuZXcgQXJyYXk8dW5rbm93bj4oZGVwcy5sZW5ndGgpXG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBkaXNwb3NlID0gZGVwcy5tYXAoKGRlcCwgaSkgPT5cbiAgICAgICAgICAgICAgICBkZXAuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBkZXAuZ2V0KClcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhY2hlW2ldICE9PSB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FjaGVbaV0gPSBkZXAuZ2V0KClcbiAgICAgICAgICAgICAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICApXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgZGlzcG9zZS5tYXAoKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgIGRpc3Bvc2UubGVuZ3RoID0gMFxuICAgICAgICAgICAgICAgIGNhY2hlLmxlbmd0aCA9IDBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGdldCA9ICgpOiBWID0+IHtcbiAgICAgICAgY29uc3QgYXJncyA9IGRlcHMubWFwKChkZXAsIGkpID0+IHtcbiAgICAgICAgICAgIGlmICghY2FjaGVbaV0pIHtcbiAgICAgICAgICAgICAgICBjYWNoZVtpXSA9IGRlcC5nZXQoKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gY2FjaGVbaV1cbiAgICAgICAgfSlcblxuICAgICAgICByZXR1cm4gdHJhbnNmb3JtID8gdHJhbnNmb3JtKC4uLihhcmdzIGFzIEFyZ3MpKSA6IChhcmdzIGFzIFYpXG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcihnZXQsIHN1YnNjcmliZSlcbn1cblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCBmcm9tIGEgcHJvZHVjZXIgZnVuY3Rpb24gdGhhdCB0cmFja3MgaXRzIGRlcGVuZGVuY2llcy5cbiAqXG4gKiBgYGB0cyBFeGFtcGxlXG4gKiBsZXQgYTogQWNjZXNzb3I8bnVtYmVyPlxuICogbGV0IGI6IEFjY2Vzc29yPG51bWJlcj5cbiAqIGNvbnN0IGM6IEFjY2Vzc29yPG51bWJlcj4gPSBjcmVhdGVDb21wdXRlZCgoZ2V0KSA9PiBnZXQoYSkgKyBnZXQoYikpXG4gKiBgYGBcbiAqXG4gKiBAZXhwZXJpbWVudGFsXG4gKiBAcGFyYW0gcHJvZHVjZXIgVGhlIHByb2R1Y2VyIGZ1bmN0aW9uIHdoaWNoIGxldCdzIHlvdSB0cmFjayBkZXBlbmRlbmNpZXNcbiAqIEByZXR1cm5zIFRoZSBjb21wdXRlZCBgQWNjZXNzb3JgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29tcHV0ZWQ8VD4oXG4gICAgcHJvZHVjZXI6ICh0cmFjazogPFY+KHNpZ25hbDogQWNjZXNzb3I8Vj4pID0+IFYpID0+IFQsXG4pOiBBY2Nlc3NvcjxUPlxuXG4vKipcbiAqIENyZWF0ZSBhbiBgQWNjZXNzb3JgIHdoaWNoIGlzIGNvbXB1dGVkIGZyb20gYSBsaXN0IG9mIGdpdmVuIGBBY2Nlc3NvcmBzLlxuICpcbiAqIGBgYHRzIEV4YW1wbGVcbiAqIGxldCBhOiBBY2Nlc3NvcjxudW1iZXI+XG4gKiBsZXQgYjogQWNjZXNzb3I8c3RyaW5nPlxuICogY29uc3QgYzogQWNjZXNzb3I8W251bWJlciwgc3RyaW5nXT4gPSBjcmVhdGVDb21wdXRlZChbYSwgYl0pXG4gKiBjb25zdCBkOiBBY2Nlc3NvcjxzdHJpbmc+ID0gY3JlYXRlQ29tcHV0ZWQoW2EsIGJdLCAoYTogbnVtYmVyLCBiOiBzdHJpbmcpID0+IGAke2F9ICR7Yn1gKVxuICogYGBgXG4gKlxuICogQHBhcmFtIGRlcHMgTGlzdCBvZiBgQWNjZXNzb3JzYC5cbiAqIEBwYXJhbSB0cmFuc2Zvcm0gQW4gb3B0aW9uYWwgdHJhbnNmb3JtIGZ1bmN0aW9uLlxuICogQHJldHVybnMgVGhlIGNvbXB1dGVkIGBBY2Nlc3NvcmAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb21wdXRlZDxcbiAgICBjb25zdCBEZXBzIGV4dGVuZHMgQXJyYXk8QWNjZXNzb3I8YW55Pj4sXG4gICAgQXJncyBleHRlbmRzIHsgW0sgaW4ga2V5b2YgRGVwc106IEFjY2Vzc2VkPERlcHNbS10+IH0sXG4gICAgVCA9IEFyZ3MsXG4+KGRlcHM6IERlcHMsIHRyYW5zZm9ybT86ICguLi5hcmdzOiBBcmdzKSA9PiBUKTogQWNjZXNzb3I8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbXB1dGVkKFxuICAgIC4uLmFyZ3M6XG4gICAgICAgIHwgW3Byb2R1Y2VyOiAodHJhY2s6IDxWPihzaWduYWw6IEFjY2Vzc29yPFY+KSA9PiBWKSA9PiB1bmtub3duXVxuICAgICAgICB8IFtkZXBzOiBBcnJheTxBY2Nlc3Nvcj4sIHRyYW5zZm9ybT86ICguLi5hcmdzOiB1bmtub3duW10pID0+IHVua25vd25dXG4pIHtcbiAgICBjb25zdCBbZGVwc09yUHJvZHVjZXIsIHRyYW5zZm9ybV0gPSBhcmdzXG4gICAgaWYgKHR5cGVvZiBkZXBzT3JQcm9kdWNlciA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBjcmVhdGVDb21wdXRlZFByb2R1Y2VyKGRlcHNPclByb2R1Y2VyKVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBjcmVhdGVDb21wdXRlZEFyZ3MoZGVwc09yUHJvZHVjZXIsIHRyYW5zZm9ybSlcbiAgICB9XG59XG5cbi8qKlxuICogQ3JlYXRlIGFuIGBBY2Nlc3NvcmAgb24gYSBgR09iamVjdC5PYmplY3RgJ3MgYHByb3BlcnR5YC5cbiAqXG4gKiBAcGFyYW0gb2JqZWN0IFRoZSBgR09iamVjdC5PYmplY3RgIHRvIGNyZWF0ZSB0aGUgYEFjY2Vzc29yYCBvbi5cbiAqIEBwYXJhbSBwcm9wZXJ0eSBPbmUgb2YgaXRzIHJlZ2lzdGVyZWQgcHJvcGVydGllcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8VCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LCBQIGV4dGVuZHMga2V5b2YgVD4oXG4gICAgb2JqZWN0OiBULFxuICAgIHByb3BlcnR5OiBFeHRyYWN0PFAsIHN0cmluZz4sXG4pOiBBY2Nlc3NvcjxUW1BdPlxuXG4vLyBUT0RPOiBzdXBwb3J0IG5lc3RlZCBiaW5kaW5nc1xuLy8gZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8XG4vLyAgICAgVCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuLy8gICAgIFAxIGV4dGVuZHMga2V5b2YgVCxcbi8vICAgICBQMiBleHRlbmRzIGtleW9mIE5vbk51bGxhYmxlPFRbUDFdPixcbi8vID4oXG4vLyAgICAgb2JqZWN0OiBULFxuLy8gICAgIHByb3BlcnR5MTogRXh0cmFjdDxQMSwgc3RyaW5nPixcbi8vICAgICBwcm9wZXJ0eTI6IEV4dHJhY3Q8UDIsIHN0cmluZz4sXG4vLyApOiBBY2Nlc3NvcjxOb25OdWxsYWJsZTxUW1AxXT5bUDJdPlxuXG4vKipcbiAqIENyZWF0ZSBhbiBgQWNjZXNzb3JgIG9uIGEgYEdpby5TZXR0aW5nc2AncyBga2V5YC5cbiAqIFZhbHVlcyBhcmUgcmVjdXJzaXZlbHkgdW5wYWNrZWQuXG4gKlxuICogQGRlcHJlY2F0ZWQgcHJlZmVyIHVzaW5nIHtAbGluayBjcmVhdGVTZXR0aW5nc30uXG4gKiBAcGFyYW0gb2JqZWN0IFRoZSBgR2lvLlNldHRpbmdzYCB0byBjcmVhdGUgdGhlIGBBY2Nlc3NvcmAgb24uXG4gKiBAcGFyYW0ga2V5IFRoZSBzZXR0aW5ncyBrZXlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8VD4oc2V0dGluZ3M6IEdpby5TZXR0aW5ncywga2V5OiBzdHJpbmcpOiBBY2Nlc3NvcjxUPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQmluZGluZzxUPihvYmplY3Q6IEdPYmplY3QuT2JqZWN0IHwgR2lvLlNldHRpbmdzLCBrZXk6IHN0cmluZyk6IEFjY2Vzc29yPFQ+IHtcbiAgICBjb25zdCBwcm9wID0ga2ViYWJpZnkoa2V5KSBhcyBrZXlvZiB0eXBlb2Ygb2JqZWN0XG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGNvbnN0IHNpZyA9IG9iamVjdCBpbnN0YW5jZW9mIEdpby5TZXR0aW5ncyA/IFwiY2hhbmdlZFwiIDogXCJub3RpZnlcIlxuICAgICAgICBjb25zdCBpZCA9IG9iamVjdC5jb25uZWN0KGAke3NpZ306OiR7cHJvcH1gLCAoKSA9PiBjYWxsYmFjaygpKVxuICAgICAgICByZXR1cm4gKCkgPT4gb2JqZWN0LmRpc2Nvbm5lY3QoaWQpXG4gICAgfVxuXG4gICAgY29uc3QgZ2V0ID0gKCk6IFQgPT4ge1xuICAgICAgICBpZiAob2JqZWN0IGluc3RhbmNlb2YgR2lvLlNldHRpbmdzKSB7XG4gICAgICAgICAgICByZXR1cm4gb2JqZWN0LmdldF92YWx1ZShrZXkpLnJlY3Vyc2l2ZVVucGFjaygpIGFzIFRcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IGdldHRlciA9IGBnZXRfJHtwcm9wLnJlcGxhY2VBbGwoXCItXCIsIFwiX1wiKX1gIGFzIGtleW9mIHR5cGVvZiBvYmplY3RcblxuICAgICAgICAgICAgaWYgKGdldHRlciBpbiBvYmplY3QgJiYgdHlwZW9mIG9iamVjdFtnZXR0ZXJdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKG9iamVjdFtnZXR0ZXJdIGFzICgpID0+IHVua25vd24pKCkgYXMgVFxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAocHJvcCBpbiBvYmplY3QpIHJldHVybiBvYmplY3RbcHJvcF0gYXMgVFxuICAgICAgICAgICAgaWYgKGtleSBpbiBvYmplY3QpIHJldHVybiBvYmplY3Rba2V5IGFzIGtleW9mIHR5cGVvZiBvYmplY3RdIGFzIFRcblxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYGNhbm5vdCBnZXQgcHJvcGVydHkgJHtrZXl9YClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoZ2V0LCBzdWJzY3JpYmUpXG59XG5cbnR5cGUgQ29ubmVjdGlvbkhhbmRsZXI8XG4gICAgTyBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFMgZXh0ZW5kcyBrZXlvZiBPW1wiJHNpZ25hbHNcIl0sXG4gICAgVCxcbj4gPSBPW1wiJHNpZ25hbHNcIl1bU10gZXh0ZW5kcyAoLi4uYXJnczogYW55W10pID0+IGluZmVyIFJcbiAgICA/IHZvaWQgZXh0ZW5kcyBSXG4gICAgICAgID8gKC4uLmFyZ3M6IFsuLi5QYXJhbWV0ZXJzPE9bXCIkc2lnbmFsc1wiXVtTXT4sIGN1cnJlbnRWYWx1ZTogVF0pID0+IFRcbiAgICAgICAgOiBuZXZlclxuICAgIDogbmV2ZXJcblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCB3aGljaCBzZXRzIHVwIGEgbGlzdCBvZiBgR09iamVjdC5PYmplY3RgIHNpZ25hbCBjb25uZWN0aW9ucy5cbiAqXG4gKiBgYGB0cyBFeGFtcGxlXG4gKiBjb25zdCB2YWx1ZTogQWNjZXNzb3I8c3RyaW5nPiA9IGNyZWF0ZUNvbm5lY3Rpb24oXG4gKiAgIFwiaW5pdGlhbCB2YWx1ZVwiLFxuICogICBbb2JqMSwgXCJzaWctbmFtZVwiLCAoLi4uYXJncykgPT4gXCJzdHJcIl0sXG4gKiAgIFtvYmoyLCBcInNpZy1uYW1lXCIsICguLi5hcmdzKSA9PiBcInN0clwiXVxuICogKVxuICogYGBgXG4gKlxuICogQHBhcmFtIGluaXQgVGhlIGluaXRpYWwgdmFsdWVcbiAqIEBwYXJhbSBzaWduYWxzIEEgbGlzdCBvZiBgR09iamVjdC5PYmplY3RgLCBzaWduYWwgbmFtZSBhbmQgY2FsbGJhY2sgcGFpcnMgdG8gY29ubmVjdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbm5lY3Rpb248XG4gICAgVCxcbiAgICBPMSBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFMxIGV4dGVuZHMga2V5b2YgTzFbXCIkc2lnbmFsc1wiXSxcbiAgICBPMiBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFMyIGV4dGVuZHMga2V5b2YgTzJbXCIkc2lnbmFsc1wiXSxcbiAgICBPMyBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFMzIGV4dGVuZHMga2V5b2YgTzNbXCIkc2lnbmFsc1wiXSxcbiAgICBPNCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM0IGV4dGVuZHMga2V5b2YgTzRbXCIkc2lnbmFsc1wiXSxcbiAgICBPNSBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM1IGV4dGVuZHMga2V5b2YgTzVbXCIkc2lnbmFsc1wiXSxcbiAgICBPNiBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM2IGV4dGVuZHMga2V5b2YgTzZbXCIkc2lnbmFsc1wiXSxcbiAgICBPNyBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM3IGV4dGVuZHMga2V5b2YgTzdbXCIkc2lnbmFsc1wiXSxcbiAgICBPOCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM4IGV4dGVuZHMga2V5b2YgTzhbXCIkc2lnbmFsc1wiXSxcbiAgICBPOSBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM5IGV4dGVuZHMga2V5b2YgTzlbXCIkc2lnbmFsc1wiXSxcbj4oXG4gICAgaW5pdDogVCxcbiAgICBoMTogW08xLCBTMSwgQ29ubmVjdGlvbkhhbmRsZXI8TzEsIFMxLCBUPl0sXG4gICAgaDI/OiBbTzIsIFMyLCBDb25uZWN0aW9uSGFuZGxlcjxPMiwgUzIsIFQ+XSxcbiAgICBoMz86IFtPMywgUzMsIENvbm5lY3Rpb25IYW5kbGVyPE8zLCBTMywgVD5dLFxuICAgIGg0PzogW080LCBTNCwgQ29ubmVjdGlvbkhhbmRsZXI8TzQsIFM0LCBUPl0sXG4gICAgaDU/OiBbTzUsIFM1LCBDb25uZWN0aW9uSGFuZGxlcjxPNSwgUzUsIFQ+XSxcbiAgICBoNj86IFtPNiwgUzYsIENvbm5lY3Rpb25IYW5kbGVyPE82LCBTNiwgVD5dLFxuICAgIGg3PzogW083LCBTNywgQ29ubmVjdGlvbkhhbmRsZXI8TzcsIFM3LCBUPl0sXG4gICAgaDg/OiBbTzgsIFM4LCBDb25uZWN0aW9uSGFuZGxlcjxPOCwgUzgsIFQ+XSxcbiAgICBoOT86IFtPOSwgUzksIENvbm5lY3Rpb25IYW5kbGVyPE85LCBTOSwgVD5dLFxuKSB7XG4gICAgbGV0IHZhbHVlID0gaW5pdFxuICAgIGxldCBkaXNwb3NlOiBBcnJheTxEaXNwb3NlRnVuY3Rpb24+XG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG4gICAgY29uc3Qgc2lnbmFscyA9IFtoMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBoNywgaDgsIGg5XS5maWx0ZXIoKGgpID0+IGggIT09IHVuZGVmaW5lZClcblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIGRpc3Bvc2UgPSBzaWduYWxzLm1hcCgoW29iamVjdCwgc2lnbmFsLCBjYWxsYmFja10pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBpZCA9IEdPYmplY3QuT2JqZWN0LnByb3RvdHlwZS5jb25uZWN0LmNhbGwoXG4gICAgICAgICAgICAgICAgICAgIG9iamVjdCxcbiAgICAgICAgICAgICAgICAgICAgc2lnbmFsIGFzIHN0cmluZyxcbiAgICAgICAgICAgICAgICAgICAgKF8sIC4uLmFyZ3MpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld1ZhbHVlID0gY2FsbGJhY2soLi4uYXJncywgdmFsdWUpXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgIT09IG5ld1ZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBuZXdWYWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIClcblxuICAgICAgICAgICAgICAgIHJldHVybiAoKSA9PiBHT2JqZWN0Lk9iamVjdC5wcm90b3R5cGUuZGlzY29ubmVjdC5jYWxsKG9iamVjdCwgaWQpXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGRpc3Bvc2UubWFwKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICBkaXNwb3NlLmxlbmd0aCA9IDBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gdmFsdWUsIHN1YnNjcmliZSlcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBzaWduYWwgZnJvbSBhIHByb3ZpZXIgZnVuY3Rpb24uXG4gKiBUaGUgcHJvdmlkZXIgaXMgY2FsbGVkIHdoZW4gdGhlIGZpcnN0IHN1YnNjcmliZXIgYXBwZWFycyBhbmQgdGhlIHJldHVybmVkIGRpc3Bvc2VcbiAqIGZ1bmN0aW9uIGZyb20gdGhlIHByb3ZpZGVyIHdpbGwgYmUgY2FsbGVkIHdoZW4gdGhlIG51bWJlciBvZiBzdWJzY3JpYmVycyBkcm9wIHRvIHplcm8uXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGB0c1xuICogY29uc3QgdmFsdWUgPSBjcmVhdGVFeHRlcm5hbCgwLCAoc2V0KSA9PiB7XG4gKiAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4gc2V0KCh2KSA9PiB2ICsgMSkpXG4gKiAgIHJldHVybiAoKSA9PiBjbGVhckludGVydmFsKGludGVydmFsKVxuICogfSlcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBpbml0IFRoZSBpbml0aWFsIHZhbHVlXG4gKiBAcGFyYW0gcHJvZHVjZXIgVGhlIHByb2R1Y2VyIGZ1bmN0aW9uIHdoaWNoIHNob3VsZCByZXR1cm4gYSBjbGVhbnVwIGZ1bmN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVFeHRlcm5hbDxUPihcbiAgICBpbml0OiBULFxuICAgIHByb2R1Y2VyOiAoc2V0OiBTZXR0ZXI8VD4pID0+IERpc3Bvc2VGdW5jdGlvbixcbik6IEFjY2Vzc29yPFQ+IHtcbiAgICBsZXQgY3VycmVudFZhbHVlID0gaW5pdFxuICAgIGxldCBkaXNwb3NlOiBEaXNwb3NlRnVuY3Rpb25cbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8U3Vic2NyaWJlQ2FsbGJhY2s+KClcblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIGRpc3Bvc2UgPSBwcm9kdWNlcigodjogdW5rbm93bikgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5ld1ZhbHVlOiBUID0gdHlwZW9mIHYgPT09IFwiZnVuY3Rpb25cIiA/IHYoY3VycmVudFZhbHVlKSA6IHZcbiAgICAgICAgICAgICAgICBpZiAobmV3VmFsdWUgIT09IGN1cnJlbnRWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50VmFsdWUgPSBuZXdWYWx1ZVxuICAgICAgICAgICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGRpc3Bvc2UoKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiBjdXJyZW50VmFsdWUsIHN1YnNjcmliZSlcbn1cblxuLyoqIEBleHBlcmltZW50YWwgKi9cbnR5cGUgU2V0dGluZ3M8VCBleHRlbmRzIFJlY29yZDxzdHJpbmcsIHN0cmluZz4+ID0ge1xuICAgIFtLIGluIGtleW9mIFQgYXMgVW5jYXBpdGFsaXplPFBhc2NhbGlmeTxLPj5dOiBBY2Nlc3NvcjxSZWN1cnNpdmVJbmZlcjxUW0tdPj5cbn0gJiB7XG4gICAgW0sgaW4ga2V5b2YgVCBhcyBgc2V0JHtQYXNjYWxpZnk8Sz59YF06IFNldHRlcjxEZWVwSW5mZXI8VFtLXT4+XG59XG5cbi8qKlxuICogQGV4cGVyaW1lbnRhbFxuICpcbiAqIFdyYXAgYSB7QGxpbmsgR2lvLlNldHRpbmdzfSBpbnRvIGEgY29sbGVjdGlvbiBvZiBzZXR0ZXJzIGFuZCBhY2Nlc3NvcnMuXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGB0c1xuICogY29uc3QgcyA9IGNyZWF0ZVNldHRpbmdzKHNldHRpbmdzLCB7XG4gKiAgIFwiY29tcGxleC1rZXlcIjogXCJhe3Nhe3NzfX1cIixcbiAqICAgXCJzaW1wbGUta2V5XCI6IFwic1wiLFxuICogfSlcbiAqXG4gKiBzLmNvbXBsZXhLZXkuc3Vic2NyaWJlKCgpID0+IHtcbiAqICAgcHJpbnQocy5jb21wbGV4S2V5LmdldCgpKVxuICogfSlcbiAqXG4gKiBzLnNldENvbXBsZXhLZXkoKHByZXYpID0+ICh7XG4gKiAgIC4uLnByZXYsXG4gKiAgIGtleTogeyBuZXN0ZWQ6IFwiXCIgfSxcbiAqIH0pKVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTZXR0aW5nczxjb25zdCBUIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgc3RyaW5nPj4oXG4gICAgc2V0dGluZ3M6IEdpby5TZXR0aW5ncyxcbiAgICBrZXlzOiBULFxuKTogU2V0dGluZ3M8VD4ge1xuICAgIHJldHVybiBPYmplY3QuZnJvbUVudHJpZXMoXG4gICAgICAgIE9iamVjdC5lbnRyaWVzKGtleXMpLmZsYXRNYXAoKFtrZXksIHR5cGVdKSA9PiBbXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgY2FtZWxpZnkoa2V5KSxcbiAgICAgICAgICAgICAgICBuZXcgQWNjZXNzb3IoXG4gICAgICAgICAgICAgICAgICAgICgpID0+IHNldHRpbmdzLmdldF92YWx1ZShrZXkpLnJlY3Vyc2l2ZVVucGFjaygpLFxuICAgICAgICAgICAgICAgICAgICAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGlkID0gc2V0dGluZ3MuY29ubmVjdChgY2hhbmdlZDo6JHtrZXl9YCwgY2FsbGJhY2spXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKCkgPT4gc2V0dGluZ3MuZGlzY29ubmVjdChpZClcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICBgc2V0JHtrZXlbMF0udG9VcHBlckNhc2UoKSArIGNhbWVsaWZ5KGtleSkuc2xpY2UoMSl9YCxcbiAgICAgICAgICAgICAgICAodjogdW5rbm93bikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBzZXR0aW5ncy5zZXRfdmFsdWUoXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXksXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXcgR0xpYi5WYXJpYW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZW9mIHYgPT09IFwiZnVuY3Rpb25cIiA/IHYoc2V0dGluZ3MuZ2V0X3ZhbHVlKGtleSkuZGVlcFVucGFjaygpKSA6IHYsXG4gICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgIF0pLFxuICAgIClcbn1cbiIsICJpbXBvcnQgdHlwZSBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuXG5leHBvcnQgZnVuY3Rpb24ga2ViYWJpZnkoc3RyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyXG4gICAgICAgIC5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCBcIiQxLSQyXCIpXG4gICAgICAgIC5yZXBsYWNlQWxsKFwiX1wiLCBcIi1cIilcbiAgICAgICAgLnRvTG93ZXJDYXNlKClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNuYWtlaWZ5KHN0cjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0clxuICAgICAgICAucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgXCIkMS0kMlwiKVxuICAgICAgICAucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpXG4gICAgICAgIC50b0xvd2VyQ2FzZSgpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYW1lbGlmeShzdHI6IHN0cmluZykge1xuICAgIHJldHVybiBzdHIucmVwbGFjZSgvWy1fXSguKS9nLCAoXywgY2hhcikgPT4gY2hhci50b1VwcGVyQ2FzZSgpKVxufVxuXG5leHBvcnQgdHlwZSBQYXNjYWxpZnk8Uz4gPSBTIGV4dGVuZHMgYCR7aW5mZXIgSGVhZH0ke1wiLVwiIHwgXCJfXCJ9JHtpbmZlciBUYWlsfWBcbiAgICA/IGAke0NhcGl0YWxpemU8SGVhZD59JHtQYXNjYWxpZnk8VGFpbD59YFxuICAgIDogUyBleHRlbmRzIHN0cmluZ1xuICAgICAgPyBDYXBpdGFsaXplPFM+XG4gICAgICA6IG5ldmVyXG5cbmV4cG9ydCB0eXBlIFhtbE5vZGUgPSB7XG4gICAgbmFtZTogc3RyaW5nXG4gICAgYXR0cmlidXRlcz86IFJlY29yZDxzdHJpbmcsIHN0cmluZz5cbiAgICBjaGlsZHJlbj86IEFycmF5PFhtbE5vZGU+XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB4bWwoeyBuYW1lLCBhdHRyaWJ1dGVzLCBjaGlsZHJlbiB9OiBYbWxOb2RlKSB7XG4gICAgbGV0IGJ1aWxkZXIgPSBgPCR7bmFtZX1gXG5cbiAgICBjb25zdCBhdHRycyA9IE9iamVjdC5lbnRyaWVzKGF0dHJpYnV0ZXMgPz8gW10pXG5cbiAgICBpZiAoYXR0cnMubGVuZ3RoID4gMCkge1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBhdHRycykge1xuICAgICAgICAgICAgYnVpbGRlciArPSBgICR7a2V5fT1cIiR7dmFsdWV9XCJgXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoY2hpbGRyZW4gJiYgY2hpbGRyZW4ubGVuZ3RoID4gMCkge1xuICAgICAgICBidWlsZGVyICs9IFwiPlwiXG4gICAgICAgIGZvciAoY29uc3Qgbm9kZSBvZiBjaGlsZHJlbikge1xuICAgICAgICAgICAgYnVpbGRlciArPSB4bWwobm9kZSlcbiAgICAgICAgfVxuICAgICAgICBidWlsZGVyICs9IGA8LyR7bmFtZX0+YFxuICAgIH0gZWxzZSB7XG4gICAgICAgIGJ1aWxkZXIgKz0gXCIgLz5cIlxuICAgIH1cblxuICAgIHJldHVybiBidWlsZGVyXG59XG5cbi8vIEJpbmRpbmdzIHdvcmsgb3ZlciBwcm9wZXJ0aWVzIGluIGtlYmFiLWNhc2UgYmVjYXVzZSB0aGF0cyB0aGUgY29udmVudGlvbiBvZiBnb2JqZWN0XG4vLyBob3dldmVyIGluIGpzIGl0cyBlaXRoZXIgc25ha2VfY2FzZSBvciBjYW1lbENhc2Vcbi8vIGFsc28gb24gREJ1cyBpbnRlcmZhY2VzIGl0cyBQYXNjYWxDYXNlIGJ5IGNvbnZlbnRpb25cbi8vIHNvIGFzIGEgd29ya2Fyb3VuZCB3ZSB1c2UgZ2V0X3Byb3BlcnR5X25hbWUgYW5kIG9ubHkgdXNlIHRoZSBwcm9wZXJ0eSBmaWVsZCBhcyBhIGZhbGxiYWNrXG5leHBvcnQgZnVuY3Rpb24gZGVmaW5lUHJvcGVydHlHZXR0ZXI8VCBleHRlbmRzIG9iamVjdD4ob2JqZWN0OiBULCBwcm9wOiBFeHRyYWN0PGtleW9mIFQsIHN0cmluZz4pIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqZWN0LCBgZ2V0XyR7a2ViYWJpZnkocHJvcCkucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpfWAsIHtcbiAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6ICgpID0+IG9iamVjdFtwcm9wXSxcbiAgICB9KVxufVxuXG4vLyBhdHRlbXB0IHNldHRpbmcgYSBwcm9wZXJ0eSBvZiBHT2JqZWN0Lk9iamVjdFxuZXhwb3J0IGZ1bmN0aW9uIHNldChvYmo6IEdPYmplY3QuT2JqZWN0LCBwcm9wOiBzdHJpbmcsIHZhbHVlOiBhbnkpIHtcbiAgICBjb25zdCBrZXkgPSBzbmFrZWlmeShwcm9wKVxuICAgIGNvbnN0IGdldHRlciA9IGBnZXRfJHtrZXl9YCBhcyBrZXlvZiB0eXBlb2Ygb2JqXG4gICAgY29uc3Qgc2V0dGVyID0gYHNldF8ke2tleX1gIGFzIGtleW9mIHR5cGVvZiBvYmpcblxuICAgIGxldCBjdXJyZW50OiB1bmtub3duXG5cbiAgICBpZiAoZ2V0dGVyIGluIG9iaiAmJiB0eXBlb2Ygb2JqW2dldHRlcl0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICBjdXJyZW50ID0gKG9ialtnZXR0ZXJdIGFzICgpID0+IHVua25vd24pKClcbiAgICB9IGVsc2Uge1xuICAgICAgICBjdXJyZW50ID0gb2JqW3Byb3AgYXMga2V5b2YgdHlwZW9mIG9ial1cbiAgICB9XG5cbiAgICBpZiAoY3VycmVudCAhPT0gdmFsdWUpIHtcbiAgICAgICAgaWYgKHNldHRlciBpbiBvYmogJiYgdHlwZW9mIG9ialtzZXR0ZXJdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIDsob2JqW3NldHRlcl0gYXMgKHY6IGFueSkgPT4gdm9pZCkodmFsdWUpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKG9iaiwgeyBbcHJvcF06IHZhbHVlIH0pXG4gICAgICAgIH1cbiAgICB9XG59XG4iLCAiaW1wb3J0IHR5cGUgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCB7IHR5cGUgQWNjZXNzb3IgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5cbnR5cGUgR09iaiA9IEdPYmplY3QuT2JqZWN0XG5leHBvcnQgdHlwZSBDQzxUIGV4dGVuZHMgR09iaiA9IEdPYmo+ID0geyBuZXcgKHByb3BzOiBhbnkpOiBUIH1cbmV4cG9ydCB0eXBlIEZDPFQgZXh0ZW5kcyBHT2JqID0gR09iaj4gPSAocHJvcHM6IGFueSkgPT4gVFxuXG50eXBlIENzc1NldHRlciA9IChvYmplY3Q6IEdPYmosIGNzczogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPikgPT4gdm9pZFxudHlwZSBDaGlsZEZuID0gKHBhcmVudDogR09iaiwgY2hpbGQ6IEdPYmogfCBudW1iZXIgfCBzdHJpbmcsIGluZGV4PzogbnVtYmVyKSA9PiB2b2lkXG5cbmV4cG9ydCBmdW5jdGlvbiBjb25maWd1ZShjb25mOiBQYXJ0aWFsPEpzeEVudj4pIHtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihlbnYsIGNvbmYpXG59XG5cbnR5cGUgSnN4RW52ID0ge1xuICAgIGludHJpbnNpY0VsZW1lbnRzOiBSZWNvcmQ8c3RyaW5nLCBDQyB8IEZDPlxuICAgIGFkZENoaWxkOiBDaGlsZEZuXG4gICAgc2V0Q3NzOiBDc3NTZXR0ZXJcbiAgICBzZXRDbGFzczogQ3NzU2V0dGVyXG4gICAgaW5pdFByb3BzOiAocHJvcHM6IGFueSkgPT4gdm9pZFxuICAgIGRlZmF1bHRDbGVhbnVwOiAob2JqZWN0OiBHT2JqKSA9PiB2b2lkXG59XG5cbmZ1bmN0aW9uIG1pc3NpbmdJbXBsKCkge1xuICAgIHRocm93IEVycm9yKFwibWlzc2luZyBpbXBsXCIpXG59XG5cbmV4cG9ydCBjb25zdCBlbnY6IEpzeEVudiA9IHtcbiAgICBpbnRyaW5zaWNFbGVtZW50czoge30sXG4gICAgYWRkQ2hpbGQ6IG1pc3NpbmdJbXBsLFxuICAgIHNldENzczogbWlzc2luZ0ltcGwsXG4gICAgc2V0Q2xhc3M6IG1pc3NpbmdJbXBsLFxuICAgIGluaXRQcm9wczogKCkgPT4gdm9pZCAwLFxuICAgIGRlZmF1bHRDbGVhbnVwOiAoKSA9PiB2b2lkIDAsXG59XG4iLCAiZXhwb3J0IGNsYXNzIFNjb3BlIHtcbiAgICBzdGF0aWMgY3VycmVudD86IFNjb3BlIHwgbnVsbFxuXG4gICAgcGFyZW50PzogU2NvcGUgfCBudWxsXG4gICAgY29udGV4dHMgPSBuZXcgTWFwPENvbnRleHQsIHVua25vd24+KClcblxuICAgIHByaXZhdGUgY2xlYW51cHMgPSBuZXcgU2V0PCgpID0+IHZvaWQ+KClcbiAgICBwcml2YXRlIG1vdW50cyA9IG5ldyBTZXQ8KCkgPT4gdm9pZD4oKVxuICAgIHByaXZhdGUgbW91bnRlZCA9IGZhbHNlXG5cbiAgICBjb25zdHJ1Y3RvcihwYXJlbnQ/OiBTY29wZSB8IG51bGwpIHtcbiAgICAgICAgdGhpcy5wYXJlbnQgPSBwYXJlbnRcbiAgICB9XG5cbiAgICBvbkNsZWFudXAoY2FsbGJhY2s6ICgpID0+IHZvaWQpIHtcbiAgICAgICAgdGhpcy5jbGVhbnVwcz8uYWRkKGNhbGxiYWNrKVxuICAgIH1cblxuICAgIG9uTW91bnQoY2FsbGJhY2s6ICgpID0+IHZvaWQpIHtcbiAgICAgICAgaWYgKHRoaXMucGFyZW50ICYmICF0aGlzLnBhcmVudC5tb3VudGVkKSB7XG4gICAgICAgICAgICB0aGlzLnBhcmVudC5vbk1vdW50KGNhbGxiYWNrKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5tb3VudHMuYWRkKGNhbGxiYWNrKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcnVuPFQ+KGZuOiAoKSA9PiBUKSB7XG4gICAgICAgIGNvbnN0IHByZXYgPSBTY29wZS5jdXJyZW50XG4gICAgICAgIFNjb3BlLmN1cnJlbnQgPSB0aGlzXG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBmbigpXG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICB0aGlzLm1vdW50cy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgIHRoaXMubW91bnRzLmNsZWFyKClcbiAgICAgICAgICAgIHRoaXMubW91bnRlZCA9IHRydWVcbiAgICAgICAgICAgIFNjb3BlLmN1cnJlbnQgPSBwcmV2XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBkaXNwb3NlKCkge1xuICAgICAgICB0aGlzLmNsZWFudXBzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICB0aGlzLmNsZWFudXBzLmNsZWFyKClcbiAgICAgICAgdGhpcy5jb250ZXh0cy5jbGVhcigpXG4gICAgICAgIGRlbGV0ZSB0aGlzLnBhcmVudFxuICAgIH1cbn1cblxuZXhwb3J0IHR5cGUgQ29udGV4dDxUID0gYW55PiA9IHtcbiAgICB1c2UoKTogVFxuICAgIHByb3ZpZGU8Uj4odmFsdWU6IFQsIGZuOiAoKSA9PiBSKTogUlxuICAgIChwcm9wczogeyB2YWx1ZTogVDsgY2hpbGRyZW46ICgpID0+IEpTWC5FbGVtZW50IH0pOiBKU1guRWxlbWVudFxufVxuXG4vKipcbiAqIEV4YW1wbGUgVXNhZ2U6XG4gKiBgYGB0c3hcbiAqIGNvbnN0IE15Q29udGV4dCA9IGNyZWF0ZUNvbnRleHQoXCJmYWxsYmFjay12YWx1ZVwiKVxuICpcbiAqIGZ1bmN0aW9uIENvbnN1bWVyQ29tcG9uZW50KCkge1xuICogICBjb25zdCB2YWx1ZSA9IE15Q29udGV4dC51c2UoKVxuICpcbiAqICAgcmV0dXJuIDxHdGsuTGFiZWwgbGFiZWw9e3ZhbHVlfSAvPlxuICogfVxuICpcbiAqIGZ1bmN0aW9uIFByb3ZpZGVyQ29tcG9uZW50KCkge1xuICogICByZXR1cm4gKFxuICogICAgIDxHdGsuQm94PlxuICogICAgICAgPE15Q29udGV4dCB2YWx1ZT1cIm15LXZhbHVlXCI+XG4gKiAgICAgICAgIHsoKSA9PiA8Q29uc3VtZXJDb21wb25lbnQgLz59XG4gKiAgICAgICA8L015Q29udGV4dD5cbiAqICAgICA8L0d0ay5Cb3g+XG4gKiAgIClcbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29udGV4dDxUPihkZWZhdWx0VmFsdWU6IFQpOiBDb250ZXh0PFQ+IHtcbiAgICBsZXQgY3R4OiBDb250ZXh0PFQ+XG5cbiAgICBmdW5jdGlvbiBwcm92aWRlPFI+KHZhbHVlOiBULCBmbjogKCkgPT4gUik6IFIge1xuICAgICAgICBjb25zdCBzY29wZSA9IGdldFNjb3BlKClcbiAgICAgICAgc2NvcGUuY29udGV4dHMuc2V0KGN0eCwgdmFsdWUpXG4gICAgICAgIHJldHVybiBzY29wZS5ydW4oZm4pXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdXNlKCk6IFQge1xuICAgICAgICBsZXQgc2NvcGUgPSBTY29wZS5jdXJyZW50XG4gICAgICAgIHdoaWxlIChzY29wZSkge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBzY29wZS5jb250ZXh0cy5nZXQoY3R4KVxuICAgICAgICAgICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQpIHJldHVybiB2YWx1ZSBhcyBUXG4gICAgICAgICAgICBzY29wZSA9IHNjb3BlLnBhcmVudFxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWVcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjb250ZXh0KHsgdmFsdWUsIGNoaWxkcmVuIH06IHsgdmFsdWU6IFQ7IGNoaWxkcmVuOiAoKSA9PiBKU1guRWxlbWVudCB9KSB7XG4gICAgICAgIHJldHVybiBwcm92aWRlKHZhbHVlLCBjaGlsZHJlbilcbiAgICB9XG5cbiAgICByZXR1cm4gKGN0eCA9IE9iamVjdC5hc3NpZ24oY29udGV4dCwge1xuICAgICAgICBwcm92aWRlLFxuICAgICAgICB1c2UsXG4gICAgfSkpXG59XG5cbi8qKlxuICogR2V0cyB0aGUgc2NvcGUgdGhhdCBvd25zIHRoZSBjdXJyZW50bHkgcnVubmluZyBjb2RlLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c1xuICogY29uc3Qgc2NvcGUgPSBnZXRTY29wZSgpXG4gKiBzZXRUaW1lb3V0KCgpID0+IHtcbiAqICAgLy8gVGhpcyBjYWxsYmFjayBnZXRzIHJ1biB3aXRob3V0IGFuIG93bmVyIHNjb3BlLlxuICogICAvLyBSZXN0b3JlIG93bmVyIHZpYSBzY29wZS5ydW46XG4gKiAgIHNjb3BlLnJ1bigoKSA9PiB7XG4gKiAgICAgY29uc3QgZm9vID0gRm9vQ29udGV4dC51c2UoKVxuICogICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gKiAgICAgICBwcmludChcInNvbWUgY2xlYW51cFwiKVxuICogICAgIH0pXG4gKiAgIH0pXG4gKiB9LCAxMDAwKVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRTY29wZSgpOiBTY29wZSB7XG4gICAgY29uc3Qgc2NvcGUgPSBTY29wZS5jdXJyZW50XG4gICAgaWYgKCFzY29wZSkge1xuICAgICAgICB0aHJvdyBFcnJvcihcImNhbm5vdCBnZXQgc2NvcGU6IG91dCBvZiB0cmFja2luZyBjb250ZXh0XCIpXG4gICAgfVxuXG4gICAgcmV0dXJuIHNjb3BlXG59XG5cbi8qKlxuICogQXR0YWNoIGEgY2xlYW51cCBjYWxsYmFjayB0byB0aGUgY3VycmVudCB7QGxpbmsgU2NvcGV9LlxuICovXG5leHBvcnQgZnVuY3Rpb24gb25DbGVhbnVwKGNsZWFudXA6ICgpID0+IHZvaWQpIHtcbiAgICBpZiAoIVNjb3BlLmN1cnJlbnQpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihFcnJvcihcIm91dCBvZiB0cmFja2luZyBjb250ZXh0OiB3aWxsIG5vdCBiZSBhYmxlIHRvIGNsZWFudXBcIikpXG4gICAgfVxuXG4gICAgU2NvcGUuY3VycmVudD8ub25DbGVhbnVwKGNsZWFudXApXG59XG5cbi8qKlxuICogQXR0YWNoIGEgY2FsbGJhY2sgdG8gcnVuIHdoZW4gdGhlIGN1cnJlbnRseSBydW5uaW5nIHtAbGluayBTY29wZX0gcmV0dXJucy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9uTW91bnQoY2xlYW51cDogKCkgPT4gdm9pZCkge1xuICAgIGlmICghU2NvcGUuY3VycmVudCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKEVycm9yKFwiY2Fubm90IGF0dGFjaCBvbk1vdW50OiBvdXQgb2YgdHJhY2tpbmcgY29udGV4dFwiKSlcbiAgICB9XG5cbiAgICBTY29wZS5jdXJyZW50Py5vbk1vdW50KGNsZWFudXApXG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIHJvb3Qge0BsaW5rIFNjb3BlfSB0aGF0IHdoZW4gZGlzcG9zZWQgd2lsbCByZW1vdmVcbiAqIGFueSBjaGlsZCBzaWduYWwgaGFuZGxlciBvciBzdGF0ZSBzdWJzY3JpYmVyLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c3hcbiAqIGNyZWF0ZVJvb3QoKGRpc3Bvc2UpID0+IHtcbiAqICAgbGV0IHJvb3Q6IEd0ay5XaW5kb3dcbiAqXG4gKiAgIGNvbnN0IFtzdGF0ZV0gPSBjcmVhdGVTdGF0ZShcInZhbHVlXCIpXG4gKlxuICogICBjb25zdCByZW1vdmUgPSAoKSA9PiB7XG4gKiAgICAgcm9vdC5kZXN0cm95KClcbiAqICAgICBkaXNwb3NlKClcbiAqICAgfVxuICpcbiAqICAgcmV0dXJuIChcbiAqICAgICA8R3RrLldpbmRvdyAkPXsoc2VsZikgPT4gKHJvb3QgPSBzZWxmKX0+XG4gKiAgICAgICA8R3RrLkJveD5cbiAqICAgICAgICAgPEd0ay5MYWJlbCBsYWJlbD17c3RhdGV9IC8+XG4gKiAgICAgICAgIDxHdGsuQnV0dG9uICRjbGlja2VkPXtyZW1vdmV9IC8+XG4gKiAgICAgICA8L0d0ay5Cb3g+XG4gKiAgICAgPC9HdGsuV2luZG93PlxuICogICApXG4gKiB9KVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVSb290PFQ+KGZuOiAoZGlzcG9zZTogKCkgPT4gdm9pZCkgPT4gVCkge1xuICAgIGNvbnN0IHNjb3BlID0gbmV3IFNjb3BlKG51bGwpXG4gICAgcmV0dXJuIHNjb3BlLnJ1bigoKSA9PiBmbigoKSA9PiBzY29wZS5kaXNwb3NlKCkpKVxufVxuIiwgImltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IHsgcmVnaXN0ZXJEZXN0cm95YWJsZVR5cGUgfSBmcm9tIFwiLi4vZ25vbWUvc2lnbmFsVHJhY2tlci5qc1wiXG5cbi8vIFRPRE86IEZyYWdtZW50IHNob3VsZCBpbXBsZW1lbnQgR2lvLkxpc3RNb2RlbFxuXG5leHBvcnQgY2xhc3MgRnJhZ21lbnQ8VCA9IGFueT4gZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCB7XG4gICAgc3RhdGljIFtHT2JqZWN0LnNpZ25hbHNdID0ge1xuICAgICAgICBcImRlc3Ryb3lcIjoge30sXG5cbiAgICAgICAgXCJjaGlsZC1hZGRlZFwiOiB7XG4gICAgICAgICAgICBwYXJhbV90eXBlczogW0dPYmplY3QuVFlQRV9PQkpFQ1QsIEdPYmplY3QuVFlQRV9VSU5UXSxcbiAgICAgICAgfSxcbiAgICAgICAgXCJjaGlsZC1yZW1vdmVkXCI6IHtcbiAgICAgICAgICAgIHBhcmFtX3R5cGVzOiBbR09iamVjdC5UWVBFX09CSkVDVCwgR09iamVjdC5UWVBFX1VJTlRdLFxuICAgICAgICB9LFxuICAgIH1cblxuICAgIHN0YXRpYyBbR09iamVjdC5wcm9wZXJ0aWVzXSA9IHtcbiAgICAgICAgY2hpbGRyZW46IEdPYmplY3QuUGFyYW1TcGVjLmpzb2JqZWN0KFwiY2hpbGRyZW5cIiwgXCJcIiwgXCJcIiwgR09iamVjdC5QYXJhbUZsYWdzLlJFQURBQkxFKSxcbiAgICB9XG5cbiAgICBzdGF0aWMge1xuICAgICAgICBHT2JqZWN0LnJlZ2lzdGVyQ2xhc3ModGhpcylcbiAgICAgICAgcmVnaXN0ZXJEZXN0cm95YWJsZVR5cGUodGhpcylcbiAgICB9XG5cbiAgICBzdGF0aWMgbmV3PFQ+KGNoaWxkcmVuOiBBcnJheTxUPiA9IFtdKSB7XG4gICAgICAgIHJldHVybiBuZXcgRnJhZ21lbnQoeyBjaGlsZHJlbiB9KVxuICAgIH1cblxuICAgIHByaXZhdGUgY29ubmVjdGlvbklkcyA9IG5ldyBTZXQ8bnVtYmVyPigpXG4gICAgcHJpdmF0ZSBfY2hpbGRyZW46IEFycmF5PFQ+XG5cbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgIHJldHVybiBbLi4udGhpcy5fY2hpbGRyZW5dXG4gICAgfVxuXG4gICAgYWRkQ2hpbGQoY2hpbGQ6IFQsIGluZGV4OiBudW1iZXIgPSAtMSk6IHZvaWQge1xuICAgICAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBGcmFnbWVudCkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYG5lc3RpbmcgRnJhZ21lbnRzIGFyZSBub3QgeWV0IHN1cHBvcnRlZGApXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaW5kZXggPiAwKSB7XG4gICAgICAgICAgICB0aGlzLl9jaGlsZHJlbiA9IFtcbiAgICAgICAgICAgICAgICAuLi50aGlzLl9jaGlsZHJlbi5zbGljZSgwLCBpbmRleCksXG4gICAgICAgICAgICAgICAgY2hpbGQsXG4gICAgICAgICAgICAgICAgLi4udGhpcy5fY2hpbGRyZW4uc2xpY2UoaW5kZXgpLFxuICAgICAgICAgICAgXVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fY2hpbGRyZW4ucHVzaChjaGlsZClcbiAgICAgICAgICAgIGluZGV4ID0gdGhpcy5fY2hpbGRyZW4ubGVuZ3RoIC0gMVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5lbWl0KFwiY2hpbGQtYWRkZWRcIiwgY2hpbGQsIGluZGV4KVxuICAgICAgICB0aGlzLm5vdGlmeShcImNoaWxkcmVuXCIpXG4gICAgfVxuXG4gICAgaGFzQ2hpbGQoY2hpbGQ6IFQpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NoaWxkcmVuLmZpbmRJbmRleCgoY2gpID0+IGNoID09PSBjaGlsZCkgPiAtMVxuICAgIH1cblxuICAgIHJlbW92ZUNoaWxkKGNoaWxkOiBUKTogdm9pZCB7XG4gICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5fY2hpbGRyZW4uZmluZEluZGV4KChpKSA9PiBpID09PSBjaGlsZClcbiAgICAgICAgdGhpcy5fY2hpbGRyZW4uc3BsaWNlKGluZGV4LCAxKVxuXG4gICAgICAgIHRoaXMuZW1pdChcImNoaWxkLXJlbW92ZWRcIiwgY2hpbGQsIGluZGV4KVxuICAgICAgICB0aGlzLm5vdGlmeShcImNoaWxkcmVuXCIpXG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoeyBjaGlsZHJlbiA9IFtdIH06IFBhcnRpYWw8eyBjaGlsZHJlbjogQXJyYXk8VD4gfCBUIH0+ID0ge30pIHtcbiAgICAgICAgc3VwZXIoKVxuICAgICAgICB0aGlzLl9jaGlsZHJlbiA9IEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW4gOiBbY2hpbGRyZW5dXG4gICAgfVxuXG4gICAgY29ubmVjdChzaWduYWw6IHN0cmluZywgY2FsbGJhY2s6IChfOiB0aGlzLCAuLi5hcmdzOiBhbnlbXSkgPT4gdm9pZCk6IG51bWJlciB7XG4gICAgICAgIGNvbnN0IGlkID0gc3VwZXIuY29ubmVjdChzaWduYWwsIGNhbGxiYWNrKVxuICAgICAgICB0aGlzLmNvbm5lY3Rpb25JZHMuYWRkKGlkKVxuICAgICAgICByZXR1cm4gaWRcbiAgICB9XG5cbiAgICBkaXNjb25uZWN0KGlkOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgc3VwZXIuZGlzY29ubmVjdChpZClcbiAgICAgICAgdGhpcy5jb25uZWN0aW9uSWRzLmRlbGV0ZShpZClcbiAgICB9XG5cbiAgICBkZXN0cm95KCkge1xuICAgICAgICB0aGlzLmVtaXQoXCJkZXN0cm95XCIpXG4gICAgICAgIGZvciAoY29uc3QgaWQgb2YgdGhpcy5jb25uZWN0aW9uSWRzLnZhbHVlcygpKSB7XG4gICAgICAgICAgICBzdXBlci5kaXNjb25uZWN0KGlkKVxuICAgICAgICB9XG4gICAgfVxufVxuIiwgImltcG9ydCB0eXBlIEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5cbnR5cGUgVHlwZSA9IHsgbmV3ICguLi5hcmdzOiBhbnlbXSk6IEdPYmplY3QuT2JqZWN0IH1cblxuLy8gQHRzLWV4cGVjdC1lcnJvciBtaXNzaW5nIHR5cGVzXG5jb25zdCBtb2QgPSBpbXBvcnQoXCJyZXNvdXJjZTovLy9vcmcvZ25vbWUvc2hlbGwvbWlzYy9zaWduYWxUcmFja2VyLmpzXCIpXG5cbmV4cG9ydCBjb25zdCByZWdpc3RlckRlc3Ryb3lhYmxlVHlwZTogKHR5cGU6IFR5cGUpID0+IHZvaWQgPSBhd2FpdCBtb2RcbiAgICAudGhlbigobW9kKSA9PiBtb2QucmVnaXN0ZXJEZXN0cm95YWJsZVR5cGUpXG4gICAgLmNhdGNoKCgpID0+ICgpID0+IHZvaWQgMClcbiIsICJpbXBvcnQgeyBGcmFnbWVudCB9IGZyb20gXCIuL0ZyYWdtZW50LmpzXCJcbmltcG9ydCB7IEFjY2Vzc29yLCB0eXBlIFN0YXRlLCBjcmVhdGVTdGF0ZSB9IGZyb20gXCIuL3N0YXRlLmpzXCJcbmltcG9ydCB7IGVudiB9IGZyb20gXCIuL2Vudi5qc1wiXG5pbXBvcnQgeyBnZXRTY29wZSwgb25DbGVhbnVwLCBTY29wZSB9IGZyb20gXCIuL3Njb3BlLmpzXCJcblxuaW50ZXJmYWNlIEZvclByb3BzPEl0ZW0sIEVsIGV4dGVuZHMgSlNYLkVsZW1lbnQsIEtleT4ge1xuICAgIGVhY2g6IEFjY2Vzc29yPEl0ZXJhYmxlPEl0ZW0+PlxuICAgIGNoaWxkcmVuOiAoaXRlbTogSXRlbSwgaW5kZXg6IEFjY2Vzc29yPG51bWJlcj4pID0+IEVsXG5cbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0byBydW4gZm9yIGVhY2ggcmVtb3ZlZCBlbGVtZW50LlxuICAgICAqIFRoZSBkZWZhdWx0IHZhbHVlIGRlcGVuZHMgb24gdGhlIGVudmlyb25tZW50OlxuICAgICAqXG4gICAgICogLSAqKkd0azQqKjogbnVsbFxuICAgICAqIC0gKipHdGszKio6IEd0ay5XaWRnZXQucHJvdG90eXBlLmRlc3Ryb3lcbiAgICAgKiAtICoqR25vbWUqKjogQ2x1dHRlci5BY3Rvci5wcm90b3R5cGUuZGVzdHJveVxuICAgICAqL1xuICAgIGNsZWFudXA/OiBudWxsIHwgKChlbGVtZW50OiBFbCwgaXRlbTogSXRlbSwgaW5kZXg6IG51bWJlcikgPT4gdm9pZClcblxuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRoYXQgZ2VuZXJhdGVzIHRoZSBrZXkgZm9yIGVhY2ggaXRlbS5cbiAgICAgKlxuICAgICAqIEJ5IGRlZmF1bHQgaXRlbXMgYXJlIG1hcHBlZCBieTpcbiAgICAgKiAtIHZhbHVlIGluIGNhc2Ugb2YgcHJpbWl0aXZlIHZhbHVlc1xuICAgICAqIC0gcmVmZXJlbmNlIG90aGVyd2lzZVxuICAgICAqL1xuICAgIGlkPzogKGl0ZW06IEl0ZW0pID0+IEtleSB8IEl0ZW1cbn1cblxuLy8gVE9ETzogc3VwcG9ydCBHaW8uTGlzdE1vZGVsXG5cbmV4cG9ydCBmdW5jdGlvbiBGb3I8SXRlbSwgRWwgZXh0ZW5kcyBKU1guRWxlbWVudCwgS2V5Pih7XG4gICAgZWFjaCxcbiAgICBjaGlsZHJlbjogbWtDaGlsZCxcbiAgICBjbGVhbnVwLFxuICAgIGlkID0gKGl0ZW06IEl0ZW0pID0+IGl0ZW0sXG59OiBGb3JQcm9wczxJdGVtLCBFbCwgS2V5Pik6IEZyYWdtZW50PEVsPiB7XG4gICAgdHlwZSBNYXBJdGVtID0geyBpdGVtOiBJdGVtOyBjaGlsZDogRWw7IGluZGV4OiBTdGF0ZTxudW1iZXI+OyBzY29wZTogU2NvcGUgfVxuXG4gICAgY29uc3QgY3VycmVudFNjb3BlID0gZ2V0U2NvcGUoKVxuICAgIGNvbnN0IG1hcCA9IG5ldyBNYXA8SXRlbSB8IEtleSwgTWFwSXRlbT4oKVxuICAgIGNvbnN0IGZyYWdtZW50ID0gbmV3IEZyYWdtZW50PEVsPigpXG5cbiAgICBmdW5jdGlvbiByZW1vdmUoeyBpdGVtLCBjaGlsZCwgaW5kZXg6IFtpbmRleF0sIHNjb3BlIH06IE1hcEl0ZW0pIHtcbiAgICAgICAgc2NvcGUuZGlzcG9zZSgpXG4gICAgICAgIGlmICh0eXBlb2YgY2xlYW51cCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICBjbGVhbnVwKGNoaWxkLCBpdGVtLCBpbmRleC5nZXQoKSlcbiAgICAgICAgfSBlbHNlIGlmIChjbGVhbnVwICE9PSBudWxsKSB7XG4gICAgICAgICAgICBlbnYuZGVmYXVsdENsZWFudXAoY2hpbGQpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjYWxsYmFjayhpdGFyZWFibGU6IEl0ZXJhYmxlPEl0ZW0+KSB7XG4gICAgICAgIGNvbnN0IGl0ZW1zID0gWy4uLml0YXJlYWJsZV1cbiAgICAgICAgY29uc3QgaWRzID0gaXRlbXMubWFwKGlkKVxuICAgICAgICBjb25zdCBpZFNldCA9IG5ldyBTZXQoaWRzKVxuXG4gICAgICAgIC8vIGNsZWFudXAgY2hpbGRyZW4gbWlzc2luZyBmcm9tIGFyclxuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBtYXAuZW50cmllcygpKSB7XG4gICAgICAgICAgICAvLyB0aGVyZSBpcyBubyBnZW5lcmljIHdheSB0byBpbnNlcnQgY2hpbGQgYXQgaW5kZXhcbiAgICAgICAgICAgIC8vIHNvIHdlIHNvcnQgYnkgcmVtb3ZpbmcgZXZlcnkgY2hpbGQgYW5kIHJlYXBwZW5kaW5nIGluIG9yZGVyXG4gICAgICAgICAgICBmcmFnbWVudC5yZW1vdmVDaGlsZCh2YWx1ZS5jaGlsZClcblxuICAgICAgICAgICAgaWYgKCFpZFNldC5oYXMoa2V5KSkge1xuICAgICAgICAgICAgICAgIHJlbW92ZSh2YWx1ZSlcbiAgICAgICAgICAgICAgICBtYXAuZGVsZXRlKGtleSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHVwZGF0ZSBpbmRleCBhbmQgYWRkIG5ldyBpdGVtc1xuICAgICAgICBpdGVtcy5tYXAoKGl0ZW0sIGkpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGtleSA9IGlkc1tpXVxuICAgICAgICAgICAgaWYgKG1hcC5oYXMoa2V5KSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgICAgICAgICAgaW5kZXg6IFssIHNldEluZGV4XSxcbiAgICAgICAgICAgICAgICAgICAgY2hpbGQsXG4gICAgICAgICAgICAgICAgfSA9IG1hcC5nZXQoa2V5KSFcbiAgICAgICAgICAgICAgICBzZXRJbmRleChpKVxuICAgICAgICAgICAgICAgIGlmIChmcmFnbWVudC5oYXNDaGlsZChjaGlsZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGBkdXBsaWNhdGUga2V5cyBmb3VuZDogJHtrZXl9YClcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBmcmFnbWVudC5hZGRDaGlsZChjaGlsZClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnN0IFtpbmRleCwgc2V0SW5kZXhdID0gY3JlYXRlU3RhdGUoaSlcbiAgICAgICAgICAgICAgICBjb25zdCBzY29wZSA9IG5ldyBTY29wZShjdXJyZW50U2NvcGUpXG4gICAgICAgICAgICAgICAgY29uc3QgY2hpbGQgPSBzY29wZS5ydW4oKCkgPT4gbWtDaGlsZChpdGVtLCBpbmRleCkpXG4gICAgICAgICAgICAgICAgbWFwLnNldChrZXksIHsgaXRlbSwgY2hpbGQsIGluZGV4OiBbaW5kZXgsIHNldEluZGV4XSwgc2NvcGUgfSlcbiAgICAgICAgICAgICAgICBmcmFnbWVudC5hZGRDaGlsZChjaGlsZClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBjb25zdCBkaXNwb3NlID0gZWFjaC5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICBjYWxsYmFjayhlYWNoLmdldCgpKVxuICAgIH0pXG4gICAgY2FsbGJhY2soZWFjaC5nZXQoKSlcblxuICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgIGRpc3Bvc2UoKVxuXG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgbWFwLnZhbHVlcygpKSB7XG4gICAgICAgICAgICByZW1vdmUodmFsdWUpXG4gICAgICAgIH1cblxuICAgICAgICBtYXAuY2xlYXIoKVxuICAgIH0pXG5cbiAgICByZXR1cm4gZnJhZ21lbnRcbn1cbiIsICJpbXBvcnQgeyBGcmFnbWVudCB9IGZyb20gXCIuL0ZyYWdtZW50LmpzXCJcbmltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcIi4vc3RhdGUuanNcIlxuaW1wb3J0IHsgZW52IH0gZnJvbSBcIi4vZW52LmpzXCJcbmltcG9ydCB7IGdldFNjb3BlLCBvbkNsZWFudXAsIFNjb3BlIH0gZnJvbSBcIi4vc2NvcGUuanNcIlxuXG5pbnRlcmZhY2UgV2l0aFByb3BzPFQsIEUgZXh0ZW5kcyBKU1guRWxlbWVudD4ge1xuICAgIHZhbHVlOiBBY2Nlc3NvcjxUPlxuICAgIGNoaWxkcmVuOiAodmFsdWU6IFQpID0+IEUgfCBcIlwiIHwgZmFsc2UgfCBudWxsIHwgdW5kZWZpbmVkXG5cbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0byBydW4gZm9yIGVhY2ggcmVtb3ZlZCBlbGVtZW50LlxuICAgICAqIFRoZSBkZWZhdWx0IHZhbHVlIGRlcGVuZHMgb24gdGhlIGVudmlyb25tZW50OlxuICAgICAqXG4gICAgICogLSAqKkd0azQqKjogbnVsbFxuICAgICAqIC0gKipHdGszKio6IEd0ay5XaWRnZXQucHJvdG90eXBlLmRlc3Ryb3lcbiAgICAgKiAtICoqR25vbWUqKjogQ2x1dHRlci5BY3Rvci5wcm90b3R5cGUuZGVzdHJveVxuICAgICAqL1xuICAgIGNsZWFudXA/OiBudWxsIHwgKChlbGVtZW50OiBFKSA9PiB2b2lkKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gV2l0aDxULCBFIGV4dGVuZHMgSlNYLkVsZW1lbnQ+KHtcbiAgICB2YWx1ZSxcbiAgICBjaGlsZHJlbjogbWtDaGlsZCxcbiAgICBjbGVhbnVwLFxufTogV2l0aFByb3BzPFQsIEU+KTogRnJhZ21lbnQ8RT4ge1xuICAgIGNvbnN0IGN1cnJlbnRTY29wZSA9IGdldFNjb3BlKClcbiAgICBjb25zdCBmcmFnbWVudCA9IG5ldyBGcmFnbWVudDxFPigpXG5cbiAgICBsZXQgc2NvcGU6IFNjb3BlXG5cbiAgICBmdW5jdGlvbiByZW1vdmUoY2hpbGQ6IEUpIHtcbiAgICAgICAgZnJhZ21lbnQucmVtb3ZlQ2hpbGQoY2hpbGQpXG4gICAgICAgIGlmIChzY29wZSkgc2NvcGUuZGlzcG9zZSgpXG5cbiAgICAgICAgaWYgKHR5cGVvZiBjbGVhbnVwID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIGNsZWFudXAoY2hpbGQpXG4gICAgICAgIH0gZWxzZSBpZiAoY2xlYW51cCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgZW52LmRlZmF1bHRDbGVhbnVwKGNoaWxkKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY2FsbGJhY2sodjogVCkge1xuICAgICAgICBmb3IgKGNvbnN0IGNoaWxkIG9mIGZyYWdtZW50LmNoaWxkcmVuKSB7XG4gICAgICAgICAgICByZW1vdmUoY2hpbGQpXG4gICAgICAgIH1cblxuICAgICAgICBzY29wZSA9IG5ldyBTY29wZShjdXJyZW50U2NvcGUpXG4gICAgICAgIGNvbnN0IGNoID0gc2NvcGUucnVuKCgpID0+IG1rQ2hpbGQodikpXG4gICAgICAgIGlmIChjaCAhPT0gXCJcIiAmJiBjaCAhPT0gZmFsc2UgJiYgY2ggIT09IG51bGwgJiYgY2ggIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgZnJhZ21lbnQuYWRkQ2hpbGQoY2gpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBkaXNwb3NlID0gdmFsdWUuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgY2FsbGJhY2sodmFsdWUuZ2V0KCkpXG4gICAgfSlcbiAgICBjYWxsYmFjayh2YWx1ZS5nZXQoKSlcblxuICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgIGRpc3Bvc2UoKVxuICAgICAgICBmb3IgKGNvbnN0IGNoaWxkIG9mIGZyYWdtZW50LmNoaWxkcmVuKSB7XG4gICAgICAgICAgICByZW1vdmUoY2hpbGQpXG4gICAgICAgIH1cbiAgICB9KVxuXG4gICAgcmV0dXJuIGZyYWdtZW50XG59XG4iLCAiaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgeyBlbnYgfSBmcm9tIFwiLi9lbnYuanNcIlxuaW1wb3J0IHsgQWNjZXNzb3IgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5pbXBvcnQgeyBrZWJhYmlmeSwgdHlwZSBQYXNjYWxpZnksIHNldCB9IGZyb20gXCIuLi91dGlsLmpzXCJcbmltcG9ydCB7IG9uQ2xlYW51cCB9IGZyb20gXCIuL3Njb3BlLmpzXCJcbmltcG9ydCB7IHNldFR5cGUgfSBmcm9tIFwiLi9qc3guanNcIlxuXG50eXBlIEVsZW1lbnQgPSBKU1guRWxlbWVudCB8IFwiXCIgfCBmYWxzZSB8IG51bGwgfCB1bmRlZmluZWRcblxudHlwZSBUaGlzUHJvcHM8U2VsZiBleHRlbmRzIEdPYmplY3QuT2JqZWN0PiA9IHtcbiAgICB0aGlzOiBTZWxmXG4gICAgLyoqXG4gICAgICogR3RrLkJ1aWxkZXIgdHlwZVxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICAkdHlwZT86IHN0cmluZ1xuXG4gICAgY2hpbGRyZW4/OiBFbGVtZW50IHwgQXJyYXk8RWxlbWVudD5cbiAgICAvKipcbiAgICAgKiBDU1MgY2xhc3MgbmFtZXNcbiAgICAgKi9cbiAgICBjbGFzcz86IHN0cmluZyB8IEFjY2Vzc29yPHN0cmluZz5cbiAgICAvKipcbiAgICAgKiBpbmxpbmUgQ1NTXG4gICAgICovXG4gICAgY3NzPzogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPlxufSAmIHtcbiAgICBbSyBpbiBrZXlvZiBTZWxmXT86IFNlbGZbS10gfCBBY2Nlc3NvcjxOb25OdWxsYWJsZTxTZWxmW0tdPj5cbn0gJiB7XG4gICAgW1MgaW4ga2V5b2YgU2VsZltcIiRzaWduYWxzXCJdIGFzIFMgZXh0ZW5kcyBgbm90aWZ5Ojoke2luZmVyIFB9YFxuICAgICAgICA/IGBvbk5vdGlmeSR7UGFzY2FsaWZ5PFA+fWBcbiAgICAgICAgOiBTIGV4dGVuZHMgc3RyaW5nXG4gICAgICAgICAgPyBgb24ke1Bhc2NhbGlmeTxTPn1gXG4gICAgICAgICAgOiBuZXZlcl0/OiBHT2JqZWN0LlNpZ25hbENhbGxiYWNrPFNlbGYsIFNlbGZbXCIkc2lnbmFsc1wiXVtTXT5cbn1cblxuLy8gVE9ETzpcbi8vIGNvbnNpZGVyIG1ha2luZyB0aGlzIGNvbXBvbmVudCBhIHBvdGVudGlhbCBzdWJzdGl0dXRlIGZvciBgY3JlYXRlUm9vdCgpYFxuLy8gZGlzcG9zaW5nIHRoZSBzY29wZSB1c2luZyBhIGRlc3Ryb3kgc2lnbmFsXG5cbi8qKiBAZXhwZXJpbWVudGFsICovXG5leHBvcnQgZnVuY3Rpb24gVGhpczxUIGV4dGVuZHMgR09iamVjdC5PYmplY3Q+KHtcbiAgICB0aGlzOiBzZWxmLFxuICAgIGNoaWxkcmVuLFxuICAgICR0eXBlLFxuICAgIC4uLnByb3BzXG59OiBUaGlzUHJvcHM8VD4pIHtcbiAgICBjb25zdCBjbGVhbnVwID0gbmV3IEFycmF5PCgpID0+IHZvaWQ+KClcblxuICAgIGlmICgkdHlwZSkgc2V0VHlwZShzZWxmLCAkdHlwZSlcblxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkge1xuICAgICAgICBpZiAoa2V5ID09PSBcImNzc1wiKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgICAgIGVudi5zZXRDc3Moc2VsZiwgdmFsdWUuZ2V0KCkpXG4gICAgICAgICAgICAgICAgY2xlYW51cC5wdXNoKHZhbHVlLnN1YnNjcmliZSgoKSA9PiBlbnYuc2V0Q3NzKHNlbGYsIHZhbHVlLmdldCgpKSkpXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIGVudi5zZXRDc3Moc2VsZiwgdmFsdWUpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSBcImNsYXNzXCIpIHtcbiAgICAgICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICAgICAgZW52LnNldENsYXNzKHNlbGYsIHZhbHVlLmdldCgpKVxuICAgICAgICAgICAgICAgIGNsZWFudXAucHVzaCh2YWx1ZS5zdWJzY3JpYmUoKCkgPT4gZW52LnNldENsYXNzKHNlbGYsIHZhbHVlLmdldCgpKSkpXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIGVudi5zZXRDbGFzcyhzZWxmLCB2YWx1ZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChrZXkuc3RhcnRzV2l0aChcIm9uXCIpKSB7XG4gICAgICAgICAgICBjb25zdCBpZCA9IGtleS5zdGFydHNXaXRoKFwib25Ob3RpZnlcIilcbiAgICAgICAgICAgICAgICA/IHNlbGYuY29ubmVjdChgbm90aWZ5Ojoke2tlYmFiaWZ5KGtleS5zbGljZSg4KSl9YCwgdmFsdWUpXG4gICAgICAgICAgICAgICAgOiBzZWxmLmNvbm5lY3Qoa2ViYWJpZnkoa2V5LnNsaWNlKDIpKSwgdmFsdWUpXG5cbiAgICAgICAgICAgIGNsZWFudXAucHVzaCgoKSA9PiBzZWxmLmRpc2Nvbm5lY3QoaWQpKVxuICAgICAgICB9IGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgIHNldChzZWxmLCBrZXksIHZhbHVlLmdldCgpKVxuICAgICAgICAgICAgY2xlYW51cC5wdXNoKHZhbHVlLnN1YnNjcmliZSgoKSA9PiBzZXQoc2VsZiwga2V5LCB2YWx1ZS5nZXQoKSkpKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2V0KHNlbGYsIGtleSwgdmFsdWUpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZHJlbikpIHtcbiAgICAgICAgZm9yIChjb25zdCBjaCBvZiBjaGlsZHJlbikge1xuICAgICAgICAgICAgaWYgKGNoICE9PSBcIlwiICYmIGNoICE9PSBmYWxzZSAmJiBjaCAhPT0gbnVsbCAmJiBjaCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgZW52LmFkZENoaWxkKHNlbGYsIGNoLCAtMSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IGNoID0gY2hpbGRyZW5cbiAgICAgICAgaWYgKGNoICE9PSBcIlwiICYmIGNoICE9PSBmYWxzZSAmJiBjaCAhPT0gbnVsbCAmJiBjaCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBlbnYuYWRkQ2hpbGQoc2VsZiwgY2gsIC0xKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGNsZWFudXAubGVuZ3RoID4gMCkge1xuICAgICAgICBvbkNsZWFudXAoKCkgPT4gY2xlYW51cC5mb3JFYWNoKChjYikgPT4gY2IoKSkpXG4gICAgfVxuXG4gICAgcmV0dXJuIHNlbGZcbn1cbiIsICJpbXBvcnQgQXN0YWwgZnJvbSBcImdpOi8vQXN0YWw/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEdkayBmcm9tIFwiZ2k6Ly9HZGs/dmVyc2lvbj00LjBcIlxuZXhwb3J0IHsgQXN0YWwsIEd0aywgR2RrIH1cbiIsICJpbXBvcnQgeyBHZGsgfSBmcm9tIFwiYWdzL2d0azRcIlxuXG5cbmNsYXNzIEN1cnNvciB7XG4gICAgcHVibGljIERFRkFVTFQgPSBHZGsuQ3Vyc29yLm5ld19mcm9tX25hbWUoXCJkZWZhdWx0XCIsIG51bGwpXG5cbiAgICBwdWJsaWMgUE9JTlRFUiA9IEdkay5DdXJzb3IubmV3X2Zyb21fbmFtZShcInBvaW50ZXJcIiwgbnVsbClcblxuICAgIHB1YmxpYyBOT1RfQUxMT1dFRCA9IEdkay5DdXJzb3IubmV3X2Zyb21fbmFtZShcIm5vdC1hbGxvd2VkXCIsIG51bGwpXG59XG5cbmV4cG9ydCBkZWZhdWx0IEN1cnNvclxuIiwgImltcG9ydCBHaW8gZnJvbSBcImdpOi8vR2lvP3ZlcnNpb249Mi4wXCJcbmltcG9ydCB7IFNlcnZpY2UgfSBmcm9tIFwiLi9Hb2hhblwiXG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliP3ZlcnNpb249Mi4wXCJcbmltcG9ydCB7IGV4ZWNBc3luYyB9IGZyb20gXCJhZ3MvcHJvY2Vzc1wiXG5pbXBvcnQgYXBwIGZyb20gXCJhZ3MvZ3RrNC9hcHBcIlxuaW1wb3J0IHsgbW9uaXRvckZpbGUgfSBmcm9tIFwiYWdzL2ZpbGVcIlxuXG5jbGFzcyBUaGVtZSBpbXBsZW1lbnRzIFNlcnZpY2Uge1xuICAgIHB1YmxpYyBkaXI6IHN0cmluZyA9IGAke0dMaWIuZ2V0X2hvbWVfZGlyKCl9Ly5sb2NhbC9zaGFyZS9iYW5nb2hhbi9zdHlsZXNgXG5cbiAgICBwdWJsaWMgY29sb3JzOiBzdHJpbmcgPSBgJHt0aGlzLmRpcn0vY29sb3JzLnNjc3NgXG5cbiAgICBwdWJsaWMgc2Nzczogc3RyaW5nID0gYCR7dGhpcy5kaXJ9L3N0eWxlcy5zY3NzYFxuXG4gICAgcHVibGljIGNzczogc3RyaW5nID0gYCR7dGhpcy5kaXJ9L3N0eWxlcy5jc3NgXG5cbiAgICBwcml2YXRlIGZpbGVNb25pdG9yPzogR2lvLkZpbGVNb25pdG9yXG5cbiAgICBwdWJsaWMgYXN5bmMgc3RhcnQoKSB7XG4gICAgICAgIGF3YWl0IHRoaXMuY29tcGlsZVNhc3MoKS5jYXRjaChjb25zb2xlLmVycm9yKVxuXG4gICAgICAgIHRoaXMuYXBwbHlUaGVtZSgpXG5cbiAgICAgICAgdGhpcy5tb25pdG9yQ29sb3JDaGFuZ2VzKClcbiAgICB9XG5cbiAgICBwdWJsaWMgYXN5bmMgc3RvcCgpIHtcbiAgICAgICAgaWYgKHRoaXMuZmlsZU1vbml0b3IpIHtcbiAgICAgICAgICAgIHRoaXMuZmlsZU1vbml0b3IuY2FuY2VsKClcbiAgICAgICAgICAgIHRoaXMuZmlsZU1vbml0b3IgPSB1bmRlZmluZWRcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgYXN5bmMgY29tcGlsZVNhc3MoKSB7XG4gICAgICAgIGNvbnN0IHNjc3MgPSBgJHtHTGliLmdldF9ob21lX2RpcigpfS8ubG9jYWwvc2hhcmUvYmFuZ29oYW4vc3R5bGVzL3N0eWxlcy5zY3NzYFxuICAgICAgICBjb25zdCBjc3MgPSBgJHtHTGliLmdldF9ob21lX2RpcigpfS8ubG9jYWwvc2hhcmUvYmFuZ29oYW4vc3R5bGVzL3N0eWxlcy5jc3NgXG5cbiAgICAgICAgYXdhaXQgZXhlY0FzeW5jKGBzYXNzICR7c2Nzc30gJHtjc3N9YCkuY2F0Y2goY29uc29sZS5lcnJvcilcbiAgICB9XG5cbiAgICBwcml2YXRlIGFwcGx5VGhlbWUoKSB7XG4gICAgICAgIGNvbnN0IGNzcyA9IGAke0dMaWIuZ2V0X2hvbWVfZGlyKCl9Ly5sb2NhbC9zaGFyZS9iYW5nb2hhbi9zdHlsZXMvc3R5bGVzLmNzc2BcblxuICAgICAgICBhcHAuYXBwbHlfY3NzKGNzcywgdHJ1ZSlcbiAgICB9XG5cbiAgICBwcml2YXRlIG1vbml0b3JDb2xvckNoYW5nZXMoKSB7XG4gICAgICAgIHRoaXMuZmlsZU1vbml0b3IgPSBtb25pdG9yRmlsZSh0aGlzLmNvbG9ycywgYXN5bmMgKGZpbGUsIGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBpZiAoZXZlbnQgPT0gR2lvLkZpbGVNb25pdG9yRXZlbnQuQ0hBTkdFRCkge1xuICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuY29tcGlsZVNhc3MoKS5jYXRjaChjb25zb2xlLmVycm9yKVxuXG4gICAgICAgICAgICAgICAgdGhpcy5hcHBseVRoZW1lKClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRoZW1lXG4iLCAiaW1wb3J0IEFzdGFsSU8gZnJvbSBcImdpOi8vQXN0YWxJT1wiXG5pbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCJnbmltXCJcblxudHlwZSBBcmdzID0ge1xuICAgIGNtZDogc3RyaW5nIHwgc3RyaW5nW11cbiAgICBvdXQ/OiAoc3Rkb3V0OiBzdHJpbmcpID0+IHZvaWRcbiAgICBlcnI/OiAoc3RkZXJyOiBzdHJpbmcpID0+IHZvaWRcbn1cblxuZXhwb3J0IHR5cGUgUHJvY2VzcyA9IEFzdGFsSU8uUHJvY2Vzc1xuZXhwb3J0IGNvbnN0IFByb2Nlc3MgPSBBc3RhbElPLlByb2Nlc3NcblxuZXhwb3J0IGZ1bmN0aW9uIHN1YnByb2Nlc3MoYXJnczogQXJncyk6IEFzdGFsSU8uUHJvY2Vzc1xuXG5leHBvcnQgZnVuY3Rpb24gc3VicHJvY2VzcyhcbiAgICBjbWQ6IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIG9uT3V0PzogKHN0ZG91dDogc3RyaW5nKSA9PiB2b2lkLFxuICAgIG9uRXJyPzogKHN0ZGVycjogc3RyaW5nKSA9PiB2b2lkLFxuKTogQXN0YWxJTy5Qcm9jZXNzXG5cbmV4cG9ydCBmdW5jdGlvbiBzdWJwcm9jZXNzKFxuICAgIGFyZ3NPckNtZDogQXJncyB8IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIG9uT3V0OiAoc3Rkb3V0OiBzdHJpbmcpID0+IHZvaWQgPSBwcmludCxcbiAgICBvbkVycjogKHN0ZGVycjogc3RyaW5nKSA9PiB2b2lkID0gcHJpbnRlcnIsXG4pIHtcbiAgICBjb25zdCBhcmdzID0gQXJyYXkuaXNBcnJheShhcmdzT3JDbWQpIHx8IHR5cGVvZiBhcmdzT3JDbWQgPT09IFwic3RyaW5nXCJcbiAgICBjb25zdCB7IGNtZCwgZXJyLCBvdXQgfSA9IHtcbiAgICAgICAgY21kOiBhcmdzID8gYXJnc09yQ21kIDogYXJnc09yQ21kLmNtZCxcbiAgICAgICAgZXJyOiBhcmdzID8gb25FcnIgOiBhcmdzT3JDbWQuZXJyIHx8IG9uRXJyLFxuICAgICAgICBvdXQ6IGFyZ3MgPyBvbk91dCA6IGFyZ3NPckNtZC5vdXQgfHwgb25PdXQsXG4gICAgfVxuXG4gICAgY29uc3QgcHJvYyA9IEFycmF5LmlzQXJyYXkoY21kKVxuICAgICAgICA/IEFzdGFsSU8uUHJvY2Vzcy5zdWJwcm9jZXNzdihjbWQpXG4gICAgICAgIDogQXN0YWxJTy5Qcm9jZXNzLnN1YnByb2Nlc3MoY21kKVxuXG4gICAgcHJvYy5jb25uZWN0KFwic3Rkb3V0XCIsIChfLCBzdGRvdXQ6IHN0cmluZykgPT4gb3V0KHN0ZG91dCkpXG4gICAgcHJvYy5jb25uZWN0KFwic3RkZXJyXCIsIChfLCBzdGRlcnI6IHN0cmluZykgPT4gZXJyKHN0ZGVycikpXG4gICAgcmV0dXJuIHByb2Ncbn1cblxuLyoqIEB0aHJvd3Mge0dMaWIuRXJyb3J9IFRocm93cyBzdGRlcnIgKi9cbmV4cG9ydCBmdW5jdGlvbiBleGVjKGNtZDogc3RyaW5nIHwgc3RyaW5nW10pIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShjbWQpID8gQXN0YWxJTy5Qcm9jZXNzLmV4ZWN2KGNtZCkgOiBBc3RhbElPLlByb2Nlc3MuZXhlYyhjbWQpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBleGVjQXN5bmMoY21kOiBzdHJpbmcgfCBzdHJpbmdbXSk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY21kKSkge1xuICAgICAgICAgICAgQXN0YWxJTy5Qcm9jZXNzLmV4ZWNfYXN5bmN2KGNtZCwgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoQXN0YWxJTy5Qcm9jZXNzLmV4ZWNfYXN5bmN2X2ZpbmlzaChyZXMpKVxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgQXN0YWxJTy5Qcm9jZXNzLmV4ZWNfYXN5bmMoY21kLCAoXywgcmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShBc3RhbElPLlByb2Nlc3MuZXhlY19maW5pc2gocmVzKSlcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdWJwcm9jZXNzKGluaXQ6IHN0cmluZywgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10pOiBBY2Nlc3NvcjxzdHJpbmc+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdWJwcm9jZXNzPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10sXG4gICAgdHJhbnNmb3JtOiAoc3Rkb3V0OiBzdHJpbmcsIHByZXY6IFQpID0+IFQsXG4pOiBBY2Nlc3NvcjxUPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3VicHJvY2VzczxUPihcbiAgICBpbml0OiBULFxuICAgIGV4ZWM6IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIHRyYW5zZm9ybT86IChzdGRvdXQ6IHN0cmluZywgcHJldjogVCkgPT4gVCxcbik6IEFjY2Vzc29yPFQ+IHtcbiAgICBsZXQgY3VycmVudFZhbHVlID0gaW5pdFxuICAgIGxldCBwcm9jOiBBc3RhbElPLlByb2Nlc3MgfCBudWxsID0gbnVsbFxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDwoKSA9PiB2b2lkPigpXG5cbiAgICBmdW5jdGlvbiBzdWJzY3JpYmUoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiAoKSA9PiB2b2lkIHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIHByb2MgPSBzdWJwcm9jZXNzKGV4ZWMsIChzdGRvdXQpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRyYW5zZm9ybSA/IHRyYW5zZm9ybShzdGRvdXQsIGN1cnJlbnRWYWx1ZSkgOiAoc3Rkb3V0IGFzIFQpXG4gICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRWYWx1ZSAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudFZhbHVlID0gdmFsdWVcbiAgICAgICAgICAgICAgICAgICAgc3Vic2NyaWJlcnMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICBwcm9jPy5raWxsKClcbiAgICAgICAgICAgICAgICBwcm9jID0gbnVsbFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiBjdXJyZW50VmFsdWUsIHN1YnNjcmliZSlcbn1cbiIsICJpbXBvcnQgQXN0YWwgZnJvbSBcImdpOi8vQXN0YWxJT1wiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpbz92ZXJzaW9uPTIuMFwiXG5cbmV4cG9ydCBmdW5jdGlvbiByZWFkRmlsZShwYXRoOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHJldHVybiBBc3RhbC5yZWFkX2ZpbGUocGF0aCkgfHwgXCJcIlxufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVhZEZpbGVBc3luYyhwYXRoOiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIEFzdGFsLnJlYWRfZmlsZV9hc3luYyhwYXRoLCAoXywgcmVzKSA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHJlc29sdmUoQXN0YWwucmVhZF9maWxlX2ZpbmlzaChyZXMpIHx8IFwiXCIpXG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gd3JpdGVGaWxlKHBhdGg6IHN0cmluZywgY29udGVudDogc3RyaW5nKTogdm9pZCB7XG4gICAgQXN0YWwud3JpdGVfZmlsZShwYXRoLCBjb250ZW50KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gd3JpdGVGaWxlQXN5bmMocGF0aDogc3RyaW5nLCBjb250ZW50OiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBBc3RhbC53cml0ZV9maWxlX2FzeW5jKHBhdGgsIGNvbnRlbnQsIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZShBc3RhbC53cml0ZV9maWxlX2ZpbmlzaChyZXMpKVxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1vbml0b3JGaWxlKFxuICAgIHBhdGg6IHN0cmluZyxcbiAgICBjYWxsYmFjazogKGZpbGU6IHN0cmluZywgZXZlbnQ6IEdpby5GaWxlTW9uaXRvckV2ZW50KSA9PiB2b2lkLFxuKTogR2lvLkZpbGVNb25pdG9yIHtcbiAgICByZXR1cm4gQXN0YWwubW9uaXRvcl9maWxlKHBhdGgsIChmaWxlOiBzdHJpbmcsIGV2ZW50OiBHaW8uRmlsZU1vbml0b3JFdmVudCkgPT4ge1xuICAgICAgICBjYWxsYmFjayhmaWxlLCBldmVudClcbiAgICB9KSFcbn1cbiIsICJpbXBvcnQgQ3Vyc29yIGZyb20gXCIuL0N1cnNvclwiXG5pbXBvcnQgVGhlbWUgZnJvbSBcIi4vVGhlbWVcIlxuXG5leHBvcnQgY2xhc3MgR29oYW4ge1xuICAgIHB1YmxpYyBUaGVtZTogVGhlbWVcblxuICAgIHB1YmxpYyBDdXJzb3I6IEN1cnNvclxuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuQ3Vyc29yID0gbmV3IEN1cnNvcigpXG5cbiAgICAgICAgdGhpcy5UaGVtZSA9IG5ldyBUaGVtZSgpXG4gICAgfVxuXG4gICAgYXN5bmMgc3RhcnQoKSB7XG5cbiAgICAgICAgLy8gVGhlbWVcbiAgICAgICAgYXdhaXQgdGhpcy5UaGVtZS5zdGFydCgpXG4gICAgfVxuXG4gICAgYXN5bmMgc3RvcCgpIHtcblxuICAgICAgICAvLyBUaGVtZVxuICAgICAgICBhd2FpdCB0aGlzLlRoZW1lLnN0b3AoKVxuICAgIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBTZXJ2aWNlIHtcbiAgICBzdGFydCgpOiBQcm9taXNlPHZvaWQ+XG4gICAgc3RvcCgpOiBQcm9taXNlPHZvaWQ+XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3Vic2NyaWJhYmxlU2VydmljZSBleHRlbmRzIFNlcnZpY2Uge1xuICAgIHN1YnNjcmliZShjYWxsYmFjazogKCkgPT4gdm9pZCk6IHZvaWRcbn1cblxuZXhwb3J0IGRlZmF1bHQgbmV3IEdvaGFuKClcbiIsICIvKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbmFtZXNwYWNlICovXG5pbXBvcnQgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgQXN0YWwgZnJvbSBcImdpOi8vQXN0YWw/dmVyc2lvbj00LjBcIlxuaW1wb3J0IHsgQ0NQcm9wcyB9IGZyb20gXCJnbmltXCJcbmltcG9ydCB7IGludHJpbnNpY0VsZW1lbnRzIH0gZnJvbSBcImduaW0vZ3RrNC9qc3gtcnVudGltZVwiXG5cbnR5cGUgUHJvcHM8VCBleHRlbmRzIEd0ay5XaWRnZXQsIFByb3BzPiA9IENDUHJvcHM8VCwgUGFydGlhbDxQcm9wcz4+XG5cbk9iamVjdC5hc3NpZ24oaW50cmluc2ljRWxlbWVudHMsIHtcbiAgICBib3g6IEd0ay5Cb3gsXG4gICAgYnV0dG9uOiBHdGsuQnV0dG9uLFxuICAgIGNlbnRlcmJveDogR3RrLkNlbnRlckJveCxcbiAgICAvLyBjaXJjdWxhcnByb2dyZXNzOiBBc3RhbC5DaXJjdWxhclByb2dyZXNzLFxuICAgIGRyYXdpbmdhcmVhOiBHdGsuRHJhd2luZ0FyZWEsXG4gICAgZW50cnk6IEd0ay5FbnRyeSxcbiAgICBpbWFnZTogR3RrLkltYWdlLFxuICAgIGxhYmVsOiBHdGsuTGFiZWwsXG4gICAgbGV2ZWxiYXI6IEd0ay5MZXZlbEJhcixcbiAgICBtZW51YnV0dG9uOiBHdGsuTWVudUJ1dHRvbixcbiAgICBvdmVybGF5OiBHdGsuT3ZlcmxheSxcbiAgICBwb3BvdmVyOiBHdGsuUG9wb3ZlcixcbiAgICByZXZlYWxlcjogR3RrLlJldmVhbGVyLFxuICAgIHNjcm9sbGVkd2luZG93OiBHdGsuU2Nyb2xsZWRXaW5kb3csXG4gICAgc2xpZGVyOiBBc3RhbC5TbGlkZXIsXG4gICAgc3RhY2s6IEd0ay5TdGFjayxcbiAgICBzd2l0Y2g6IEd0ay5Td2l0Y2gsXG4gICAgdG9nZ2xlYnV0dG9uOiBHdGsuVG9nZ2xlQnV0dG9uLFxuICAgIHdpbmRvdzogQXN0YWwuV2luZG93LFxufSlcblxuZGVjbGFyZSBnbG9iYWwge1xuICAgIG5hbWVzcGFjZSBKU1gge1xuICAgICAgICBpbnRlcmZhY2UgSW50cmluc2ljRWxlbWVudHMge1xuICAgICAgICAgICAgYm94OiBQcm9wczxHdGsuQm94LCBHdGsuQm94LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBidXR0b246IFByb3BzPEd0ay5CdXR0b24sIEd0ay5CdXR0b24uQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGNlbnRlcmJveDogUHJvcHM8R3RrLkNlbnRlckJveCwgR3RrLkNlbnRlckJveC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgLy8gY2lyY3VsYXJwcm9ncmVzczogUHJvcHM8QXN0YWwuQ2lyY3VsYXJQcm9ncmVzcywgQXN0YWwuQ2lyY3VsYXJQcm9ncmVzcy5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgZHJhd2luZ2FyZWE6IFByb3BzPEd0ay5EcmF3aW5nQXJlYSwgR3RrLkRyYXdpbmdBcmVhLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBlbnRyeTogUHJvcHM8R3RrLkVudHJ5LCBHdGsuRW50cnkuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGltYWdlOiBQcm9wczxHdGsuSW1hZ2UsIEd0ay5JbWFnZS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgbGFiZWw6IFByb3BzPEd0ay5MYWJlbCwgR3RrLkxhYmVsLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBsZXZlbGJhcjogUHJvcHM8R3RrLkxldmVsQmFyLCBHdGsuTGV2ZWxCYXIuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIG1lbnVidXR0b246IFByb3BzPEd0ay5NZW51QnV0dG9uLCBHdGsuTWVudUJ1dHRvbi5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgb3ZlcmxheTogUHJvcHM8R3RrLk92ZXJsYXksIEd0ay5PdmVybGF5LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBwb3BvdmVyOiBQcm9wczxHdGsuUG9wb3ZlciwgR3RrLlBvcG92ZXIuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHJldmVhbGVyOiBQcm9wczxHdGsuUmV2ZWFsZXIsIEd0ay5SZXZlYWxlci5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc2Nyb2xsZWR3aW5kb3c6IFByb3BzPEd0ay5TY3JvbGxlZFdpbmRvdywgR3RrLlNjcm9sbGVkV2luZG93LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBzbGlkZXI6IFByb3BzPEFzdGFsLlNsaWRlciwgQXN0YWwuU2xpZGVyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBzdGFjazogUHJvcHM8R3RrLlN0YWNrLCBHdGsuU3RhY2suQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHN3aXRjaDogUHJvcHM8R3RrLlN3aXRjaCwgR3RrLlN3aXRjaC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgdG9nZ2xlYnV0dG9uOiBQcm9wczxHdGsuVG9nZ2xlQnV0dG9uLCBHdGsuVG9nZ2xlQnV0dG9uLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICB3aW5kb3c6IFByb3BzPEFzdGFsLldpbmRvdywgQXN0YWwuV2luZG93LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCAqIGZyb20gXCJnbmltL2d0azQvanN4LXJ1bnRpbWVcIlxuIiwgImltcG9ydCBHdGsgZnJvbSBcImdpOi8vR3RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHaW8gZnJvbSBcImdpOi8vR2lvP3ZlcnNpb249Mi4wXCJcbmltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IHsgY29uZmlndWUgfSBmcm9tIFwiLi4vanN4L2Vudi5qc1wiXG5pbXBvcnQge1xuICAgIGdldFR5cGUsXG4gICAgb25DbGVhbnVwLFxuICAgIGFkZENoaWxkIGFzIF9hZGQsXG4gICAgcmVtb3ZlQ2hpbGQgYXMgX3JlbW92ZSxcbiAgICBBY2Nlc3NvcixcbiAgICBGcmFnbWVudCxcbn0gZnJvbSBcIi4uL2luZGV4LmpzXCJcblxuY29uc3QgZHVtbXlCdWlsZGVyID0gbmV3IEd0ay5CdWlsZGVyKClcblxuZnVuY3Rpb24gYWRkKHBhcmVudDogR3RrLkJ1aWxkYWJsZSwgY2hpbGQ6IEdPYmplY3QuT2JqZWN0LCBfOiBudW1iZXIpIHtcbiAgICBpZiAoIXNwZWNpYWxBZGQocGFyZW50LCBjaGlsZCwgXykpIHtcbiAgICAgICAgcGFyZW50LnZmdW5jX2FkZF9jaGlsZChkdW1teUJ1aWxkZXIsIGNoaWxkLCBnZXRUeXBlKGNoaWxkKSlcbiAgICB9XG59XG5cbmZ1bmN0aW9uIHNwZWNpYWxBZGQocGFyZW50OiBHT2JqZWN0Lk9iamVjdCwgY2hpbGQ6IEdPYmplY3QuT2JqZWN0LCBpbmRleDogbnVtYmVyKSB7XG4gICAgaWYgKF9hZGQgaW4gcGFyZW50ICYmIHR5cGVvZiBwYXJlbnRbX2FkZF0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICBwYXJlbnRbX2FkZF0oY2hpbGQsIGdldFR5cGUoY2hpbGQpLCBpbmRleClcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICBpZiAoXG4gICAgICAgIGNoaWxkIGluc3RhbmNlb2YgR3RrLkFkanVzdG1lbnQgJiZcbiAgICAgICAgXCJzZXRfYWRqdXN0bWVudFwiIGluIHBhcmVudCAmJlxuICAgICAgICB0eXBlb2YgcGFyZW50LnNldF9hZGp1c3RtZW50ID09PSBcImZ1bmN0aW9uXCJcbiAgICApIHtcbiAgICAgICAgcGFyZW50LnNldF9hZGp1c3RtZW50KGNoaWxkKVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIGlmIChcbiAgICAgICAgY2hpbGQgaW5zdGFuY2VvZiBHdGsuV2lkZ2V0ICYmXG4gICAgICAgIHBhcmVudCBpbnN0YW5jZW9mIEd0ay5TdGFjayAmJlxuICAgICAgICBjaGlsZC5uYW1lICE9PSBcIlwiICYmXG4gICAgICAgIGNoaWxkLm5hbWUgIT09IG51bGwgJiZcbiAgICAgICAgZ2V0VHlwZShjaGlsZCkgPT09IFwibmFtZWRcIlxuICAgICkge1xuICAgICAgICBwYXJlbnQuYWRkX25hbWVkKGNoaWxkLCBjaGlsZC5uYW1lKVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEd0ay5Qb3BvdmVyICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0ay5NZW51QnV0dG9uKSB7XG4gICAgICAgIHBhcmVudC5zZXRfcG9wb3ZlcihjaGlsZClcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICBpZiAoXG4gICAgICAgIGNoaWxkIGluc3RhbmNlb2YgR2lvLk1lbnVNb2RlbCAmJlxuICAgICAgICAocGFyZW50IGluc3RhbmNlb2YgR3RrLk1lbnVCdXR0b24gfHwgcGFyZW50IGluc3RhbmNlb2YgR3RrLlBvcG92ZXJNZW51KVxuICAgICkge1xuICAgICAgICBwYXJlbnQuc2V0X21lbnVfbW9kZWwoY2hpbGQpXG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuXG4gICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR2lvLk1lbnVJdGVtICYmIHBhcmVudCBpbnN0YW5jZW9mIEdpby5NZW51KSB7XG4gICAgICAgIC8vIFRPRE86XG4gICAgfVxuXG4gICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrLldpbmRvdyAmJiBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuQXBwbGljYXRpb24pIHtcbiAgICAgICAgcGFyZW50LmFkZF93aW5kb3coY2hpbGQpXG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuXG4gICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrLlRleHRCdWZmZXIgJiYgcGFyZW50IGluc3RhbmNlb2YgR3RrLlRleHRWaWV3KSB7XG4gICAgICAgIHBhcmVudC5zZXRfYnVmZmVyKGNoaWxkKVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIHJldHVybiBmYWxzZVxufVxuXG4vLyBgc2V0X2NoaWxkYCBhbmQgZXNwZWNpYWxseSBgcmVtb3ZlYCBtaWdodCBiZSB3YXkgdG9vIGdlbmVyaWMgYW5kIHRoZXJlIG1pZ2h0XG4vLyBiZSBjYXNlcyB3aGVyZSBpdCBkb2VzIG5vdCBhY3R1YWxseSBkbyB3aGF0IHdlIHdhbnQgaXQgdG8gZG9cbi8vXG4vLyBpZiB0aGVyZSBpcyBhIHVzZWNhc2UgZm9yIGVpdGhlciBvZiB0aGVzZSB0d28gdGhhdCBkb2VzIHNvbWV0aGluZyBlbHNlIHRoYW5cbi8vIHdlIGV4cGVjdCBpdCB0byBkbyBoZXJlIGluIGEgSlNYIGNvbnRleHQgd2UgaGF2ZSB0byBjaGVjayBmb3Iga25vd24gaW5zdGFuY2VzXG5mdW5jdGlvbiByZW1vdmUocGFyZW50OiBHT2JqZWN0Lk9iamVjdCwgY2hpbGQ6IEdPYmplY3QuT2JqZWN0KSB7XG4gICAgaWYgKF9yZW1vdmUgaW4gcGFyZW50ICYmIHR5cGVvZiBwYXJlbnRbX3JlbW92ZV0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICBwYXJlbnRbX3JlbW92ZV0oY2hpbGQpXG4gICAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGlmIChwYXJlbnQgaW5zdGFuY2VvZiBHdGsuV2lkZ2V0ICYmIGNoaWxkIGluc3RhbmNlb2YgR3RrLkV2ZW50Q29udHJvbGxlcikge1xuICAgICAgICByZXR1cm4gcGFyZW50LnJlbW92ZV9jb250cm9sbGVyKGNoaWxkKVxuICAgIH1cblxuICAgIGlmIChcInNldF9jaGlsZFwiIGluIHBhcmVudCAmJiB0eXBlb2YgcGFyZW50LnNldF9jaGlsZCA9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuIHBhcmVudC5zZXRfY2hpbGQobnVsbClcbiAgICB9XG5cbiAgICBpZiAoXCJyZW1vdmVcIiBpbiBwYXJlbnQgJiYgdHlwZW9mIHBhcmVudC5yZW1vdmUgPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBwYXJlbnQucmVtb3ZlKGNoaWxkKVxuICAgIH1cblxuICAgIHRocm93IEVycm9yKGBjYW5ub3QgcmVtb3ZlICR7Y2hpbGR9IGZyb20gJHtwYXJlbnR9YClcbn1cblxuY29uc3QgeyBhZGRDaGlsZCwgaW50cmluc2ljRWxlbWVudHMgfSA9IGNvbmZpZ3VlKHtcbiAgICBzZXRDc3Mob2JqZWN0LCBjc3MpIHtcbiAgICAgICAgaWYgKCEob2JqZWN0IGluc3RhbmNlb2YgR3RrLldpZGdldCkpIHtcbiAgICAgICAgICAgIHJldHVybiBjb25zb2xlLndhcm4oRXJyb3IoYGNhbm5vdCBzZXQgY3NzIG9uICR7b2JqZWN0fWApKVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgY3R4ID0gb2JqZWN0LmdldF9zdHlsZV9jb250ZXh0KClcbiAgICAgICAgbGV0IHByb3ZpZGVyOiBHdGsuQ3NzUHJvdmlkZXJcblxuICAgICAgICBjb25zdCBzZXR0ZXIgPSAoY3NzOiBzdHJpbmcpID0+IHtcbiAgICAgICAgICAgIGlmICghY3NzLmluY2x1ZGVzKFwie1wiKSB8fCAhY3NzLmluY2x1ZGVzKFwifVwiKSkge1xuICAgICAgICAgICAgICAgIGNzcyA9IGAqIHsgJHtjc3N9IH1gXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChwcm92aWRlcikgY3R4LnJlbW92ZV9wcm92aWRlcihwcm92aWRlcilcblxuICAgICAgICAgICAgcHJvdmlkZXIgPSBuZXcgR3RrLkNzc1Byb3ZpZGVyKClcbiAgICAgICAgICAgIHByb3ZpZGVyLmxvYWRfZnJvbV9zdHJpbmcoY3NzKVxuICAgICAgICAgICAgY3R4LmFkZF9wcm92aWRlcihwcm92aWRlciwgR3RrLlNUWUxFX1BST1ZJREVSX1BSSU9SSVRZX1VTRVIpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY3NzIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgIHNldHRlcihjc3MuZ2V0KCkpXG4gICAgICAgICAgICBjb25zdCBkaXNwb3NlID0gY3NzLnN1YnNjcmliZSgoKSA9PiBzZXR0ZXIoY3NzLmdldCgpKSlcbiAgICAgICAgICAgIG9uQ2xlYW51cChkaXNwb3NlKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2V0dGVyKGNzcylcbiAgICAgICAgfVxuICAgIH0sXG4gICAgc2V0Q2xhc3Mob2JqZWN0LCBjbGFzc05hbWUpIHtcbiAgICAgICAgaWYgKCEob2JqZWN0IGluc3RhbmNlb2YgR3RrLldpZGdldCkpIHtcbiAgICAgICAgICAgIHJldHVybiBjb25zb2xlLndhcm4oRXJyb3IoYGNhbm5vdCBzZXQgY2xhc3NOYW1lIG9uICR7b2JqZWN0fWApKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNsYXNzTmFtZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICBvYmplY3QuY3NzQ2xhc3NlcyA9IGNsYXNzTmFtZS5nZXQoKS5zcGxpdCgvXFxzKy8pXG4gICAgICAgICAgICBjb25zdCBkaXNwb3NlID0gY2xhc3NOYW1lLnN1YnNjcmliZShcbiAgICAgICAgICAgICAgICAoKSA9PiAob2JqZWN0LmNzc0NsYXNzZXMgPSBjbGFzc05hbWUuZ2V0KCkuc3BsaXQoL1xccysvKSksXG4gICAgICAgICAgICApXG4gICAgICAgICAgICBvbkNsZWFudXAoZGlzcG9zZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG9iamVjdC5zZXRfY3NzX2NsYXNzZXMoY2xhc3NOYW1lLnNwbGl0KC9cXHMrLykpXG4gICAgICAgIH1cbiAgICB9LFxuICAgIGFkZENoaWxkKHBhcmVudCwgY2hpbGQsIGluZGV4ID0gLTEpIHtcbiAgICAgICAgaWYgKCEoY2hpbGQgaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdCkpIHtcbiAgICAgICAgICAgIGNoaWxkID0gR3RrLkxhYmVsLm5ldyhTdHJpbmcoY2hpbGQpKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHNwZWNpYWxBZGQocGFyZW50LCBjaGlsZCwgaW5kZXgpKSByZXR1cm5cblxuICAgICAgICBpZiAocGFyZW50IGluc3RhbmNlb2YgRnJhZ21lbnQpIHtcbiAgICAgICAgICAgIHBhcmVudC5hZGRDaGlsZChjaGlsZClcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIEd0ay5CdWlsZGFibGUpIHtcbiAgICAgICAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEZyYWdtZW50KSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBjaCBvZiBjaGlsZC5jaGlsZHJlbikge1xuICAgICAgICAgICAgICAgICAgICBhZGQocGFyZW50LCBjaCwgaW5kZXgpXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY2hpbGQuY29ubmVjdChcImNoaWxkLWFkZGVkXCIsIChfLCBjaDogdW5rbm93biwgaW5kZXg6IG51bWJlcikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIShjaCBpbnN0YW5jZW9mIEdPYmplY3QuT2JqZWN0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihUeXBlRXJyb3IoYGNhbm5vdCBhZGQgJHtjaH0gdG8gJHtwYXJlbnR9YCkpXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBhZGRDaGlsZChwYXJlbnQsIGNoLCBpbmRleClcbiAgICAgICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICAgICAgY2hpbGQuY29ubmVjdChcImNoaWxkLXJlbW92ZWRcIiwgKF8sIGNoOiB1bmtub3duKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghKGNoIGluc3RhbmNlb2YgR09iamVjdC5PYmplY3QpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFR5cGVFcnJvcihgY2Fubm90IHJlbW92ZSAke2NofSBmcm9tICR7cGFyZW50fWApKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmVtb3ZlKHBhcmVudCwgY2gpXG4gICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgIG9uQ2xlYW51cCgoKSA9PiBjaGlsZC5kZXN0cm95KCkpXG4gICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGFkZChwYXJlbnQsIGNoaWxkLCBpbmRleClcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG5cbiAgICAgICAgdGhyb3cgRXJyb3IoYGNhbm5vdCBhZGQgJHtjaGlsZH0gdG8gJHtwYXJlbnR9YClcbiAgICB9LFxufSlcblxuZXhwb3J0IHsgRnJhZ21lbnQsIGludHJpbnNpY0VsZW1lbnRzIH1cbmV4cG9ydCB7IGpzeCwganN4cyB9IGZyb20gXCIuLi9qc3gvanN4LmpzXCJcbiIsICJpbXBvcnQgeyBleGVjQXN5bmMgfSBmcm9tIFwiYWdzL3Byb2Nlc3NcIlxuaW1wb3J0IEdvaGFuIGZyb20gXCIuLi8uLi8uLi9zZXJ2aWNlcy9Hb2hhblwiXG5cbmNvbnN0IExhdW5jaGVyID0gKCkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiTGF1bmNoZXJcIl19PlxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgIG9uQ2xpY2tlZD17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBleGVjQXN5bmMoXG4gICAgICAgICAgICAgICAgICAgICAgICBgcm9maSAtc2hvdyBkcnVuIC1ydW4tY29tbWFuZCBcInV3c20gYXBwIC0tIHtjbWR9XCJgXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgIHRvb2x0aXBUZXh0PXtcIkxhdW5jaGVyXCJ9XG4gICAgICAgICAgICAgICAgY3Vyc29yPXtHb2hhbi5DdXJzb3IuUE9JTlRFUn1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiaWNvblwiXX1cbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9e1wiXHVEQjgyXHVEQ0M3XCJ9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8L2JveD5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IExhdW5jaGVyXG4iLCAiaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFncy9ndGs0XCJcblxuaW50ZXJmYWNlIFNlcGFyYXRvclByb3BzIGV4dGVuZHMgUGFydGlhbDxHdGsuU2VwYXJhdG9yLkNvbnN0cnVjdG9yUHJvcHM+IHtcbiAgICBvcmllbnRhdGlvbj86IEd0ay5PcmllbnRhdGlvblxufVxuXG5jb25zdCBTZXBhcmF0b3IgPSAocHJvcHM6IFNlcGFyYXRvclByb3BzKSA9PiB7XG4gICAgY29uc3QgY2xhc3Nlc3MgPSBwcm9wcy5jc3NDbGFzc2VzIHx8IFtdXG4gICAgY29uc3Qgb3JpZW50YXRpb24gPSBwcm9wcy5vcmllbnRhdGlvbiA9PT0gdW5kZWZpbmVkID8gR3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMIDogcHJvcHMub3JpZW50YXRpb25cblxuICAgIGlmIChvcmllbnRhdGlvbiA9PT0gR3RrLk9yaWVudGF0aW9uLkhPUklaT05UQUwpIHtcbiAgICAgICAgY2xhc3Nlc3MucHVzaChcIkhvcml6b250YWxcIilcbiAgICB9IGVsc2Uge1xuICAgICAgICBjbGFzc2Vzcy5wdXNoKFwiVmVydGljYWxcIilcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8R3RrLlNlcGFyYXRvclxuICAgICAgICAgICAgey4uLnByb3BzfVxuICAgICAgICAgICAgY3NzQ2xhc3Nlcz17Y2xhc3Nlc3N9XG4gICAgICAgICAgICBvcmllbnRhdGlvbj17b3JpZW50YXRpb259XG4gICAgICAgICAgICB2aXNpYmxlPXtwcm9wcy52aXNpYmxlIHx8IHRydWV9XG4gICAgICAgIC8+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBTZXBhcmF0b3JcbiIsICJpbXBvcnQgeyBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIlxuaW1wb3J0IHsgQWNjZXNzb3IsIGNyZWF0ZUJpbmRpbmcsIGNyZWF0ZUNvbXB1dGVkLCBGb3IgfSBmcm9tIFwiYWdzXCJcbmltcG9ydCBBc3RhbEh5cHJsYW5kIGZyb20gXCJnaTovL0FzdGFsSHlwcmxhbmQ/dmVyc2lvbj0wLjFcIlxuaW1wb3J0IEdvaGFuIGZyb20gXCIuLi8uLi8uLi9zZXJ2aWNlcy9Hb2hhblwiXG5cbmludGVyZmFjZSBHb2hhbldvcmtzcGFjZSB7XG4gICAgcmVhbDogQXN0YWxIeXBybGFuZC5Xb3Jrc3BhY2VcbiAgICBmb2N1c2VkOiBib29sZWFuXG4gICAgb2NjdXBpZWQ6IGJvb2xlYW5cbn1cblxuY29uc3QgbWF4V29ya3NwYWNlcyA9IDVcbmNvbnN0IHdvcmtzcGFjZXNOdW0gPSBBcnJheS5mcm9tKHsgbGVuZ3RoOiBtYXhXb3Jrc3BhY2VzIC0gMSB9LCAoXywgaSkgPT4gaSlcbmNvbnN0IGh5cHJsYW5kID0gQXN0YWxIeXBybGFuZC5nZXRfZGVmYXVsdCgpXG5cbmZ1bmN0aW9uIGNyZWF0ZVdvcmtzcGFjZXMoZm9jdXNlZElkOiBudW1iZXIpOiBHb2hhbldvcmtzcGFjZVtdIHtcbiAgICByZXR1cm4gd29ya3NwYWNlc051bS5tYXAoKGkpID0+IHtcbiAgICAgICAgbGV0IHdvcmtzcGFjZSA9IGh5cHJsYW5kLmdldF93b3Jrc3BhY2UoaSArIDEpXG5cbiAgICAgICAgaWYgKCF3b3Jrc3BhY2UpIHtcbiAgICAgICAgICAgIHdvcmtzcGFjZSA9IEFzdGFsSHlwcmxhbmQuV29ya3NwYWNlLmR1bW15KGkgKyAxLCBudWxsKVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHJlYWw6IHdvcmtzcGFjZSxcbiAgICAgICAgICAgIGZvY3VzZWQ6IHdvcmtzcGFjZS5pZCA9PT0gZm9jdXNlZElkLFxuICAgICAgICAgICAgb2NjdXBpZWQ6IHdvcmtzcGFjZS5nZXRfY2xpZW50cygpLmxlbmd0aCA+IDAsXG4gICAgICAgIH0gYXMgR29oYW5Xb3Jrc3BhY2VcbiAgICB9KVxufVxuXG5jb25zdCBXb3Jrc3BhY2VzID0gKCkgPT4ge1xuICAgIGNvbnN0IGZvY3VzZWQgPSBjcmVhdGVCaW5kaW5nKGh5cHJsYW5kLCBcImZvY3VzZWRfd29ya3NwYWNlXCIpXG5cbiAgICBjb25zdCBnb2hhbldvcmtzcGFjZXMgPSBjcmVhdGVDb21wdXRlZChbZm9jdXNlZF0sIChmb2N1c2VkKSA9PiB7XG4gICAgICAgIGNvbnN0IGdvaGFuV3MgPSBjcmVhdGVXb3Jrc3BhY2VzKGZvY3VzZWQ/LmlkKVxuICAgICAgICBjb25zdCBpbmRleCA9IGdvaGFuV3MuZmluZEluZGV4KCh3cykgPT4gd3MucmVhbC5pZCA9PT0gZm9jdXNlZC5pZClcblxuICAgICAgICAvLyBpZiB0aGUgZm9jdXNlZCB3b3Jrc3BhY2UgaXMgbm90IGluIHRoZSBsaXN0LCB3ZSBuZWVkIHRvIGFkZCBpdFxuICAgICAgICBpZiAoaW5kZXggPT09IC0xKSB7XG4gICAgICAgICAgICAvLyByZW1vdmUgdGhlIGxhdGVzdCB3b3Jrc3BhY2UgaWYgd2UgZXhjZWVkIHRoZSBsaW1pdFxuICAgICAgICAgICAgaWYgKGdvaGFuV3MubGVuZ3RoID49IG1heFdvcmtzcGFjZXMpIHtcbiAgICAgICAgICAgICAgICBnb2hhbldzLnBvcCgpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGFkZCB0aGUgZm9jdXNlZCB3b3Jrc3BhY2VcbiAgICAgICAgICAgIGdvaGFuV3MucHVzaCh7XG4gICAgICAgICAgICAgICAgcmVhbDogZm9jdXNlZCxcbiAgICAgICAgICAgICAgICBmb2N1c2VkOiB0cnVlLFxuICAgICAgICAgICAgICAgIG9jY3VwaWVkOiBmb2N1c2VkLmdldF9jbGllbnRzKCkubGVuZ3RoID4gMCxcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgICAgLy8gaWYgdGhlIGZvY3VzZWQgd29ya3NwYWNlIGlzIGFscmVhZHkgaW4gdGhlIGxpc3QsIHdlIGp1c3QgdXBkYXRlIHRoZSBsYXN0IG9uZVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGxldCBsYXN0V29ya3NwYWNlID0gaHlwcmxhbmQuZ2V0X3dvcmtzcGFjZShtYXhXb3Jrc3BhY2VzKVxuXG4gICAgICAgICAgICBpZiAoIWxhc3RXb3Jrc3BhY2UpIHtcbiAgICAgICAgICAgICAgICBsYXN0V29ya3NwYWNlID0gQXN0YWxIeXBybGFuZC5Xb3Jrc3BhY2UuZHVtbXkoXG4gICAgICAgICAgICAgICAgICAgIG1heFdvcmtzcGFjZXMsXG4gICAgICAgICAgICAgICAgICAgIG51bGxcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGdvaGFuV3MucHVzaCh7XG4gICAgICAgICAgICAgICAgcmVhbDogbGFzdFdvcmtzcGFjZSxcbiAgICAgICAgICAgICAgICBmb2N1c2VkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBvY2N1cGllZDogbGFzdFdvcmtzcGFjZS5nZXRfY2xpZW50cygpLmxlbmd0aCA+IDAsXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGdvaGFuV3NcbiAgICB9KVxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPGJveFxuICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiV29ya3NwYWNlc1wiXX1cbiAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgIHZhbGlnbj17R3RrLkFsaWduLkJBU0VMSU5FfVxuICAgICAgICAgICAgc3BhY2luZz17MX1cbiAgICAgICAgPlxuICAgICAgICAgICAgPEZvciBlYWNoPXtnb2hhbldvcmtzcGFjZXN9PlxuICAgICAgICAgICAgICAgIHsod29ya3NwYWNlKSA9PiA8V29ya3NwYWNlQnV0dG9uIHdvcmtzcGFjZT17d29ya3NwYWNlfSAvPn1cbiAgICAgICAgICAgIDwvRm9yPlxuICAgICAgICA8L2JveD5cbiAgICApXG59XG5cbmludGVyZmFjZSBXb3Jrc3BhY2VCdXR0b25Qcm9wcyB7XG4gICAgd29ya3NwYWNlOiBHb2hhbldvcmtzcGFjZVxufVxuXG5jb25zdCBXb3Jrc3BhY2VCdXR0b24gPSAoeyB3b3Jrc3BhY2UgfTogV29ya3NwYWNlQnV0dG9uUHJvcHMpID0+IHtcbiAgICBjb25zdCBjbGFzc2VzID0gW1xuICAgICAgICBcIldvcmtzcGFjZUJ1dHRvblwiLFxuICAgICAgICB3b3Jrc3BhY2UuZm9jdXNlZCA/IFwiRm9jdXNlZFwiIDogXCJcIixcbiAgICAgICAgd29ya3NwYWNlLm9jY3VwaWVkID8gXCJPY2N1cGllZFwiIDogXCJcIixcbiAgICBdXG5cbiAgICBjb25zdCB3b3Jrc3BhY2VOYW1lID1cbiAgICAgICAgd29ya3NwYWNlLnJlYWwubmFtZSA9PT0gXCIxMFwiID8gXCIwXCIgOiB3b3Jrc3BhY2UucmVhbC5uYW1lXG4gICAgY29uc3QgdG9vbHRpcFRleHQgPSBgU3dpdGNoIHRvIHdvcmtzcGFjZSAke3dvcmtzcGFjZU5hbWV9YFxuICAgIGNvbnN0IGN1cnNvciA9IHdvcmtzcGFjZS5mb2N1c2VkXG4gICAgICAgID8gR29oYW4uQ3Vyc29yLkRFRkFVTFRcbiAgICAgICAgOiBHb2hhbi5DdXJzb3IuUE9JTlRFUlxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgY3NzQ2xhc3Nlcz17Y2xhc3Nlc31cbiAgICAgICAgICAgIG9uQ2xpY2tlZD17KCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgd29ya3NwYWNlLnJlYWwuaWQgPT09IGh5cHJsYW5kLmdldF9mb2N1c2VkX3dvcmtzcGFjZSgpPy5pZFxuICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB3b3Jrc3BhY2UucmVhbC5mb2N1cygpXG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgdG9vbHRpcFRleHQ9e3Rvb2x0aXBUZXh0fVxuICAgICAgICAgICAgY3Vyc29yPXtjdXJzb3J9XG4gICAgICAgID5cbiAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgIGxhYmVsPXt3b3Jrc3BhY2VOYW1lfVxuICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIldvcmtzcGFjZUJ1dHRvbkxhYmVsXCJdfVxuICAgICAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLlNUQVJUfVxuICAgICAgICAgICAgICAgIHVzZVVuZGVybGluZT17dHJ1ZX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgIDwvYnV0dG9uPlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgV29ya3NwYWNlc1xuIiwgImltcG9ydCBQYW5nbyBmcm9tIFwiZ2k6Ly9QYW5nbz92ZXJzaW9uPTEuMFwiXG5pbXBvcnQgeyBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIlxuaW1wb3J0IHsgY3JlYXRlQmluZGluZywgV2l0aCB9IGZyb20gXCJhZ3NcIlxuaW1wb3J0IEFzdGFsSHlwcmxhbmQgZnJvbSBcImdpOi8vQXN0YWxIeXBybGFuZD92ZXJzaW9uPTAuMVwiXG5cbmNvbnN0IGh5cHJsYW5kID0gQXN0YWxIeXBybGFuZC5nZXRfZGVmYXVsdCgpXG5cbmNvbnN0IEZvY3VzZWRDbGllbnQgPSAoKSA9PiB7XG4gICAgY29uc3QgZm9jdXNlZENsaWVudCA9IGNyZWF0ZUJpbmRpbmcoaHlwcmxhbmQsIFwiZm9jdXNlZENsaWVudFwiKVxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPGJveFxuICAgICAgICAgICAgbmFtZT17XCJGb2N1c2VkQ2xpZW50XCJ9XG4gICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJGb2N1c2VkQ2xpZW50XCJdfVxuICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgdmFsaWduPXtHdGsuQWxpZ24uQkFTRUxJTkV9XG4gICAgICAgID5cbiAgICAgICAgICAgIDxXaXRoIHZhbHVlPXtmb2N1c2VkQ2xpZW50fT5cbiAgICAgICAgICAgICAgICB7KGZvY3VzZWRDbGllbnQpID0+IChcbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD17Zm9jdXNlZENsaWVudD8udGl0bGV9XG4gICAgICAgICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJGb2N1c2VkQ2xpZW50TGFiZWxcIl19XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXhXaWR0aENoYXJzPXs0OH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsbGlwc2l6ZT17UGFuZ28uRWxsaXBzaXplTW9kZS5NSURETEV9XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvV2l0aD5cbiAgICAgICAgPC9ib3g+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBGb2N1c2VkQ2xpZW50XG4iLCAiaW1wb3J0IExhdW5jaGVyIGZyb20gXCIuL01vZHVsZXMvTGF1bmNoZXJcIlxuaW1wb3J0IFNlcGFyYXRvciBmcm9tIFwiLi4vY29tbW9ucy9TZXBhcmF0b3JcIlxuaW1wb3J0IFdvcmtzcGFjZXMgZnJvbSBcIi4vTW9kdWxlcy9Xb3Jrc3BhY2VzXCJcbmltcG9ydCBGb2N1c2VkQ2xpZW50IGZyb20gXCIuL01vZHVsZXMvRm9jdXNlZENsaWVudFwiXG5pbXBvcnQgeyBHZGssIEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiXG5cbmNvbnN0IExlZnQgPSAoKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGJveFxuICAgICAgICAgICAgbmFtZT17YExlZnRgfVxuICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiU2VjdGlvblwiLCBcIkxlZnRcIl19XG4gICAgICAgICAgICBoZXhwYW5kPXt0cnVlfVxuICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uU1RBUlR9XG4gICAgICAgICAgICB2YWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICBzcGFjaW5nPXsxMH1cbiAgICAgICAgPlxuICAgICAgICAgICAgPExhdW5jaGVyIC8+XG5cbiAgICAgICAgICAgIDxTZXBhcmF0b3Igb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0gLz5cblxuICAgICAgICAgICAgPFdvcmtzcGFjZXMgLz5cblxuICAgICAgICAgICAgPFNlcGFyYXRvciBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfSAvPlxuXG4gICAgICAgICAgICA8Rm9jdXNlZENsaWVudCAvPlxuICAgICAgICA8L2JveD5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IExlZnRcbiIsICJpbXBvcnQgeyBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIlxuaW1wb3J0IEdvaGFuIGZyb20gXCIuLi8uLi8uLi9zZXJ2aWNlcy9Hb2hhblwiXG5pbXBvcnQgQXN0YWxUcmF5IGZyb20gXCJnaTovL0FzdGFsVHJheT92ZXJzaW9uPTAuMVwiXG5pbXBvcnQgeyBjcmVhdGVCaW5kaW5nLCBGb3IgfSBmcm9tIFwiYWdzXCJcblxuZnVuY3Rpb24gZ2V0U2VhcmNoV2l0aChpdGVtOiBBc3RhbFRyYXkuVHJheUl0ZW0pIHtcbiAgICBjb25zdCB0aXRsZSA9IGl0ZW0udGl0bGVcbiAgICBjb25zdCB0b29sdGlwTWFya3VwID0gaXRlbS50b29sdGlwTWFya3VwXG4gICAgcmV0dXJuIHRpdGxlICYmIHRpdGxlLmxlbmd0aCA/IHRpdGxlIDogdG9vbHRpcE1hcmt1cFxufVxuXG5mdW5jdGlvbiB0b1RpdGxlQ2FzZShzdHI6IHN0cmluZykge1xuICAgIHJldHVybiBzdHJcbiAgICAgICAgLnRvTG93ZXJDYXNlKClcbiAgICAgICAgLnNwbGl0KFwiIFwiKVxuICAgICAgICAubWFwKCh3b3JkKSA9PiB3b3JkLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgd29yZC5zbGljZSgxKSlcbiAgICAgICAgLmpvaW4oXCIgXCIpXG59XG5cbmZ1bmN0aW9uIGdldFRvb2x0aXBNYXJrdXAoaXRlbTogQXN0YWxUcmF5LlRyYXlJdGVtKSB7XG4gICAgLy8geWVhaCBjYW4gdXNlIHRoaXMgdG8gZ2V0IHRoZSB0b29sdGlwIG1hcmt1cFxuICAgIHJldHVybiB0b1RpdGxlQ2FzZShnZXRTZWFyY2hXaXRoKGl0ZW0pKVxufVxuXG5jb25zdCBDVVNUT01fSUNPTlM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gPSB7XG4gICAgZGlzY29yZDogXCJcdUYxRkZcIixcbiAgICBzdGVhbTogXCJcdUYxQjZcIixcbiAgICBzcG90aWZ5OiBcIlx1RjFCQ1wiLFxufVxuXG5jb25zdCBVU0VfQ1VTVE9NX0lDT05TOiBSZWdFeHBbXSA9IFsvc3RlYW0vaSwgL2Rpc2NvcmQvaSwgL3Nwb3RpZnkvaV1cblxuZnVuY3Rpb24gc2hvdWxkVXNlQ3VzdG9tSWNvbihzZWFyY2hXaXRoOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gVVNFX0NVU1RPTV9JQ09OUy5zb21lKChyZWdleCkgPT4gc2VhcmNoV2l0aC5tYXRjaChyZWdleCkpXG59XG5cbmZ1bmN0aW9uIGdldEN1c3RvbUljb24oaXRlbTogQXN0YWxUcmF5LlRyYXlJdGVtKSB7XG4gICAgY29uc3Qgc2VhcmNoV2l0aCA9IGdldFNlYXJjaFdpdGgoaXRlbSlcbiAgICBjb25zdCBzaG91bGRVc2UgPSBzaG91bGRVc2VDdXN0b21JY29uKHNlYXJjaFdpdGgpXG5cbiAgICBpZiAoIXNob3VsZFVzZSkge1xuICAgICAgICByZXR1cm4gbnVsbFxuICAgIH1cblxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKENVU1RPTV9JQ09OUykpIHtcbiAgICAgICAgaWYgKHNlYXJjaFdpdGgubWF0Y2gobmV3IFJlZ0V4cChrZXksIFwiaVwiKSkpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIFwiXHVEQjgyXHVEQzJCXCJcbn1cblxuY29uc3QgdHJheSA9IEFzdGFsVHJheS5nZXRfZGVmYXVsdCgpXG5cbmNvbnN0IFRyYXkgPSAoKSA9PiB7XG4gICAgY29uc3QgaXRlbXMgPSBjcmVhdGVCaW5kaW5nKHRyYXksIFwiaXRlbXNcIilcblxuICAgIGNvbnN0IGluaXQgPSAoYnRuOiBHdGsuTWVudUJ1dHRvbiwgaXRlbTogQXN0YWxUcmF5LlRyYXlJdGVtKSA9PiB7XG4gICAgICAgIGJ0bi5tZW51TW9kZWwgPSBpdGVtLm1lbnVNb2RlbFxuICAgICAgICBidG4uaW5zZXJ0X2FjdGlvbl9ncm91cChcImRidXNtZW51XCIsIGl0ZW0uYWN0aW9uR3JvdXApXG4gICAgICAgIGl0ZW0uY29ubmVjdChcIm5vdGlmeTo6YWN0aW9uLWdyb3VwXCIsICgpID0+IHtcbiAgICAgICAgICAgIGJ0bi5pbnNlcnRfYWN0aW9uX2dyb3VwKFwiZGJ1c21lbnVcIiwgaXRlbS5hY3Rpb25Hcm91cClcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8Ym94XG4gICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJUcmF5XCJdfVxuICAgICAgICAgICAgc3BhY2luZz17MTB9XG4gICAgICAgICAgICBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICB2YWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgID5cbiAgICAgICAgICAgIDxGb3IgZWFjaD17aXRlbXN9PlxuICAgICAgICAgICAgICAgIHsoaXRlbSkgPT4gKFxuICAgICAgICAgICAgICAgICAgICA8bWVudWJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgJD17KHNlbGYpID0+IGluaXQoc2VsZiwgaXRlbSl9XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJzb3I9e0dvaGFuLkN1cnNvci5QT0lOVEVSfVxuICAgICAgICAgICAgICAgICAgICAgICAgdG9vbHRpcE1hcmt1cD17Z2V0VG9vbHRpcE1hcmt1cChpdGVtKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIlRyYXlNZW51QnV0dG9uXCJdfVxuICAgICAgICAgICAgICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICA8SW1hZ2VJY29uIGl0ZW09e2l0ZW19IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICB7R3RrLlBvcG92ZXJNZW51Lm5ld19mcm9tX21vZGVsKGl0ZW0ubWVudU1vZGVsKX1cbiAgICAgICAgICAgICAgICAgICAgPC9tZW51YnV0dG9uPlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L0Zvcj5cbiAgICAgICAgPC9ib3g+XG4gICAgKVxufVxuXG5jb25zdCBJbWFnZUljb24gPSAoeyBpdGVtIH06IHsgaXRlbTogQXN0YWxUcmF5LlRyYXlJdGVtIH0pID0+IHtcbiAgICBjb25zdCBjdXN0b21JY29uID0gZ2V0Q3VzdG9tSWNvbihpdGVtKVxuXG4gICAgaWYgKGN1c3RvbUljb24pIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxsYWJlbCBjc3NDbGFzc2VzPXtbXCJpY29uXCIsIFwiVHJheUxhYmVsSWNvblwiXX0gbGFiZWw9e2N1c3RvbUljb259IC8+XG4gICAgICAgIClcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8aW1hZ2VcbiAgICAgICAgICAgIGdpY29uPXtpdGVtLmdpY29ufVxuICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiaWNvblwiLCBcIlRyYXlJbWFnZUljb25cIl19XG4gICAgICAgICAgICBwaXhlbFNpemU9ezE2fSAvLyBEb24ndCBmb2dldCB0byBhZGp1c3QgLlRyYXlMYWJlbEljb24gc3R5bGUgdG9vXG4gICAgICAgIC8+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBUcmF5XG4iLCAiaW1wb3J0IHsgR2RrLCBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIlxuaW1wb3J0IFRyYXkgZnJvbSBcIi4vTW9kdWxlcy9UcmF5XCJcblxuY29uc3QgQ2VudGVyID0gKCkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxib3hcbiAgICAgICAgICAgIG5hbWU9e2BDZW50ZXJgfVxuICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiU2VjdGlvblwiLCBcIkNlbnRlclwiXX1cbiAgICAgICAgICAgIGhleHBhbmQ9e3RydWV9XG4gICAgICAgICAgICBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICB2YWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICBzcGFjaW5nPXsxMH1cbiAgICAgICAgPlxuICAgICAgICAgICAgPFRyYXkgLz5cbiAgICAgICAgPC9ib3g+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBDZW50ZXJcbiIsICJpbXBvcnQgR29oYW4gZnJvbSBcIi4uLy4uLy4uL3NlcnZpY2VzL0dvaGFuXCJcbmltcG9ydCB7IGNyZWF0ZUJpbmRpbmcsIGNyZWF0ZVN0YXRlLCBGb3IsIG9uTW91bnQgfSBmcm9tIFwiYWdzXCJcbmltcG9ydCB7IEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiXG5pbXBvcnQgQXN0YWxCYXR0ZXJ5IGZyb20gXCJnaTovL0FzdGFsQmF0dGVyeT92ZXJzaW9uPTAuMVwiXG5pbXBvcnQgeyBleGVjQXN5bmMgfSBmcm9tIFwiYWdzL3Byb2Nlc3NcIlxuXG5leHBvcnQgdHlwZSBQb3dlclByb2ZpbGUgPSBcInBvd2VyLXNhdmVyXCIgfCBcImJhbGFuY2VkXCIgfCBcInBlcmZvcm1hbmNlXCJcblxuYXN5bmMgZnVuY3Rpb24gc2V0UG93ZXJQcm9maWxlKHByb2ZpbGU6IFBvd2VyUHJvZmlsZSkge1xuICAgIGF3YWl0IGV4ZWNBc3luYyhgcG93ZXJwcm9maWxlc2N0bCBzZXQgJHtwcm9maWxlfWApXG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldFBvd2VyUHJvZmlsZSgpIHtcbiAgICBjb25zdCBwID0gKGF3YWl0IGV4ZWNBc3luYyhgcG93ZXJwcm9maWxlc2N0bCBnZXRgKSkgYXMgUG93ZXJQcm9maWxlXG4gICAgcmV0dXJuIHBcbn1cblxuY29uc3QgcHJvZmlsZXMgPSBbXG4gICAge1xuICAgICAgICBuYW1lOiBcIlBvd2VyIFNhdmVyXCIsXG4gICAgICAgIHZhbHVlOiBcInBvd2VyLXNhdmVyXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6IFwiQmFsYW5jZWRcIixcbiAgICAgICAgdmFsdWU6IFwiYmFsYW5jZWRcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogXCJQZXJmb3JtYW5jZVwiLFxuICAgICAgICB2YWx1ZTogXCJwZXJmb3JtYW5jZVwiLFxuICAgIH0sXG5dXG5cbmNvbnN0IGJhdCA9IEFzdGFsQmF0dGVyeS5nZXRfZGVmYXVsdCgpXG5cbmNvbnN0IEJhdHRlcnkgPSAoKSA9PiB7XG4gICAgY29uc3QgW2FjdGl2ZVBvcmZpbGUsIHNldEFjdGl2ZVByb2ZpbGVdID1cbiAgICAgICAgY3JlYXRlU3RhdGU8UG93ZXJQcm9maWxlPihcImJhbGFuY2VkXCIpXG5cbiAgICBvbk1vdW50KCgpID0+IHtcbiAgICAgICAgYXN5bmMgZnVuY3Rpb24gaW5pdCgpIHtcbiAgICAgICAgICAgIGNvbnN0IHByb2ZpbGUgPSBhd2FpdCBnZXRQb3dlclByb2ZpbGUoKVxuXG4gICAgICAgICAgICBzZXRBY3RpdmVQcm9maWxlKHByb2ZpbGUpXG4gICAgICAgIH1cblxuICAgICAgICBpbml0KClcbiAgICB9KVxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPGJveFxuICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiQmF0dGVyeVwiXX1cbiAgICAgICAgICAgIGhleHBhbmQ9e3RydWV9XG4gICAgICAgICAgICBjdXJzb3I9e0dvaGFuLkN1cnNvci5QT0lOVEVSfVxuICAgICAgICA+XG4gICAgICAgICAgICA8bWVudWJ1dHRvbiBjc3NDbGFzc2VzPXtbXCJCYXR0ZXJ5TWVudVwiXX0+XG4gICAgICAgICAgICAgICAgPGJveCBzcGFjaW5nPXs1fT5cbiAgICAgICAgICAgICAgICAgICAgPGltYWdlXG4gICAgICAgICAgICAgICAgICAgICAgICBpY29uTmFtZT17Y3JlYXRlQmluZGluZyhiYXQsIFwiYmF0dGVyeUljb25OYW1lXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiaWNvblwiLCBcIkljb25cIl19XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9e2NyZWF0ZUJpbmRpbmcoYmF0LCBcImJhdHRlcnlMZXZlbFwiKS5hcyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAodikgPT4gYCR7KHYgKiAxMDApLnRvRml4ZWQoMCl9JWBcbiAgICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJQZXJjZW50YWdlXCJdfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgIDxwb3BvdmVyPlxuICAgICAgICAgICAgICAgICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9IHNwYWNpbmc9ezEwfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtwcm9maWxlcy5tYXAoKHByb2ZpbGUpID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2tlZD17YXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgc2V0UG93ZXJQcm9maWxlKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2ZpbGUudmFsdWUgYXMgUG93ZXJQcm9maWxlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldEFjdGl2ZVByb2ZpbGUoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvZmlsZS52YWx1ZSBhcyBQb3dlclByb2ZpbGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uU1RBUlR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e2FjdGl2ZVBvcmZpbGUuYXMoKHApID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwID09PSBwcm9maWxlLnZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBbXCJQcm9maWxlQnV0dG9uXCIsIFwiQWN0aXZlXCJdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBbXCJQcm9maWxlQnV0dG9uXCJdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGxhYmVsPXtwcm9maWxlLm5hbWV9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgPC9wb3BvdmVyPlxuICAgICAgICAgICAgPC9tZW51YnV0dG9uPlxuICAgICAgICA8L2JveD5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IEJhdHRlcnlcbiIsICJpbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCJnbmltXCJcbmltcG9ydCBBc3RhbElPIGZyb20gXCJnaTovL0FzdGFsSU9cIlxuaW1wb3J0IHsgZXhlY0FzeW5jIH0gZnJvbSBcIi4vcHJvY2Vzcy5qc1wiXG5cbmV4cG9ydCB0eXBlIFRpbWUgPSBBc3RhbElPLlRpbWVcbmV4cG9ydCBjb25zdCBUaW1lID0gQXN0YWxJTy5UaW1lXG5cbmV4cG9ydCBmdW5jdGlvbiBpbnRlcnZhbChpbnRlcnZhbDogbnVtYmVyLCBjYWxsYmFjaz86ICgpID0+IHZvaWQpIHtcbiAgICByZXR1cm4gQXN0YWxJTy5UaW1lLmludGVydmFsKGludGVydmFsLCAoKSA9PiB2b2lkIGNhbGxiYWNrPy4oKSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRpbWVvdXQodGltZW91dDogbnVtYmVyLCBjYWxsYmFjaz86ICgpID0+IHZvaWQpIHtcbiAgICByZXR1cm4gQXN0YWxJTy5UaW1lLnRpbWVvdXQodGltZW91dCwgKCkgPT4gdm9pZCBjYWxsYmFjaz8uKCkpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpZGxlKGNhbGxiYWNrPzogKCkgPT4gdm9pZCkge1xuICAgIHJldHVybiBBc3RhbElPLlRpbWUuaWRsZSgoKSA9PiB2b2lkIGNhbGxiYWNrPy4oKSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBvbGwoXG4gICAgaW5pdDogc3RyaW5nLFxuICAgIGludGVydmFsOiBudW1iZXIsXG4gICAgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10sXG4pOiBBY2Nlc3NvcjxzdHJpbmc+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQb2xsPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgaW50ZXJ2YWw6IG51bWJlcixcbiAgICBleGVjOiBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICB0cmFuc2Zvcm06IChzdGRvdXQ6IHN0cmluZywgcHJldjogVCkgPT4gVCxcbik6IEFjY2Vzc29yPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQb2xsPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgaW50ZXJ2YWw6IG51bWJlcixcbiAgICBmbjogKHByZXY6IFQpID0+IFQgfCBQcm9taXNlPFQ+LFxuKTogQWNjZXNzb3I8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBvbGw8VD4oXG4gICAgaW5pdDogVCxcbiAgICBpdmFsOiBudW1iZXIsXG4gICAgZXhlY09yRm46IHN0cmluZyB8IHN0cmluZ1tdIHwgKChwcmV2OiBUKSA9PiBUIHwgUHJvbWlzZTxUPiksXG4gICAgdHJhbnNmb3JtPzogKHN0ZG91dDogc3RyaW5nLCBwcmV2OiBUKSA9PiBULFxuKTogQWNjZXNzb3I8VD4ge1xuICAgIGxldCBjdXJyZW50VmFsdWUgPSBpbml0XG4gICAgbGV0IHRpbWVyOiBBc3RhbElPLlRpbWUgfCBudWxsID0gbnVsbFxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDwoKSA9PiB2b2lkPigpXG5cbiAgICBmdW5jdGlvbiBzdWJzY3JpYmUoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiAoKSA9PiB2b2lkIHtcbiAgICAgICAgZnVuY3Rpb24gc2V0KHZhbHVlOiBUKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUgIT09IGN1cnJlbnRWYWx1ZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IHZhbHVlXG4gICAgICAgICAgICAgICAgc3Vic2NyaWJlcnMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgdGltZXIgPSBpbnRlcnZhbChpdmFsLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBleGVjT3JGbiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZXhlY09yRm4oY3VycmVudFZhbHVlKVxuICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZS50aGVuKHNldClcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldCh2YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGV4ZWNBc3luYyhleGVjT3JGbikudGhlbigoc3Rkb3V0KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXQodHJhbnNmb3JtID8gdHJhbnNmb3JtKHN0ZG91dCwgY3VycmVudFZhbHVlKSA6IChzdGRvdXQgYXMgVCkpXG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICB0aW1lcj8uY2FuY2VsKClcbiAgICAgICAgICAgICAgICB0aW1lciA9IG51bGxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gY3VycmVudFZhbHVlLCBzdWJzY3JpYmUpXG59XG4iLCAiaW1wb3J0IHsgY3JlYXRlUG9sbCB9IGZyb20gXCJhZ3MvdGltZVwiXG5cbmNvbnN0IFRpbWUgPSAoKSA9PiB7XG4gICAgY29uc3QgZGF0ZXRpbWUgPSBjcmVhdGVQb2xsKFxuICAgICAgICBcIkhlbGxvXCIsXG4gICAgICAgIDEwMDAsXG4gICAgICAgIFwiZGF0ZSArJyViICVkLCAlSDolTSdcIixcbiAgICAgICAgKG91dHB1dCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIG91dHB1dC50cmltKClcbiAgICAgICAgfVxuICAgIClcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiVGltZVwiXX0gaGV4cGFuZD17dHJ1ZX0gc3BhY2luZz17MTB9PlxuICAgICAgICAgICAgPGxhYmVsIGxhYmVsPXtkYXRldGltZX0gLz5cbiAgICAgICAgPC9ib3g+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBUaW1lXG4iLCAiaW1wb3J0IEFzdGFsV3AgZnJvbSBcImdpOi8vQXN0YWxXcD92ZXJzaW9uPTAuMVwiXG5pbXBvcnQgR29oYW4gZnJvbSBcIi4uLy4uLy4uL3NlcnZpY2VzL0dvaGFuXCJcbmltcG9ydCB7IGNyZWF0ZUJpbmRpbmcsIEZvciB9IGZyb20gXCJhZ3NcIlxuaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFncy9ndGs0XCJcblxuY29uc3Qgd3AgPSBBc3RhbFdwLmdldF9kZWZhdWx0KClcblxuY29uc3QgVm9sdW1lID0gKCkgPT4ge1xuICAgIGNvbnN0IHNwZWFrZXJzID0gY3JlYXRlQmluZGluZyh3cC5hdWRpbywgXCJzcGVha2Vyc1wiKVxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPGJveFxuICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiVm9sdW1lXCJdfVxuICAgICAgICAgICAgaGV4cGFuZD17dHJ1ZX1cbiAgICAgICAgICAgIGN1cnNvcj17R29oYW4uQ3Vyc29yLlBPSU5URVJ9XG4gICAgICAgID5cbiAgICAgICAgICAgIDxtZW51YnV0dG9uIGNzc0NsYXNzZXM9e1tcIlZvbHVtZU1lbnVcIl19PlxuICAgICAgICAgICAgICAgIDxib3ggc3BhY2luZz17NX0+XG4gICAgICAgICAgICAgICAgICAgIDxpbWFnZVxuICAgICAgICAgICAgICAgICAgICAgICAgaWNvbk5hbWU9e2NyZWF0ZUJpbmRpbmcoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd3AuZGVmYXVsdFNwZWFrZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJ2b2x1bWVJY29uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJpY29uXCIsIFwiSWNvblwiXX1cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD17Y3JlYXRlQmluZGluZyh3cC5kZWZhdWx0U3BlYWtlciwgXCJ2b2x1bWVcIikuYXMoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKHYpID0+IGAkeyh2ICogMTAwKS50b0ZpeGVkKDApfSVgXG4gICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiUGVyY2VudGFnZVwiXX1cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICA8cG9wb3Zlcj5cbiAgICAgICAgICAgICAgICAgICAgPGJveCBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfSBzcGFjaW5nPXsxMH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Rm9yIGVhY2g9e3NwZWFrZXJzfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7KHNwZWFrZXIpID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGlja2VkPXsoKSA9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNwZWFrZXIuc2V0X2lzX2RlZmF1bHQodHJ1ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLlNUQVJUfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17Y3JlYXRlQmluZGluZyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcGVha2VyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaXNEZWZhdWx0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkuYXMoKGlzRGVmYXVsdCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpc0RlZmF1bHRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBbXCJTcGVha2VyQnV0dG9uXCIsIFwiQWN0aXZlXCJdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogW1wiU3BlYWtlckJ1dHRvblwiXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBsYWJlbD17c3BlYWtlci5kZXNjcmlwdGlvbn0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvRm9yPlxuICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICA8L3BvcG92ZXI+XG4gICAgICAgICAgICA8L21lbnVidXR0b24+XG4gICAgICAgIDwvYm94PlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgVm9sdW1lXG4iLCAiaW1wb3J0IEJhdHRlcnkgZnJvbSBcIi4vTW9kdWxlcy9CYXR0ZXJ5XCJcbmltcG9ydCBUaW1lIGZyb20gXCIuL01vZHVsZXMvVGltZVwiXG5pbXBvcnQgVm9sdW1lIGZyb20gXCIuL01vZHVsZXMvVm9sdW1lXCJcbmltcG9ydCB7IEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiXG5cbmNvbnN0IFJpZ2h0ID0gKCkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxib3hcbiAgICAgICAgICAgIG5hbWU9e2BSaWdodGB9XG4gICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJTZWN0aW9uXCIsIFwiUmlnaHRcIl19XG4gICAgICAgICAgICBoZXhwYW5kPXt0cnVlfVxuICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uRU5EfVxuICAgICAgICAgICAgdmFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgc3BhY2luZz17MTB9XG4gICAgICAgID5cbiAgICAgICAgICAgIDxWb2x1bWUgLz5cblxuICAgICAgICAgICAgPEJhdHRlcnkgLz5cblxuICAgICAgICAgICAgPFRpbWUgLz5cbiAgICAgICAgPC9ib3g+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBSaWdodFxuIiwgImltcG9ydCBMZWZ0IGZyb20gXCIuL0xlZnRcIlxuaW1wb3J0IENlbnRlciBmcm9tIFwiLi9DZW50ZXJcIlxuaW1wb3J0IFJpZ2h0IGZyb20gXCIuL1JpZ2h0XCJcbmltcG9ydCB7IEFzdGFsLCBHZGsgfSBmcm9tIFwiYWdzL2d0azRcIlxuaW1wb3J0IGFwcCBmcm9tIFwiYWdzL2d0azQvYXBwXCJcblxuY29uc3QgQmFyID0gKHsgZ2RrbW9uaXRvciB9OiB7IGdka21vbml0b3I6IEdkay5Nb25pdG9yIH0pID0+IHtcbiAgICBjb25zdCB7IFRPUCwgTEVGVCwgUklHSFQgfSA9IEFzdGFsLldpbmRvd0FuY2hvclxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPHdpbmRvd1xuICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiQmFyXCJdfVxuICAgICAgICAgICAgZ2RrbW9uaXRvcj17Z2RrbW9uaXRvcn1cbiAgICAgICAgICAgIGV4Y2x1c2l2aXR5PXtBc3RhbC5FeGNsdXNpdml0eS5FWENMVVNJVkV9XG4gICAgICAgICAgICBhbmNob3I9e1RPUCB8IExFRlQgfCBSSUdIVH1cbiAgICAgICAgICAgIGFwcGxpY2F0aW9uPXthcHB9XG4gICAgICAgICAgICB2aXNpYmxlPXt0cnVlfVxuICAgICAgICA+XG4gICAgICAgICAgICA8Y2VudGVyYm94XG4gICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiQ29udGFpbmVyXCIsIFwic2hhZG93XCIsIFwicm91bmRlZFwiLCBcImJvcmRlcmVkXCJdfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxMZWZ0ICR0eXBlPVwic3RhcnRcIiAvPlxuICAgICAgICAgICAgICAgIDxDZW50ZXIgJHR5cGU9XCJjZW50ZXJcIiAvPlxuICAgICAgICAgICAgICAgIDxSaWdodCAkdHlwZT1cImVuZFwiIC8+XG4gICAgICAgICAgICA8L2NlbnRlcmJveD5cbiAgICAgICAgPC93aW5kb3c+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBCYXJcbiIsICJpbXBvcnQgeyBBc3RhbCwgR2RrLCBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIlxuaW1wb3J0IHsgY3JlYXRlQ29tcHV0ZWQsIGNyZWF0ZVN0YXRlLCBGb3IsIG9uQ2xlYW51cCB9IGZyb20gXCJhZ3NcIlxuaW1wb3J0IEFzdGFsTm90aWZkIGZyb20gXCJnaTovL0FzdGFsTm90aWZkP3ZlcnNpb249MC4xXCJcbmltcG9ydCBOb3RpZmljYXRpb25JdGVtIGZyb20gXCIuL05vdGlmaWNhdGlvbkl0ZW1cIlxuaW1wb3J0IE5vdGlmaWNhdGlvbiBmcm9tIFwiLi4vLi4vc2VydmljZXMvTm90aWZpY2F0aW9uXCJcbmltcG9ydCBHb2hhbiBmcm9tIFwiLi4vLi4vc2VydmljZXMvR29oYW5cIlxuXG5jb25zdCBub3RpZmQgPSBBc3RhbE5vdGlmZC5nZXRfZGVmYXVsdCgpXG5cbmNvbnN0IE5vdGlmaWNhdGlvbldpbmRvdyA9ICh7IGdka21vbml0b3IgfTogeyBnZGttb25pdG9yOiBHZGsuTW9uaXRvciB9KSA9PiB7XG4gICAgY29uc3QgeyBCT1RUT00sIFJJR0hUIH0gPSBBc3RhbC5XaW5kb3dBbmNob3JcbiAgICBjb25zdCBbbm90aWZpY2F0aW9ucywgc2V0Tm90aWZpY2F0aW9uc10gPSBjcmVhdGVTdGF0ZTxOb3RpZmljYXRpb25bXT4oW10pXG4gICAgY29uc3QgcmV2ZXJzZWQgPSBjcmVhdGVDb21wdXRlZChbbm90aWZpY2F0aW9uc10sIChucykgPT4ge1xuICAgICAgICBjb25zdCBuZXdOID0gWy4uLm5zXVxuICAgICAgICBuZXdOLnJldmVyc2UoKVxuICAgICAgICByZXR1cm4gbmV3TlxuICAgIH0pXG5cbiAgICBjb25zdCBub3RpZmllZEhhbmRsZXIgPSBub3RpZmQuY29ubmVjdChcIm5vdGlmaWVkXCIsIChfLCBpZCwgcmVwbGFjZWQpID0+IHtcbiAgICAgICAgY29uc3Qgbm90aWZpY2F0aW9uID0gbm90aWZkLmdldF9ub3RpZmljYXRpb24oaWQpXG5cbiAgICAgICAgaWYgKHJlcGxhY2VkICYmIG5vdGlmaWNhdGlvbnMuZ2V0KCkuc29tZSgobikgPT4gbi5pZCA9PT0gaWQpKSB7XG4gICAgICAgICAgICBjb25zdCBvbGRzID0gWy4uLm5vdGlmaWNhdGlvbnMuZ2V0KCldXG4gICAgICAgICAgICBjb25zdCBuZXdzID0gW1xuICAgICAgICAgICAgICAgIC4uLm9sZHMuZmlsdGVyKChuKSA9PiBuLmlkICE9PSBpZCksXG4gICAgICAgICAgICAgICAgbmV3IE5vdGlmaWNhdGlvbihub3RpZmljYXRpb24uaWQsIG5vdGlmaWNhdGlvbiwgKGlkKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHNldE5vdGlmaWNhdGlvbnMoKG5zKSA9PiBucy5maWx0ZXIoKG4pID0+IG4uaWQgIT09IGlkKSlcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIF1cbiAgICAgICAgICAgIHNldE5vdGlmaWNhdGlvbnMobmV3cylcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNldE5vdGlmaWNhdGlvbnMoKG5zKSA9PiBbXG4gICAgICAgICAgICAgICAgLi4ubnMsXG4gICAgICAgICAgICAgICAgbmV3IE5vdGlmaWNhdGlvbihub3RpZmljYXRpb24uaWQsIG5vdGlmaWNhdGlvbiwgKGlkKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHNldE5vdGlmaWNhdGlvbnMoKG5zKSA9PiBucy5maWx0ZXIoKG4pID0+IG4uaWQgIT09IGlkKSlcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIF0pXG4gICAgICAgIH1cbiAgICB9KVxuXG4gICAgY29uc3QgcmVzb2x2ZWRIYW5kbGVyID0gbm90aWZkLmNvbm5lY3QoXCJyZXNvbHZlZFwiLCAoXywgaWQpID0+IHtcbiAgICAgICAgc2V0Tm90aWZpY2F0aW9ucygobnMpID0+IG5zLmZpbHRlcigobikgPT4gbi5pZCAhPT0gaWQpKVxuICAgIH0pXG5cbiAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgICBub3RpZmQuZGlzY29ubmVjdChub3RpZmllZEhhbmRsZXIpXG4gICAgICAgIG5vdGlmZC5kaXNjb25uZWN0KHJlc29sdmVkSGFuZGxlcilcbiAgICB9KVxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPHdpbmRvd1xuICAgICAgICAgICAgJD17KHNlbGYpID0+IHtcbiAgICAgICAgICAgICAgICBvbkNsZWFudXAoKCkgPT4gc2VsZi5kZXN0cm95KCkpXG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgbmFtZT17XCJOb3RpZmljYXRpb25XaW5kb3dcIn1cbiAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIk5vdGlmaWNhdGlvbldpbmRvd1wiLCBcImRlYnVnXCJdfVxuICAgICAgICAgICAgZ2RrbW9uaXRvcj17Z2RrbW9uaXRvcn1cbiAgICAgICAgICAgIGFuY2hvcj17Qk9UVE9NIHwgUklHSFR9XG4gICAgICAgICAgICB2aXNpYmxlPXtub3RpZmljYXRpb25zKChucykgPT4gbnMubGVuZ3RoID4gMCl9XG4gICAgICAgID5cbiAgICAgICAgICAgIDxib3hcbiAgICAgICAgICAgICAgICBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfVxuICAgICAgICAgICAgICAgIHNwYWNpbmc9ezEwfVxuICAgICAgICAgICAgICAgIHZhbGlnbj17R3RrLkFsaWduLkVORH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8Ym94XG4gICAgICAgICAgICAgICAgICAgIG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9XG4gICAgICAgICAgICAgICAgICAgIHNwYWNpbmc9ezEwfVxuICAgICAgICAgICAgICAgICAgICB2YWxpZ249e0d0ay5BbGlnbi5FTkR9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICA8Rm9yIGVhY2g9e3JldmVyc2VkfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHsobm90aWZpY2F0aW9uKSA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPE5vdGlmaWNhdGlvbkl0ZW0gbm90aWZpY2F0aW9uPXtub3RpZmljYXRpb259IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICA8L0Zvcj5cbiAgICAgICAgICAgICAgICA8L2JveD5cblxuICAgICAgICAgICAgICAgIDxib3ggc3BhY2luZz17MTB9PlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJiZy1tYWluXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJyb3VuZGVkXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzaGFkb3dcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImJvcmRlcmVkXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGlja2VkPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0Tm90aWZpY2F0aW9ucyhbXSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJzb3I9e0dvaGFuLkN1cnNvci5QT0lOVEVSfVxuICAgICAgICAgICAgICAgICAgICAgICAgaGV4cGFuZD17dHJ1ZX1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgQ2xvc2UgQWxsXG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJiZy1tYWluXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJyb3VuZGVkXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzaGFkb3dcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImJvcmRlcmVkXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGlja2VkPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgbm90aWZpY2F0aW9ucyA9IG5vdGlmZC5nZXRfbm90aWZpY2F0aW9ucygpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm90aWZpY2F0aW9ucy5mb3JFYWNoKChuKSA9PiBuLmRpc21pc3MoKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJzb3I9e0dvaGFuLkN1cnNvci5QT0lOVEVSfVxuICAgICAgICAgICAgICAgICAgICAgICAgaGV4cGFuZD17dHJ1ZX1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgRGlzbWlzcyBBbGxcbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgPC93aW5kb3c+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBOb3RpZmljYXRpb25XaW5kb3dcbiIsICJpbXBvcnQgQXN0YWxOb3RpZmQgZnJvbSBcImdpOi8vQXN0YWxOb3RpZmQ/dmVyc2lvbj0wLjFcIlxuaW1wb3J0IEhlYWRlciBmcm9tIFwiLi9IZWFkZXJcIlxuaW1wb3J0IEJvZHkgZnJvbSBcIi4vQm9keVwiXG5pbXBvcnQgRm9vdGVyIGZyb20gXCIuL0Zvb3RlclwiXG5pbXBvcnQgeyBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIlxuaW1wb3J0IHsgaW50ZXJ2YWwgfSBmcm9tIFwiYWdzL3RpbWVcIlxuaW1wb3J0IE5vdGlmaWNhdGlvbiBmcm9tIFwiLi4vLi4vc2VydmljZXMvTm90aWZpY2F0aW9uXCJcblxuZnVuY3Rpb24gc3RhcnRUcmFuc2l0aW9uKHNlbGY6IEd0ay5XaWRnZXQpIHtcbiAgICBzZWxmLnNldF9vcGFjaXR5KDApXG4gICAgc2VsZi5zaG93KClcblxuICAgIGNvbnN0IGR1cmF0aW9uTXMgPSAzMDBcbiAgICBjb25zdCBpbnRlcnZhbE1zID0gMTZcbiAgICBjb25zdCBpbmNyZW1lbnQgPSBpbnRlcnZhbE1zIC8gZHVyYXRpb25Nc1xuXG4gICAgY29uc3QgaW50ID0gaW50ZXJ2YWwoaW50ZXJ2YWxNcywgKCkgPT4ge1xuICAgICAgICBjb25zdCBvcGFjaXR5ID0gc2VsZi5nZXRfb3BhY2l0eSgpXG4gICAgICAgIGlmIChvcGFjaXR5ID49IDEpIHtcbiAgICAgICAgICAgIGludC5jYW5jZWwoKVxuICAgICAgICB9XG4gICAgICAgIHNlbGYuc2V0X29wYWNpdHkob3BhY2l0eSArIGluY3JlbWVudClcbiAgICB9KVxufVxuXG5jb25zdCBOb3RpZmljYXRpb25JdGVtID0gKHsgbm90aWZpY2F0aW9uIH06IHsgbm90aWZpY2F0aW9uOiBOb3RpZmljYXRpb24gfSkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxib3hcbiAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIk5vdGlmaWNhdGlvbkl0ZW1cIiwgXCJzaGFkb3dcIiwgXCJyb3VuZGVkXCIsIFwiYm9yZGVyZWRcIl19XG4gICAgICAgICAgICBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfVxuICAgICAgICAgICAgJD17KHNlbGYpID0+IHtcbiAgICAgICAgICAgICAgICBzZWxmLnNldF9jc3NfY2xhc3NlcyhbXG4gICAgICAgICAgICAgICAgICAgIFwiTm90aWZpY2F0aW9uSXRlbVwiLFxuICAgICAgICAgICAgICAgICAgICBcInNoYWRvd1wiLFxuICAgICAgICAgICAgICAgICAgICBcInJvdW5kZWRcIixcbiAgICAgICAgICAgICAgICAgICAgXCJib3JkZXJlZFwiLFxuICAgICAgICAgICAgICAgICAgICBub3RpZmljYXRpb24uZGF0YS51cmdlbmN5ID09PSBBc3RhbE5vdGlmZC5VcmdlbmN5LkNSSVRJQ0FMXG4gICAgICAgICAgICAgICAgICAgICAgICA/IFwiQ3JpdGljYWxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgOiBcIlwiLFxuICAgICAgICAgICAgICAgIF0pXG5cbiAgICAgICAgICAgICAgICBzdGFydFRyYW5zaXRpb24oc2VsZilcblxuICAgICAgICAgICAgICAgIGNvbnN0IG1vdXNlRW50ZXIgPSBuZXcgR3RrLkV2ZW50Q29udHJvbGxlck1vdGlvbigpXG5cbiAgICAgICAgICAgICAgICBtb3VzZUVudGVyLmNvbm5lY3QoXCJlbnRlclwiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvbi5zdG9wVGlja2luZygpXG4gICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgIG1vdXNlRW50ZXIuY29ubmVjdChcImxlYXZlXCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgbm90aWZpY2F0aW9uLnN0YXJ0VGlja2luZygpXG4gICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgIHNlbGYuYWRkX2NvbnRyb2xsZXIobW91c2VFbnRlcilcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgICBzcGFjaW5nPXs1fVxuICAgICAgICAgICAgdmV4cGFuZD17ZmFsc2V9XG4gICAgICAgID5cbiAgICAgICAgICAgIDxIZWFkZXIgbm90aWZpY2F0aW9uPXtub3RpZmljYXRpb259IC8+XG5cbiAgICAgICAgICAgIDxCb2R5IG5vdGlmaWNhdGlvbj17bm90aWZpY2F0aW9ufSAvPlxuXG4gICAgICAgICAgICA8Rm9vdGVyIG5vdGlmaWNhdGlvbj17bm90aWZpY2F0aW9ufSAvPlxuICAgICAgICA8L2JveD5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IE5vdGlmaWNhdGlvbkl0ZW1cbiIsICJpbXBvcnQgeyBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIlxuaW1wb3J0IEFzdGFsTm90aWZkIGZyb20gXCJnaTovL0FzdGFsTm90aWZkP3ZlcnNpb249MC4xXCJcbmltcG9ydCBOb3RpZmljYXRpb24gZnJvbSBcIi4uLy4uL3NlcnZpY2VzL05vdGlmaWNhdGlvblwiXG5cbmludGVyZmFjZSBIZWFkZXJQcm9wcyB7XG4gICAgbm90aWZpY2F0aW9uOiBOb3RpZmljYXRpb25cbn1cblxuY29uc3QgSGVhZGVyID0gKHsgbm90aWZpY2F0aW9uIH06IEhlYWRlclByb3BzKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGJveFxuICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiSGVhZGVyXCJdfVxuICAgICAgICAgICAgdmFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgdmV4cGFuZD17ZmFsc2V9XG4gICAgICAgICAgICBoZXhwYW5kPXtmYWxzZX1cbiAgICAgICAgPlxuICAgICAgICAgICAgPGJveFxuICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIkhlYWRlckxlZnRcIl19XG4gICAgICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uU1RBUlR9XG4gICAgICAgICAgICAgICAgdmV4cGFuZD17ZmFsc2V9XG4gICAgICAgICAgICAgICAgc3BhY2luZz17NX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8aW1hZ2VcbiAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiQXBwSWNvblwiXX1cbiAgICAgICAgICAgICAgICAgICAgaWNvbk5hbWU9e1xuICAgICAgICAgICAgICAgICAgICAgICAgbm90aWZpY2F0aW9uLmRhdGEuYXBwSWNvbiB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgbm90aWZpY2F0aW9uLmRhdGEuZGVza3RvcEVudHJ5XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcGl4ZWxTaXplPXsxOH1cbiAgICAgICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIkhlYWRlckxhYmVsXCJdfVxuICAgICAgICAgICAgICAgICAgICBsYWJlbD17YCR7bm90aWZpY2F0aW9uLmRhdGEuYXBwTmFtZSB8fCBcIlVua25vd24gQXBwXCJ9YH1cbiAgICAgICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIkhlYWRlckxhYmVsXCJdfVxuICAgICAgICAgICAgICAgICAgICBsYWJlbD17bm90aWZpY2F0aW9uLnRpY2tbMF0uYXModCA9PiB0LnRvU3RyaW5nKCkpfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2JveD5cblxuICAgICAgICAgICAgPGJveFxuICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIkhlYWRlclJpZ2h0XCJdfVxuICAgICAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLkVORH1cbiAgICAgICAgICAgICAgICBoZXhwYW5kPXt0cnVlfVxuICAgICAgICAgICAgICAgIHNwYWNpbmc9ezV9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIkhlYWRlclRpbWVcIl19XG4gICAgICAgICAgICAgICAgICAgIGxhYmVsPXtuZXcgRGF0ZShcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvbi5kYXRhLnRpbWUgKiAxMDAwXG4gICAgICAgICAgICAgICAgICAgICkudG9Mb2NhbGVEYXRlU3RyaW5nKFwiZW4tVVNcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGF5OiBcIjItZGlnaXRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vbnRoOiBcInNob3J0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBob3VyOiBcIjItZGlnaXRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbnV0ZTogXCIyLWRpZ2l0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWNvbmQ6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGhvdXIxMjogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJDbG9zZUJ1dHRvblwiXX1cbiAgICAgICAgICAgICAgICAgICAgdG9vbHRpcFRleHQ9e1wiQ2xvc2UgTm90aWZpY2F0aW9uXCJ9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2tlZD17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgbm90aWZpY2F0aW9uLmRhdGEuZGlzbWlzcygpXG4gICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY3NzQ2xhc3Nlcz17W1wiSWNvblwiXX0gbGFiZWw9e1wiXHUyNzE1XCJ9IC8+XG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgPC9ib3g+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBIZWFkZXJcbiIsICJpbXBvcnQgeyBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIlxuaW1wb3J0IEFzdGFsTm90aWZkIGZyb20gXCJnaTovL0FzdGFsTm90aWZkP3ZlcnNpb249MC4xXCJcbmltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWI/dmVyc2lvbj0yLjBcIlxuaW1wb3J0IFBhbmdvIGZyb20gXCJnaTovL1BhbmdvP3ZlcnNpb249MS4wXCJcbmltcG9ydCBOb3RpZmljYXRpb24gZnJvbSBcIi4uLy4uL3NlcnZpY2VzL05vdGlmaWNhdGlvblwiXG5cbmNvbnN0IGlzSWNvbiA9IChpY29uOiBzdHJpbmcpID0+IHtcbiAgICBjb25zdCBpY29uVGhlbWUgPSBuZXcgR3RrLkljb25UaGVtZSgpXG4gICAgcmV0dXJuIGljb25UaGVtZS5oYXNfaWNvbihpY29uKVxufVxuXG5jb25zdCBmaWxlRXhpc3RzID0gKHBhdGg6IHN0cmluZykgPT4gR0xpYi5maWxlX3Rlc3QocGF0aCwgR0xpYi5GaWxlVGVzdC5FWElTVFMpXG5cbmNvbnN0IE1BUktVUF9TQUZFX0FQUFMgPSBbXCJIeXByc2hvdFwiXVxuXG5pbnRlcmZhY2UgQm9keVByb3BzIHtcbiAgICBub3RpZmljYXRpb246IE5vdGlmaWNhdGlvblxufVxuXG5jb25zdCBCb2R5ID0gKHsgbm90aWZpY2F0aW9uIH06IEJvZHlQcm9wcykgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxib3hcbiAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIkJvZHlcIl19XG4gICAgICAgICAgICB2YWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICBzcGFjaW5nPXsxMH1cbiAgICAgICAgICAgIHZleHBhbmRcbiAgICAgICAgPlxuICAgICAgICAgICAge25vdGlmaWNhdGlvbi5kYXRhLmltYWdlICYmIGZpbGVFeGlzdHMobm90aWZpY2F0aW9uLmRhdGEuaW1hZ2UpICYmIChcbiAgICAgICAgICAgICAgICA8Ym94IHZhbGlnbj17R3RrLkFsaWduLkNFTlRFUn0gY3NzQ2xhc3Nlcz17W1wiSW1hZ2VcIl19PlxuICAgICAgICAgICAgICAgICAgICA8aW1hZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpbGU9e25vdGlmaWNhdGlvbi5kYXRhLmltYWdlfVxuICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcmZsb3c9e0d0ay5PdmVyZmxvdy5ISURERU59XG4gICAgICAgICAgICAgICAgICAgICAgICBwaXhlbFNpemU9ezQ4fVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAge25vdGlmaWNhdGlvbi5kYXRhLmltYWdlICYmIGlzSWNvbihub3RpZmljYXRpb24uZGF0YS5pbWFnZSkgJiYgKFxuICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiSWNvblwiXX0gdmFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfT5cbiAgICAgICAgICAgICAgICAgICAgPGltYWdlXG4gICAgICAgICAgICAgICAgICAgICAgICBpY29uTmFtZT17bm90aWZpY2F0aW9uLmRhdGEuaW1hZ2V9XG4gICAgICAgICAgICAgICAgICAgICAgICBwaXhlbFNpemU9ezQ4fVxuICAgICAgICAgICAgICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAge25vdGlmaWNhdGlvbi5kYXRhLmFwcEljb24gJiYgZmlsZUV4aXN0cyhub3RpZmljYXRpb24uZGF0YS5hcHBJY29uKSAmJiAoXG4gICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJJY29uXCJdfSB2YWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9PlxuICAgICAgICAgICAgICAgICAgICA8aW1hZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpbGU9e25vdGlmaWNhdGlvbi5kYXRhLmFwcEljb259XG4gICAgICAgICAgICAgICAgICAgICAgICBwaXhlbFNpemU9ezQ4fVxuICAgICAgICAgICAgICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAgPGJveFxuICAgICAgICAgICAgICAgIGhleHBhbmRcbiAgICAgICAgICAgICAgICBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfVxuICAgICAgICAgICAgICAgIHZhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgICAgICBzcGFjaW5nPXs1fVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICBlbGxpcHNpemU9e1BhbmdvLkVsbGlwc2l6ZU1vZGUuRU5EfVxuICAgICAgICAgICAgICAgICAgICBtYXhXaWR0aENoYXJzPXszMH1cbiAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiU3VtbWFyeVwiXX1cbiAgICAgICAgICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uU1RBUlR9XG4gICAgICAgICAgICAgICAgICAgIHhhbGlnbj17MH1cbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9e25vdGlmaWNhdGlvbi5kYXRhLnN1bW1hcnl9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICB7bm90aWZpY2F0aW9uLmRhdGEuYm9keSAmJiAoXG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiQm9keVwiXX1cbiAgICAgICAgICAgICAgICAgICAgICAgIG1heFdpZHRoQ2hhcnM9ezMwfVxuICAgICAgICAgICAgICAgICAgICAgICAgd3JhcFxuICAgICAgICAgICAgICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uU1RBUlR9XG4gICAgICAgICAgICAgICAgICAgICAgICB4YWxpZ249ezB9XG4gICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD17bm90aWZpY2F0aW9uLmRhdGEuYm9keX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHVzZU1hcmt1cD17TUFSS1VQX1NBRkVfQVBQUy5pbmNsdWRlcyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub3RpZmljYXRpb24uZGF0YS5hcHBOYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgPC9ib3g+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBCb2R5XG4iLCAiaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFncy9ndGs0XCJcbmltcG9ydCB7IGV4ZWNBc3luYyB9IGZyb20gXCJhZ3MvcHJvY2Vzc1wiXG5pbXBvcnQgQXN0YWxIeXBybGFuZCBmcm9tIFwiZ2k6Ly9Bc3RhbEh5cHJsYW5kP3ZlcnNpb249MC4xXCJcbmltcG9ydCBBc3RhbE5vdGlmZCBmcm9tIFwiZ2k6Ly9Bc3RhbE5vdGlmZD92ZXJzaW9uPTAuMVwiXG5pbXBvcnQgTm90aWZpY2F0aW9uIGZyb20gXCIuLi8uLi9zZXJ2aWNlcy9Ob3RpZmljYXRpb25cIlxuXG5jb25zdCBoeXBybGFuZCA9IEFzdGFsSHlwcmxhbmQuZ2V0X2RlZmF1bHQoKVxuXG5pbnRlcmZhY2UgQ3VzdG9tQWN0aW9uIHtcbiAgICBsYWJlbDogc3RyaW5nXG4gICAgYWN0aW9uOiAobm90aWZpY2F0aW9uOiBBc3RhbE5vdGlmZC5Ob3RpZmljYXRpb24pID0+IHZvaWRcbn1cblxuY29uc3QgY3VzdG9tQWN0aW9uczogUmVjb3JkPHN0cmluZywgQ3VzdG9tQWN0aW9uW10+ID0ge1xuICAgIEh5cHJzaG90OiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIGxhYmVsOiBcIk9wZW5cIixcbiAgICAgICAgICAgIGFjdGlvbjogKG5vdGlmaWNhdGlvbjogQXN0YWxOb3RpZmQuTm90aWZpY2F0aW9uKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgZmlsZSA9IG5vdGlmaWNhdGlvbi5hcHBJY29uXG4gICAgICAgICAgICAgICAgY29uc3QgZGlyID0gZmlsZS5zdWJzdHJpbmcoMCwgZmlsZS5sYXN0SW5kZXhPZihcIi9cIikpXG5cbiAgICAgICAgICAgICAgICBleGVjQXN5bmMoYHhkZy1vcGVuICR7ZGlyfWApXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBsYWJlbDogXCJWaWV3XCIsXG4gICAgICAgICAgICBhY3Rpb246IChub3RpZmljYXRpb246IEFzdGFsTm90aWZkLk5vdGlmaWNhdGlvbikgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGZpbGUgPSBub3RpZmljYXRpb24uYXBwSWNvblxuICAgICAgICAgICAgICAgIGV4ZWNBc3luYyhgeGRnLW9wZW4gJHtmaWxlfWApXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBsYWJlbDogXCJFZGl0XCIsXG4gICAgICAgICAgICBhY3Rpb246IChub3RpZmljYXRpb246IEFzdGFsTm90aWZkLk5vdGlmaWNhdGlvbikgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGZpbGUgPSBub3RpZmljYXRpb24uYXBwSWNvblxuICAgICAgICAgICAgICAgIGV4ZWNBc3luYyhgc3dhcHB5IC1mICR7ZmlsZX1gKVxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICBdLFxufVxuXG5pbnRlcmZhY2UgRm9vdGVyUHJvcHMge1xuICAgIG5vdGlmaWNhdGlvbjogTm90aWZpY2F0aW9uXG59XG5cbmNvbnN0IEZvb3RlciA9ICh7IG5vdGlmaWNhdGlvbiB9OiBGb290ZXJQcm9wcykgPT4ge1xuICAgIGNvbnN0IGFjdGlvbnMgPSBub3RpZmljYXRpb24uZGF0YS5nZXRfYWN0aW9ucygpXG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIkZvb3RlclwiXX0+XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJBY3Rpb25zXCJdfSBzcGFjaW5nPXs2fT5cbiAgICAgICAgICAgICAgICAgICAge2FjdGlvbnMubWFwKChhY3Rpb24pID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZXhwYW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGlja2VkPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvbi5kYXRhLmludm9rZShhY3Rpb24uaWQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvbi5kYXRhLmRpc21pc3MoKVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNsaWVudHMgPSBoeXBybGFuZC5nZXRfY2xpZW50cygpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNsaWVudCA9IGNsaWVudHMuZmluZCgoYykgPT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGMuY2xhc3NcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAudG9Mb3dlckNhc2UoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5pbmNsdWRlcyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm90aWZpY2F0aW9uLmRhdGEuYXBwTmFtZS50b0xvd2VyQ2FzZSgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNsaWVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHlwcmxhbmQuZGlzcGF0Y2goXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJmb2N1c3dpbmRvd1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGBjbGFzczoke2NsaWVudC5jbGFzc31gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD17YWN0aW9uLmxhYmVsfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhleHBhbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICkpfVxuXG4gICAgICAgICAgICAgICAgICAgIHtjdXN0b21BY3Rpb25zW25vdGlmaWNhdGlvbi5kYXRhLmFwcE5hbWVdPy5tYXAoXG4gICAgICAgICAgICAgICAgICAgICAgICAoY3VzdG9tQWN0aW9uKSA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZXhwYW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2tlZD17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VzdG9tQWN0aW9uLmFjdGlvbihub3RpZmljYXRpb24uZGF0YSlcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm90aWZpY2F0aW9uLmRhdGEuZGlzbWlzcygpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPXtjdXN0b21BY3Rpb24ubGFiZWx9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZXhwYW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICB9XG4gICAgICAgIDwvYm94PlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgRm9vdGVyXG4iLCAiaW1wb3J0IHsgY3JlYXRlU3RhdGUsIFN0YXRlIH0gZnJvbSBcImFnc1wiXG5pbXBvcnQgeyBpbnRlcnZhbCwgVGltZSB9IGZyb20gXCJhZ3MvdGltZVwiXG5pbXBvcnQgQXN0YWxOb3RpZmQgZnJvbSBcImdpOi8vQXN0YWxOb3RpZmQ/dmVyc2lvbj0wLjFcIlxuXG5jb25zdCBUSUNLID0gMTBcbmNvbnN0IENSSVRJQ0FMX1RJQ0sgPSAzMFxuXG5jbGFzcyBOb3RpZmljYXRpb24ge1xuICAgIHB1YmxpYyBpZDogbnVtYmVyXG5cbiAgICBwdWJsaWMgdGljazogU3RhdGU8bnVtYmVyPlxuXG4gICAgcHVibGljIGRhdGE6IEFzdGFsTm90aWZkLk5vdGlmaWNhdGlvblxuXG4gICAgcHJpdmF0ZSBkaXNtaXNzZXI6IChpZDogbnVtYmVyKSA9PiB2b2lkXG5cbiAgICBwcml2YXRlIGludGVydmFsPzogVGltZVxuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIGlkOiBudW1iZXIsXG4gICAgICAgIGRhdGE6IEFzdGFsTm90aWZkLk5vdGlmaWNhdGlvbixcbiAgICAgICAgZGlzbWlzc2VyOiAoaWQ6IG51bWJlcikgPT4gdm9pZFxuICAgICkge1xuICAgICAgICB0aGlzLmlkID0gaWRcblxuICAgICAgICB0aGlzLmRhdGEgPSBkYXRhXG5cbiAgICAgICAgdGhpcy50aWNrID0gY3JlYXRlU3RhdGUoXG4gICAgICAgICAgICBkYXRhLnVyZ2VuY3kgPT09IEFzdGFsTm90aWZkLlVyZ2VuY3kuQ1JJVElDQUwgPyBDUklUSUNBTF9USUNLIDogVElDS1xuICAgICAgICApXG5cbiAgICAgICAgdGhpcy5kaXNtaXNzZXIgPSBkaXNtaXNzZXJcblxuICAgICAgICB0aGlzLnN0YXJ0VGlja2luZygpXG4gICAgfVxuXG4gICAgcHVibGljIHN0YXJ0VGlja2luZygpIHtcbiAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIHRpbWVyIGFscmVhZHkgZXhpc3RzXG4gICAgICAgIGlmICh0aGlzLmludGVydmFsKSB7XG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFN0YXJ0IHRoZSB0aW1lclxuICAgICAgICB0aGlzLmludGVydmFsID0gaW50ZXJ2YWwoMTAwMCwgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgY3VycmVudFRpY2sgPSB0aGlzLnRpY2tbMF0uZ2V0KClcblxuICAgICAgICAgICAgaWYgKGN1cnJlbnRUaWNrIDw9IDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLmludGVydmFsPy5jYW5jZWwoKVxuICAgICAgICAgICAgICAgIHRoaXMuaW50ZXJ2YWwgPSB1bmRlZmluZWRcblxuICAgICAgICAgICAgICAgIHRoaXMuZGlzbWlzc2VyKHRoaXMuaWQpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMudGlja1sxXShjdXJyZW50VGljayAtIDEpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgcHVibGljIHN0b3BUaWNraW5nKCkge1xuICAgICAgICAvLyBTdG9wIHRoZSB0aW1lclxuICAgICAgICB0aGlzLmludGVydmFsPy5jYW5jZWwoKVxuICAgICAgICB0aGlzLmludGVydmFsID0gdW5kZWZpbmVkXG5cbiAgICAgICAgdGhpcy50aWNrWzFdKFRJQ0spIC8vIFJlc2V0IHRoZSB0aWNrXG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBOb3RpZmljYXRpb25cbiIsICJpbXBvcnQgYXBwIGZyb20gXCJhZ3MvZ3RrNC9hcHBcIlxuaW1wb3J0IEdvaGFuIGZyb20gXCIuL3NlcnZpY2VzL0dvaGFuXCJcbmltcG9ydCB7IGNyZWF0ZUJpbmRpbmcsIEZvciwgVGhpcyB9IGZyb20gXCJhZ3NcIlxuaW1wb3J0IEJhciBmcm9tIFwiLi93aWRnZXRzL0Jhci9CYXJcIlxuaW1wb3J0IFRoZW1lIGZyb20gXCIuL3NlcnZpY2VzL1RoZW1lXCJcbmltcG9ydCBOb3RpZmljYXRpb25XaW5kb3cgZnJvbSBcIi4vd2lkZ2V0cy9Ob3RpZmljYXRpb24vTm90aWZpY2F0aW9uV2luZG93XCJcblxuR29oYW4uc3RhcnQoKVxuXG5hcHAuc3RhcnQoe1xuICAgIGluc3RhbmNlTmFtZTogXCJCYW5Hb2hhblwiLFxuICAgIGd0a1RoZW1lOiBcIkFkd2FpdGFcIixcbiAgICBtYWluKCkge1xuICAgICAgICBjb25zdCB0aGVtZSA9IG5ldyBUaGVtZSgpXG4gICAgICAgIHRoZW1lLnN0YXJ0KClcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IG1vbml0b3JzID0gY3JlYXRlQmluZGluZyhhcHAsIFwibW9uaXRvcnNcIilcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPEZvciBlYWNoPXttb25pdG9yc30+XG4gICAgICAgICAgICAgICAgeyhtb25pdG9yKSA9PiAoXG4gICAgICAgICAgICAgICAgICAgIDxUaGlzIHRoaXM9e2FwcH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8QmFyIGdka21vbml0b3I9e21vbml0b3J9IC8+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxOb3RpZmljYXRpb25XaW5kb3cgZ2RrbW9uaXRvcj17bW9uaXRvcn0gLz5cbiAgICAgICAgICAgICAgICAgICAgPC9UaGlzPlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L0Zvcj5cbiAgICAgICAgKVxuICAgIH0sXG59KVxuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUFBLE9BQU9BLFdBQVU7QUFDakIsT0FBTyxTQUFTO0FBQ2hCLE9BQU8sV0FBVzs7O0FDSWxCLFNBQVMsU0FBUyxLQUFhO0FBQzNCLFNBQU8sSUFDRixRQUFRLG1CQUFtQixPQUFPLEVBQ2xDLFdBQVcsS0FBSyxHQUFHLEVBQ25CLFlBQVk7QUFDckI7QUFFQSxlQUFlLFNBQVlDLE1BQThCQyxRQUF1QjtBQUM1RSxTQUFPRCxLQUFJLEtBQUssQ0FBQyxNQUFNQyxPQUFNLEVBQUUsT0FBTyxDQUFDLEVBQUUsTUFBTSxNQUFNLE1BQU07QUFDL0Q7QUFFQSxTQUFTLE1BQXdCLE9BQVUsTUFBZ0M7QUFDdkUsU0FBTyxlQUFlLE9BQU8sTUFBTTtBQUFBLElBQy9CLE1BQU07QUFDRixhQUFPLEtBQUssT0FBTyxTQUFTLElBQUksQ0FBQyxFQUFFLEVBQUU7QUFBQSxJQUN6QztBQUFBLEVBQ0osQ0FBQztBQUNMO0FBRUEsTUFBTSxTQUFTLE9BQU8sZ0JBQWdCLEdBQUcsQ0FBQyxFQUFFLE1B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UztBQUFBLGtCQUNaO0FBQUE7QUFBQSxjQUVEO0FBQUEsZUFDSjtBQUFBO0FBQUE7QUFBQSxNQUNKO0FBQUE7QUFBQSxFQUNKO0FBRVI7QUFFQSxJQUFPLDZCQUFROzs7QU01R2YsY0FBTSxNQUFNO0FBRVosWUFBSSxNQUFNO0FBQUEsRUFDTixjQUFjO0FBQUEsRUFDZCxVQUFVO0FBQUEsRUFDVixPQUFPO0FBQ0gsVUFBTSxRQUFRLElBQUksY0FBTTtBQUN4QixVQUFNLE1BQU07QUFFWixVQUFNLFdBQVcsY0FBYyxhQUFLLFVBQVU7QUFFOUMsV0FDSSxvQkFBQyxPQUFJLE1BQU0sVUFDTixXQUFDLFlBQ0UscUJBQUMsUUFBSyxNQUFNLGFBQ1I7QUFBQSwwQkFBQyxlQUFJLFlBQVksU0FBUztBQUFBLE1BRTFCLG9CQUFDLDhCQUFtQixZQUFZLFNBQVM7QUFBQSxPQUM3QyxHQUVSO0FBQUEsRUFFUjtBQUNKLENBQUM7IiwKICAibmFtZXMiOiBbIkdMaWIiLCAibW9kIiwgInBhdGNoIiwgIk5vdGlmaWNhdGlvbiIsICJUcmF5IiwgIkdPYmplY3QiLCAic25ha2VpZnkiLCAic25ha2VpZnkiLCAic2V0IiwgIkdPYmplY3QiLCAia2V5IiwgIm9iamVjdCIsICJHT2JqZWN0IiwgIm1vZCIsICJHT2JqZWN0IiwgInJlbW92ZSIsICJyZW1vdmUiLCAiR09iamVjdCIsICJHTGliIiwgIkFzdGFsIiwgIkd0ayIsICJHaW8iLCAiR0xpYiIsICJBc3RhbCIsICJBc3RhbCIsICJHTGliIiwgIkdpbyIsICJHdGsiLCAiQXN0YWwiLCAiR3RrIiwgIkdpbyIsICJHT2JqZWN0IiwgIkd0ayIsICJHaW8iLCAiYWRkQ2hpbGQiLCAiY3NzIiwgIkdPYmplY3QiLCAiaW5kZXgiLCAiR3RrIiwgIkFzdGFsIiwgIkd0ayIsICJmb2N1c2VkIiwgIkd0ayIsICJBc3RhbEh5cHJsYW5kIiwgImh5cHJsYW5kIiwgIkFzdGFsSHlwcmxhbmQiLCAiR3RrIiwgImZvY3VzZWRDbGllbnQiLCAiR3RrIiwgIkd0ayIsICJHdGsiLCAiR3RrIiwgIkFzdGFsSU8iLCAiQXN0YWxJTyIsICJpbnRlcnZhbCIsICJzZXQiLCAiVGltZSIsICJHdGsiLCAiR3RrIiwgIkFzdGFsIiwgIkFzdGFsTm90aWZkIiwgIkd0ayIsICJHTGliIiwgIlBhbmdvIiwgIkd0ayIsICJHTGliIiwgIlBhbmdvIiwgIkFzdGFsSHlwcmxhbmQiLCAiaHlwcmxhbmQiLCAiQXN0YWxIeXBybGFuZCIsICJHdGsiLCAiR3RrIiwgIkFzdGFsTm90aWZkIiwgIkFzdGFsTm90aWZkIiwgIkFzdGFsIiwgImlkIiwgIm5zIiwgIkd0ayIsICJub3RpZmljYXRpb25zIl0KfQo=

EOF

LD_PRELOAD="/usr/lib/libgtk4-layer-shell.so" /usr/bin/gjs -m $file $@